<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>apply 与 call</title>
      <link href="/artical/5bea93f3.html"/>
      <url>/artical/5bea93f3.html</url>
      
        <content type="html"><![CDATA[<h1>apply 与 call</h1><p>共同点: 修改<code>this</code>指向问题</p><p>不同点: 参数的形式不同，apply是将多个参数组成一个数组，call是直接传入多个参数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; begin </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">number</span>&#125; end </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">loop1</span>(<span class="params">begin = <span class="number">0</span>, end</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;loop1&quot;</span>);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = begin; i &lt; end; i++) &#123;</span><br><span class="line">    <span class="keyword">let</span> k = i / <span class="number">1000</span>;  <span class="comment">// 执行一些操作</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 执行函数fun, 并返回其运行时间</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">Function</span>&#125; <span class="variable">fun</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  &#123;<span class="type">...any</span>&#125; args  rest参数, 可传入任意数量和类型的值, 传入fun函数的参数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getRunningTime</span>(<span class="params">fun, ...args</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> begin = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line">  fun.<span class="title function_">apply</span>(<span class="variable language_">this</span>, args); <span class="comment">// args是一个数组, 与  fun.call(this, ...args); 功能相同</span></span><br><span class="line">  <span class="keyword">const</span> end = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br><span class="line">  <span class="keyword">return</span> end - begin;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> time = <span class="title function_">getRunningTime</span>(loop1, <span class="number">1</span>, <span class="number">10000000</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(time);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> apply 与 call </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>防抖与节流</title>
      <link href="/artical/100fa4c9.html"/>
      <url>/artical/100fa4c9.html</url>
      
        <content type="html"><![CDATA[<h1>防抖与节流</h1><ul class="lvl-0"><li class="lvl-2">防抖：当<strong>连续调用</strong>时间间隔小于<code>delay</code>时，只执行最后一次调用</li><li class="lvl-2">节流：某段时间内多次调用，只生效第一次，（限制某段时间内的调用次数，次数为1且是第一次）</li><li class="lvl-2"><a href="https://css-tricks.com/debouncing-throttling-explained-examples/">参考文章</a></li><li class="lvl-2">目的: 优化一个被<strong>频繁</strong>调用/触发的函数/事件</li><li class="lvl-2">防抖应用：比如当用户在快速输入时，不应每次输入都调用请求，而是当用户一定时间内未再输入，再调用最后一次请求</li><li class="lvl-2">节流应用：比如限制用户的调用请求，避免用户快速点击请求的时候，频繁向后台发送请求，而是调用第一次，再间隔一定时间后才能继续调用下一次。</li><li class="lvl-2">在<code>ts</code>中可以使用<a href="https://www.tslang.cn/docs/handbook/decorators.html">装饰器Decorators</a>修饰函数，使其成为防抖/节流函数</li></ul><h2 id="防抖">防抖<a class="header-anchor" href="#防抖">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p>Lodash防抖函数源码： <em><a href="https://github.com/lodash/lodash/blob/master/debounce.js">https://github.com/lodash/lodash/blob/master/debounce.js</a></em></p></li></ul><h3 id="Vue自定义防抖ref">Vue自定义防抖ref<a class="header-anchor" href="#Vue自定义防抖ref">#</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;h1&gt;自定义防抖ref&lt;/h1&gt;</span><br><span class="line">    &lt;input v-model=&quot;text&quot; /&gt;</span><br><span class="line">    &lt;div&gt;&#123;&#123; text &#125;&#125;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; customRef &#125; from &#x27;vue&#x27;;</span><br><span class="line">/**</span><br><span class="line"> * 自定义防抖ref</span><br><span class="line"> * @param value 值</span><br><span class="line"> * @param delay 延迟时间, 默认500ms</span><br><span class="line"> */</span><br><span class="line">function debounceRef(value: any, delay:number = 500)&#123;</span><br><span class="line">  let timer: number;</span><br><span class="line">  // customRef 的参数是一个函数, 其参数有track和trigger两个, 返回一个带有get,set的对象</span><br><span class="line">  return customRef((track, trigger) =&gt; &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      get() &#123;</span><br><span class="line">        track();</span><br><span class="line">        return value;</span><br><span class="line">      &#125;,</span><br><span class="line">      set(newVal: any) &#123;</span><br><span class="line">        clearTimeout(timer);</span><br><span class="line">        // timer赋值</span><br><span class="line">        timer = setTimeout(() =&gt; &#123;</span><br><span class="line">          value = newVal;</span><br><span class="line">          trigger();</span><br><span class="line">        &#125;, delay)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line">const text = debounceRef(&#x27;&#x27;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="防抖装饰器">防抖装饰器<a class="header-anchor" href="#防抖装饰器">#</a></h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ts</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> (<span class="attr">fun</span>: <span class="title class_">Function</span>, <span class="attr">delay</span>: <span class="built_in">number</span> = <span class="number">500</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="attr">timer</span>: <span class="built_in">number</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"><span class="variable language_">this</span>: <span class="built_in">unknown</span>, ...args: <span class="built_in">any</span>[]</span>) &#123;</span><br><span class="line">        <span class="built_in">clearTimeout</span>(timer);</span><br><span class="line">        timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            fun.<span class="title function_">apply</span>(<span class="variable language_">this</span>, args)</span><br><span class="line">        &#125;, delay)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// js</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">fun, delay = <span class="number">500</span></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> timer = <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">...args</span>) &#123;</span><br><span class="line">      <span class="built_in">clearTimeout</span>(timer);</span><br><span class="line">      timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          fun.<span class="title function_">apply</span>(<span class="variable language_">this</span>, args)</span><br><span class="line">      &#125;, delay)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="节流">节流<a class="header-anchor" href="#节流">#</a></h2><p>Lodash: <a href="https://www.lodashjs.com/docs/lodash.throttle#_throttlefunc-wait0-options">https://www.lodashjs.com/docs/lodash.throttle#_throttlefunc-wait0-options</a></p><p>Lodash节流函数源码: <a href="https://github.com/lodash/lodash/blob/master/throttle.js">https://github.com/lodash/lodash/blob/master/throttle.js</a></p><p>现代JS教程: <a href="https://zh.javascript.info/task/throttle">https://zh.javascript.info/task/throttle</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">throttle</span>(<span class="params">func, wait=<span class="number">1000</span></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> timer = <span class="literal">null</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">...args</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!timer) &#123;</span><br><span class="line">      timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        func.<span class="title function_">apply</span>(<span class="variable language_">this</span>, args);</span><br><span class="line">        timer = <span class="literal">null</span>;</span><br><span class="line">      &#125;, wait);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 防抖与节流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>var, let 与 const</title>
      <link href="/artical/38684297.html"/>
      <url>/artical/38684297.html</url>
      
        <content type="html"><![CDATA[<h2 id="暂时性死区">暂时性死区<a class="header-anchor" href="#暂时性死区">#</a></h2><p>如果<strong>区块中</strong>存在<code>let</code>和<code>const</code>命令，这个区块对这些命令声明的变量，从一开始就形成了封闭作用域。凡是在声明之前就使用这些变量，就会报错。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="comment">// 块级作用域</span></span><br><span class="line">&#123;</span><br><span class="line">    a = <span class="number">2</span>;  <span class="comment">// Cannot access &#x27;a&#x27; before initialization</span></span><br><span class="line">    <span class="keyword">let</span> a = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="变量提升">变量提升<a class="header-anchor" href="#变量提升">#</a></h2><p>变量可以在<code>var</code><strong>声明之前</strong>使用，值为<code>undefined</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// undefined</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// Cannot access &#x27;a&#x27; before initialization</span></span><br><span class="line"><span class="keyword">let</span> a = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h2 id="重复声明">重复声明<a class="header-anchor" href="#重复声明">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p><code>var</code>可重复声明</p></li><li class="lvl-2"><p><code>let</code>不可重复声明</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> a = <span class="number">2</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// 2</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">let</span> a = <span class="number">2</span>;  <span class="comment">// Identifier &#x27;a&#x27; has already been declared</span></span><br></pre></td></tr></table></figure><h2 id="作用域">作用域<a class="header-anchor" href="#作用域">#</a></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// 1</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="keyword">let</span> a = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// ReferenceError: a is not defined</span></span><br></pre></td></tr></table></figure><h2 id="全局对象">全局对象<a class="header-anchor" href="#全局对象">#</a></h2><p>node环境中</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="string">&quot;哈哈哈哈&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> y = <span class="string">&quot;呵呵呵呵&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> z = <span class="string">&quot;嘿嘿嘿嘿&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">global</span>.<span class="property">x</span>); <span class="comment">// &quot;哈哈哈哈&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">global</span>.<span class="property">y</span>); <span class="comment">// undefined</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">global</span>.<span class="property">z</span>); <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure><p>brower环境中</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="string">&quot;哈哈哈哈&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> y = <span class="string">&quot;呵呵呵呵&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> z = <span class="string">&quot;嘿嘿嘿嘿&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="property">x</span>); <span class="comment">// 哈哈哈哈</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="property">y</span>); <span class="comment">// 呵呵呵呵</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="property">z</span>); <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure><p>总结<code>let</code>的属性特征</p><ul class="lvl-0"><li class="lvl-2"><p>不属于<strong>全局对象</strong><code>window</code> /<code>global</code></p></li><li class="lvl-2"><p>不允许<strong>重复声明</strong></p></li><li class="lvl-2"><p>不存在<strong>变量提升</strong></p></li><li class="lvl-2"><p>存在<strong>暂时性死区</strong></p></li><li class="lvl-2"><p><strong>块级作用域</strong></p></li></ul><h2 id="const">const<a class="header-anchor" href="#const">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p><code>const</code>声明的变量必须<strong>初始化</strong></p></li><li class="lvl-2"><p>且不能修改值, <strong>只读</strong>(对于对象类型的数据, 可修改其属性, 但不能修改其地址, 即整体赋值)</p></li><li class="lvl-2"><p>作用域与<code>let</code>基本相同</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>目录锚点Demo</title>
      <link href="/artical/e986e4b8.html"/>
      <url>/artical/e986e4b8.html</url>
      
        <content type="html"><![CDATA[<h2 id="目录锚点Demo">目录锚点Demo<a class="header-anchor" href="#目录锚点Demo">#</a></h2><h3 id="HTML">HTML<a class="header-anchor" href="#HTML">#</a></h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 内容区域 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-tab</span>=<span class="string">&quot;districtName1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;districtName&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;data-tab&quot;</span>&gt;</span>页面一<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>当标题滚动到顶部时, 切换到当前目录<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-tab</span>=<span class="string">&quot;districtName2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;districtName&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;data-tab&quot;</span>&gt;</span>页面二<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span>页面二内容...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-tab</span>=<span class="string">&quot;districtName3&quot;</span> <span class="attr">class</span>=<span class="string">&quot;districtName&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;data-tab&quot;</span>&gt;</span>页面三<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span>页面三内容...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-tab</span>=<span class="string">&quot;districtName4&quot;</span> <span class="attr">class</span>=<span class="string">&quot;districtName&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;data-tab&quot;</span>&gt;</span>页面四<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span>页面四内容...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">data-tab</span>=<span class="string">&quot;districtName5&quot;</span> <span class="attr">class</span>=<span class="string">&quot;districtName&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;data-tab&quot;</span>&gt;</span>页面五<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span>&gt;</span>页面五内容...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 目录容器 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;directory&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;category&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 底部填充物, 避免无法滑到最后一个目录 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;height: 500px; background: #eee&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="CSS">CSS<a class="header-anchor" href="#CSS">#</a></h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span>,</span><br><span class="line">   <span class="selector-tag">body</span> &#123;</span><br><span class="line">     <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">     <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">     <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="selector-class">.container</span> &#123;</span><br><span class="line">     <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">     <span class="attribute">display</span>: flex;</span><br><span class="line">     <span class="attribute">padding</span>: <span class="number">20px</span> <span class="number">50px</span>;</span><br><span class="line">     <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="selector-class">.directory</span> &#123;</span><br><span class="line">     <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="selector-class">.content</span> &#123;</span><br><span class="line">     <span class="attribute">flex</span>: <span class="number">1</span>;   </span><br><span class="line">     <span class="attribute">display</span>: flex;</span><br><span class="line">     <span class="attribute">flex-direction</span>: column;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="selector-class">.content</span> <span class="selector-tag">h2</span> &#123;</span><br><span class="line">     <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="selector-class">.districtName</span> &#123;</span><br><span class="line">     <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="selector-class">.districtName</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">     <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">     <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#eee</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="selector-class">.container</span> <span class="selector-class">.directory</span> <span class="selector-tag">ul</span>,</span><br><span class="line">   <span class="selector-class">.container</span> <span class="selector-class">.directory</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">     <span class="attribute">list-style</span>: none;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="selector-id">#category</span> &#123;</span><br><span class="line">     <span class="comment">/*粘性定位*/</span></span><br><span class="line">     <span class="attribute">position</span>: sticky;</span><br><span class="line">     <span class="attribute">top</span>: <span class="number">16px</span>;</span><br><span class="line">     <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="selector-id">#category</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">     <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">16px</span>;</span><br><span class="line">     <span class="attribute">color</span>: <span class="number">#2d2e2f</span>;</span><br><span class="line">     <span class="attribute">outline</span>: none;</span><br><span class="line">     <span class="attribute">text-decoration</span>: none;</span><br><span class="line">     <span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="selector-id">#category</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">     <span class="attribute">background</span>: <span class="number">#efefef</span>;</span><br><span class="line">     <span class="attribute">cursor</span>: pointer;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="selector-id">#category</span> <span class="selector-tag">a</span><span class="selector-class">.active</span> &#123;</span><br><span class="line">     <span class="attribute">background</span>: <span class="number">#efefef</span>;</span><br><span class="line">     <span class="attribute">color</span>: <span class="number">#1890ff</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="JavaScript">JavaScript<a class="header-anchor" href="#JavaScript">#</a></h3><ul class="lvl-0"><li class="lvl-2"><p>根据类名<code>class=&quot;data-tab&quot;</code>生成目录,</p></li><li class="lvl-2"><p>为每个目录添加点击事件，点击滚动到目标内容，（根据<code>data-tab</code>的属性值，目录与内容的<code>data-tab</code>属性一一对应)</p></li><li class="lvl-2"><p>添加全局滚动监听事件, 触发时遍历内容, 判断内容元素到顶部的距离若小于100, 则激活当前内容元素对应的目录</p></li><li class="lvl-2"><p>目录激活通过添加类名<code>class=active</code>实现</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">dataScroll</span> &#123;</span><br><span class="line">  <span class="comment">// 获取内容节点数组</span></span><br><span class="line">  districtName = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;.container .districtName&quot;</span>);</span><br><span class="line">  <span class="comment">// 目录容器</span></span><br><span class="line">  directoryDom = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.directory #category ul&quot;</span>);</span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">initDom</span>(); <span class="comment">//初始化目录dom</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">initScroll</span>(); <span class="comment">//初始化监听滚动</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">initDom</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="title class_">Listdom</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="comment">// Element.innerHTML 属性设置或获取 HTML 语法表示的元素的后代。</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">districtName</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> linkClass = item.<span class="title function_">querySelector</span>(<span class="string">&quot;.data-tab&quot;</span>);</span><br><span class="line">      <span class="title class_">Listdom</span> += <span class="string">`&lt;li&gt;&lt;a data-tab=<span class="subst">$&#123;item.getAttribute(<span class="string">&quot;data-tab&quot;</span>)&#125;</span>&gt;<span class="subst">$&#123;linkClass.innerHTML&#125;</span>&lt;/a&gt;&lt;/li&gt;`</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">directoryDom</span>.<span class="property">innerHTML</span> = <span class="title class_">Listdom</span>;</span><br><span class="line">    <span class="comment">// 给所有目录节点添加点击事件</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title class_">Alist</span> = <span class="variable language_">this</span>.<span class="property">directoryDom</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;li a&quot;</span>);</span><br><span class="line">    <span class="title class_">Alist</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">el</span>) =&gt;</span> &#123;</span><br><span class="line">      el.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 遍历所有内容节点</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">districtName</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">targetNode</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (targetNode.<span class="title function_">getAttribute</span>(<span class="string">&quot;data-tab&quot;</span>) === e.<span class="property">target</span>.<span class="title function_">getAttribute</span>(<span class="string">&quot;data-tab&quot;</span>)) &#123;</span><br><span class="line">            <span class="comment">//页面直接滚动不过度 A标签高亮</span></span><br><span class="line">            <span class="comment">// document.documentElement.scrollTop = targetNode.offsetTop</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 页面动画滚动过度 A标签高亮</span></span><br><span class="line">            <span class="comment">// Element 接口的 scrollIntoView() 方法会滚动元素的父容器，使被调用 scrollIntoView() 的元素对用户可见。</span></span><br><span class="line">            <span class="comment">// https://developer.mozilla.org/zh-CN/docs/Web/API/Element/scrollIntoView</span></span><br><span class="line">            targetNode.<span class="title function_">scrollIntoView</span>(&#123;</span><br><span class="line">              <span class="attr">behavior</span>: <span class="string">&quot;smooth&quot;</span>,</span><br><span class="line">              <span class="attr">block</span>: <span class="string">&quot;start&quot;</span>,</span><br><span class="line">              <span class="attr">inline</span>: <span class="string">&quot;start&quot;</span>,</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">initScroll</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 添加滚动监听</span></span><br><span class="line">    <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;scroll&quot;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// Document.documentElement 是一个会返回文档对象（document）的根元素的只读属性（如 HTML 文档的 &lt;html&gt; 元素）。</span></span><br><span class="line">      <span class="comment">// Document.body 表示当前文档中的 &lt;body&gt; 或 &lt;frameset&gt; 元素，或 null 如果不存在此类元素。</span></span><br><span class="line">      <span class="comment">// Element.scrollTop 属性可以获取或设置一个元素的内容垂直滚动的像素数。</span></span><br><span class="line">      <span class="keyword">const</span> scroll = <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollTop</span> || <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">scrollTop</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">districtName</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// parseInt 解析一个字符串并返回指定基数的十进制整数</span></span><br><span class="line">        <span class="comment">// ceil 向上取整</span></span><br><span class="line">        <span class="comment">// HTMLElement.offsetTop 返回当前元素相对于其 offsetParent 元素的顶部内边距的距离</span></span><br><span class="line">        <span class="keyword">if</span> (item.<span class="property">offsetTop</span> - scroll &lt; <span class="number">100</span>) &#123;  <span class="comment">// 标题距离顶部小于100时, 切换当前激活的目录</span></span><br><span class="line">          <span class="variable language_">this</span>.<span class="title function_">activeLoadScroll</span>(item.<span class="title function_">getAttribute</span>(<span class="string">&quot;data-tab&quot;</span>));</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 遍历目录节点, 高亮当前滚动到的节点</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> &#123;<span class="type">string</span>&#125; sections 属性data-tab的值</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="title function_">activeLoadScroll</span>(<span class="params">sections</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> categoryDomA = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;.directory #category ul li a&quot;</span>);</span><br><span class="line">    categoryDomA.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// 添加激活类名active</span></span><br><span class="line">      item.<span class="property">className</span> = item.<span class="title function_">getAttribute</span>(<span class="string">&quot;data-tab&quot;</span>) == sections ? <span class="string">&quot;active&quot;</span> : <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="优化">优化<a class="header-anchor" href="#优化">#</a></h3><ul class="lvl-0"><li class="lvl-2"><p>滚动监听添加防抖</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&quot;scroll&quot;</span>, <span class="title function_">debounce</span>(<span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> scroll = <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollTop</span> || <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">scrollTop</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">districtName</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (item.<span class="property">offsetTop</span> - scroll &lt; <span class="number">100</span>) &#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="title function_">activeLoadScroll</span>(item.<span class="title function_">getAttribute</span>(<span class="string">&quot;data-tab&quot;</span>));</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;));</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">fun, delay = <span class="number">500</span></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> timer = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">...args</span>) &#123;</span><br><span class="line">        <span class="built_in">clearTimeout</span>(timer);</span><br><span class="line">        timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            fun.<span class="title function_">apply</span>(<span class="variable language_">this</span>, args)</span><br><span class="line">        &#125;, delay)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="效果">效果<a class="header-anchor" href="#效果">#</a></h3><p><img src="http://qiniu.yujing.fit/typora_img/anchor.gif" alt="anchor"></p><h3 id="相关链接">相关链接<a class="header-anchor" href="#相关链接">#</a></h3><ul class="lvl-0"><li class="lvl-2"><p>参考文章: <a href="https://blog.csdn.net/qq_43684588/article/details/125048254">https://blog.csdn.net/qq_43684588/article/details/125048254</a></p></li><li class="lvl-2"><p><a href="https://juejin.cn/post/7037389069407485959">https://juejin.cn/post/7037389069407485959</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>23设计模式与6大原则</title>
      <link href="/artical/f42e100c.html"/>
      <url>/artical/f42e100c.html</url>
      
        <content type="html"><![CDATA[<h1>设计模式</h1><ul class="lvl-0"><li class="lvl-2"><a href="https://www.w3cschool.cn/javadesignpattern/">https://www.w3cschool.cn/javadesignpattern/</a></li></ul><h2 id="六大原则">六大原则<a class="header-anchor" href="#六大原则">#</a></h2><p>1、开闭原则（对扩展开放，对修改关闭）</p><p>2、里氏代换原则（任何基类可以出现的地方，子类一定可以出现）</p><p>3、依赖倒转原则（真对接口编程，依赖于抽象而不依赖于具体。）</p><p>4、接口隔离原则（使用多个隔离的接口，比使用单个接口要好）</p><p>5、迪米特法则（一个实体应当尽量少的与其他实体之间发生相互作用，使得系统功能模块相对独立）</p><p>6、合成复用原则（原则是尽量使用合成/聚合的方式，而不是使用继承。）</p><h2 id="设计模式">设计模式<a class="header-anchor" href="#设计模式">#</a></h2><h3 id="创建型模式-共五种">创建型模式(共五种)<a class="header-anchor" href="#创建型模式-共五种">#</a></h3><ol><li class="lvl-3"><p>工厂方法模式(一个工厂类ReturnNew子类)、</p></li><li class="lvl-3"><p>抽象工厂模式（一个厂一个子类）、</p></li><li class="lvl-3"><p>单例模式（恶汉，懒汉）、</p></li><li class="lvl-3"><p>建造者模式（组合）、</p></li><li class="lvl-3"><p>原型模式（Cloneable浅接口，Serializable深接口）。</p></li></ol><h3 id="结构型模式-共七种">结构型模式(共七种)<a class="header-anchor" href="#结构型模式-共七种">#</a></h3><ol><li class="lvl-3"><p>适配器模式（新接口用老实现类）、</p></li><li class="lvl-3"><p>装饰器模式（同代理，增强）、</p></li><li class="lvl-3"><p>代理模式（方法前后）、</p></li><li class="lvl-3"><p>外观模式（计算机包括…）、</p></li><li class="lvl-3"><p>桥接模式(中间表)、</p></li><li class="lvl-3"><p>组合模式（树）、</p></li><li class="lvl-3"><p>享元模式（共享池）。</p></li></ol><h3 id="行为型模式-共十一种">行为型模式(共十一种)<a class="header-anchor" href="#行为型模式-共十一种">#</a></h3><ol><li class="lvl-3"><p>策略模式（Calculator子类）、</p></li><li class="lvl-3"><p>模板方法模式（大象装冰箱）、</p></li><li class="lvl-3"><p>观察者模式（观察者列表）、</p></li><li class="lvl-3"><p>迭代子模式、</p></li><li class="lvl-3"><p>责任链模式、</p></li><li class="lvl-3"><p>命令模式（一层接一层）、</p></li><li class="lvl-3"><p>备忘录模式（备忘录类包含被备忘录对象）、</p></li><li class="lvl-3"><p>状态模式（IF）、</p></li><li class="lvl-3"><p>访问者模式（访问外观模式）、</p></li><li class="lvl-4"><p>中介者模式（join）、</p></li><li class="lvl-4"><p>解释器模式(解释公式)。</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>powershell命令 与 一些常用快捷键</title>
      <link href="/artical/dae06e64.html"/>
      <url>/artical/dae06e64.html</url>
      
        <content type="html"><![CDATA[<h1>快捷键</h1><blockquote><p>记录一些常用快捷键和cmd命令</p></blockquote><h2 id="pwoershell命令">pwoershell命令<a class="header-anchor" href="#pwoershell命令">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p><code>powershell</code>就是<code>cmd</code>的增强版，命令几乎与<code>shell</code>中相同</p></li><li class="lvl-2"><p>推荐使用<code>powershell</code>，还兼容了<code>cmd</code>中的命令</p></li><li class="lvl-2"><p>官方手册: <a href="https://learn.microsoft.com/zh-cn/powershell">https://learn.microsoft.com/zh-cn/powershell</a></p></li><li class="lvl-2"><p><a href="https://learn.microsoft.com/zh-cn/powershell/module/microsoft.powershell.core/about/about_command_syntax?view=powershell-7.3#command-name">https://learn.microsoft.com/zh-cn/powershell/module/microsoft.powershell.core/about/about_command_syntax?view=powershell-7.3#command-name</a></p></li></ul><blockquote><p>使用技巧: 对于需要经常使用的命令, 可以创建编辑后缀为<code>.bat</code>的文件，点击直接运行命令</p><p>或者使用后缀<code>.ps1</code>的powershell脚本文件</p></blockquote><table><thead><tr><th style="text-align:center">命令(不区分大小写)</th><th>作用</th></tr></thead><tbody><tr><td style="text-align:center"><code>help</code></td><td>查看所有可用命令及其简要说明</td></tr><tr><td style="text-align:center"><code>help cd</code></td><td>查看<code>cd</code>命令的详细使用说明</td></tr><tr><td style="text-align:center"><code>powershell</code></td><td><code>cmd</code>黑窗口进入<code>powershell</code>，路径前带<code>PS</code>，eg：<code>PS D:\&gt;</code></td></tr><tr><td style="text-align:center"></td><td></td></tr><tr><td style="text-align:center"><code>ping +域名</code></td><td>解析域名IP地址</td></tr><tr><td style="text-align:center">`netstat -ano</td><td>findstr “80”`</td></tr><tr><td style="text-align:center"><code>taskkill /pid 4 /f</code></td><td>强制停止<code>pid</code>为<code>4</code>的进程</td></tr><tr><td style="text-align:center"></td><td></td></tr><tr><td style="text-align:center"><code>cd</code></td><td>显示当前所在路径</td></tr><tr><td style="text-align:center"><code>cd ..</code></td><td>返回上一级</td></tr><tr><td style="text-align:center"><code>cd dir</code></td><td>进入名为<code>dir</code>的文件夹</td></tr><tr><td style="text-align:center"><code>d:</code></td><td>切换到<code>D</code>盘</td></tr><tr><td style="text-align:center"><code>dir</code></td><td>显示当前目录下的所有文件及文件夹, 类似<code>shell</code>中的<code>ls</code>，<code>powershell</code>支持<code>ls</code></td></tr><tr><td style="text-align:center"><code>del</code></td><td>删除文件</td></tr><tr><td style="text-align:center"><code>rd /s /q dir</code></td><td>删除整个<code>dir</code>文件夹，不显示是否删除</td></tr><tr><td style="text-align:center"><code>Linux.md</code></td><td>直接输入文件名, 将会使用默认程序打开文件，类似GUI中双击文件的效果</td></tr><tr><td style="text-align:center"><code>type Linux.txt</code></td><td>查看文本文件内容</td></tr><tr><td style="text-align:center"></td><td></td></tr><tr><td style="text-align:center"><code>cls</code></td><td>清屏，类似<code>shell</code>中的<code>clear</code></td></tr><tr><td style="text-align:center"></td><td></td></tr><tr><td style="text-align:center"><code>iwr</code> / <code>wget</code> / <code>curl</code> + <code>&lt;uri&gt;</code></td><td>Invoke-WebRequest, 解析web请求</td></tr></tbody></table><h2 id="IDEA">IDEA<a class="header-anchor" href="#IDEA">#</a></h2><table><thead><tr><th>快捷键</th><th>备注</th></tr></thead><tbody><tr><td><em><strong>Ctrl+E</strong></em></td><td>最近打开的文件</td></tr><tr><td><em><strong>Ctrl+Shift+V</strong></em></td><td>历史粘贴板</td></tr><tr><td><em><strong>Ctrl+W</strong></em></td><td>按一定规则扩选</td></tr><tr><td><em><strong>Shift+F6</strong></em></td><td>选中目录结构的文件，重命名</td></tr><tr><td>Ctrl + Shift + R</td><td>搜索指定范围文件，替换文字</td></tr><tr><td><em><strong>Ctrl+R</strong></em></td><td>当前文件 查询替换</td></tr><tr><td>Ctrl + Tab</td><td>切换最近一个标签,类似window的Alt+tab效果</td></tr><tr><td>Ctrl+  [</td><td>移动光标到当前所在代码的花括号开始位置，反之移动到结束位置</td></tr><tr><td>Ctrl + Shift + J</td><td>自动将下一行合并到当前行末尾</td></tr><tr><td>Ctrl+N或 双击Shift</td><td>搜索文件/类</td></tr><tr><td>光标在某一个词上-Ctrl+Q</td><td>显示JavaDoc的结果</td></tr><tr><td>Ctrl+Alt+S</td><td>打开设置</td></tr><tr><td><em><strong>Ctrl+F</strong></em></td><td>搜索当前页面 词</td></tr><tr><td>Shift+F2</td><td>提示当前页面可优化的地方</td></tr><tr><td><em><strong>Alt+F8</strong></em></td><td>输入变量名，查看当前变量的值–deBug时使用</td></tr><tr><td><em><strong>Ctrl + G</strong></em></td><td>在当前文件跳转到指定行处</td></tr><tr><td>Ctrl + J</td><td>给出提示，例：输入sout如果提示消失，Ctrl+J给出提示</td></tr><tr><td>Ctrl+P</td><td>输入方法名后，使用给出方法参数提示</td></tr><tr><td><em><strong>Ctrl + U</strong></em></td><td>前往当前光标所在的方法的父类的方法 / 接口定义</td></tr><tr><td>Ctrl+B  /  F4</td><td>选中方法后，进入光标所在的方法/变量的接口或是定义出，等效于 Ctrl + 左键单击</td></tr><tr><td><em><strong>Ctrl + H</strong></em></td><td>显示当前类的层次结构，继承或实现</td></tr><tr><td><em><strong>Ctrl + O</strong></em></td><td>选择可重写的方法</td></tr><tr><td>Ctrl + I</td><td>选择可继承的方法</td></tr><tr><td><em><strong>Ctrl + F12</strong></em></td><td>弹出当前文件结构层，可以在弹出的层上直接输入，进行筛选，类似Alt+7</td></tr><tr><td><em><strong>Ctrl + F11</strong></em></td><td>选中文件 / 文件夹  /某一行，使用助记符设定 / 取消书签</td></tr><tr><td>F11</td><td>选中文件 / 文件夹  /某一行,  标记/消除 书签</td></tr><tr><td>Shift + F11</td><td>弹出书签显示层</td></tr><tr><td>Ctrl+ 1~9</td><td>跳转书签所标记数字的文件夹</td></tr><tr><td>Ctrl + Home/End</td><td>跳到文件头/尾，等同于PgUp/PgDn</td></tr><tr><td>Ctrl + 前/后方向键</td><td>等效于鼠标滚轮向 前/后 效果</td></tr><tr><td>Ctrl + 左/右方向键</td><td>光标跳转到当前单词 / 中文句的 左/右 侧开头位置</td></tr><tr><td>Ctrl + T/K</td><td>版本控制 更新/提交 项目</td></tr><tr><td><em><strong>Alt + F3</strong></em></td><td>选中文本，逐个往下查找相同文本，并高亮显示</td></tr><tr><td><em><strong>Alt + F7</strong></em></td><td>查找光标所在的方法 / 变量 / 类被调用的地方</td></tr><tr><td>Alt + 左/右方向键</td><td>按左/右 方向切换当前已打开的导航标签页</td></tr><tr><td>Alt + 前/后方向键</td><td>当前光标跳转到当前文件的前/后一个方法名位置</td></tr><tr><td>Shift + Home/End</td><td>选中光标到当前行头/尾位置</td></tr><tr><td>Shift + 滚轮前后滚动</td><td>当前文件的横向滚动轴滚动</td></tr><tr><td>Ctrl + Alt + O</td><td>优化导入的类，可以对当前文件和整个包目录使用 （必备）</td></tr><tr><td><em><strong>Ctrl + Shift + Z</strong></em></td><td>取消撤销 （必备）</td></tr><tr><td>Ctrl + Shift + U</td><td>对选中的代码进行大 / 小写轮流转换 （必备）</td></tr><tr><td><em><strong>Ctrl+P</strong></em></td><td>光标在方法括号内,提示参数信息</td></tr><tr><td>Ctrl + Shift + Space</td><td>智能代码提示</td></tr><tr><td><em><strong>Ctrl + Shift + Enter</strong></em></td><td>自动结束代码，行末自动添加分号 （必备）</td></tr><tr><td><em><strong>Ctrl + Shift + Alt + C</strong></em></td><td>复制参考信息,可用于复制当前文件的<strong>相对路径</strong> ,注意:光标应在文件中空白地方</td></tr><tr><td><em><strong>Ctrl+Shift+C</strong></em></td><td>复制当前文件<strong>绝对路径</strong></td></tr><tr><td>Ctrl + Shift + Alt + V</td><td>无格式黏贴</td></tr><tr><td><em><strong>F2</strong></em></td><td>跳转到下一个高亮错误 或 警告位置 （必备）</td></tr><tr><td>F7</td><td>在 Debug 模式下，进入下一步，如果当前行断点是一个方法，则进入当前方法体内，如果该方法体还有方法，则不会进入该内嵌的方法中</td></tr><tr><td>F8</td><td>在 Debug 模式下，进入下一步，如果当前行断点是一个方法，则不进入当前方法体内</td></tr><tr><td><em><strong>Alt + Shift + C</strong></em></td><td>查看最近操作项目的变化情况列表</td></tr><tr><td>Ctrl+Alt+V<br>按住Alt,双击Enter<br>在后面输入&quot; .var&quot;</td><td><em><strong><font color = "red">自动生成左边变量</font></strong></em>，三种方式</td></tr><tr><td><strong>后面输入 .arg</strong></td><td>包裹整体   例:Comparable.arg  ==&gt;  (Comparable)</td></tr><tr><td><strong>后面输入 .return</strong></td><td>返回参数  例:Comparable.return  ==&gt;  return Comparable</td></tr><tr><td><strong>Ctrl+Alt+T</strong></td><td>选中代码块,  带注释的自定义代码块</td></tr><tr><td>Ctrl+Shift+Del</td><td>删除包裹代码块外层,例: 需求，我想删除外面的循环语句，留下循环语句内的内容（光标需在for循环内）</td></tr><tr><td>插件Ace Jump</td><td>快速移动光标</td></tr><tr><td>去除拼接字符串的引号与换行符</td><td>选中，右键，Show Content Actions ，Copy string concatenation text to the clipboard</td></tr><tr><td><em><strong>Ctrl+Alt+O</strong></em></td><td>删除未使用的 import</td></tr><tr><td>ctrl+shift+T</td><td>创建测试类</td></tr></tbody></table><h2 id="浏览器快捷键">浏览器快捷键<a class="header-anchor" href="#浏览器快捷键">#</a></h2><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>Ctrl+F</td><td>此页面查询内容</td></tr><tr><td>Ctrl+H/Ctrl+Shift+H</td><td>打开历史浏览记录窗口</td></tr><tr><td>Ctrl+Shift+S</td><td>截图</td></tr><tr><td><strong>Ctrl + Shift + T</strong></td><td>撤销关闭标签页</td></tr><tr><td></td><td></td></tr></tbody></table><h2 id="电脑快捷键">电脑快捷键<a class="header-anchor" href="#电脑快捷键">#</a></h2><table><thead><tr><th>快捷键</th><th>备注</th></tr></thead><tbody><tr><td><strong>Ctrl+Shilft+Esc</strong></td><td>打开任务管理器</td></tr><tr><td>Alt+F4</td><td>关机界面</td></tr><tr><td>win+E</td><td>打开我的电脑</td></tr><tr><td>WIN+Shift+S</td><td>系统截图</td></tr><tr><td>Ctrl+Alt+Del</td><td>系统界面</td></tr><tr><td>WIN+I</td><td>打开设置</td></tr><tr><td>拖住窗口轻微晃动</td><td>最小化其他所有窗口</td></tr><tr><td>WIN+X</td><td>多功能窗口</td></tr><tr><td>Ctrl+Alt+F12</td><td>显卡控制面板</td></tr><tr><td>WIN+tab</td><td>时间线窗口</td></tr><tr><td>Alt+tab</td><td>切换窗口</td></tr></tbody></table><h2 id="WIN-R">WIN+R<a class="header-anchor" href="#WIN-R">#</a></h2><table><thead><tr><th>WIN+R 运行界面与命令</th><th>说明</th></tr></thead><tbody><tr><td>control</td><td>打开控制面板</td></tr><tr><td>powershell</td><td>Stop-Process -Name explorer 重启explorer服务</td></tr><tr><td>services.msc</td><td>打开服务面板</td></tr><tr><td>regedit</td><td>注册表----一定一定不能轻易改!!!</td></tr><tr><td>cmd</td><td>打开cmd命令窗口</td></tr><tr><td>msconfig</td><td>系统配置,系统信息</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 记录一下 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idea </tag>
            
            <tag> powershell </tag>
            
            <tag> cmd </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mockjs</title>
      <link href="/artical/25c5823c.html"/>
      <url>/artical/25c5823c.html</url>
      
        <content type="html"><![CDATA[<h2 id="介绍">介绍<a class="header-anchor" href="#介绍">#</a></h2><blockquote><p>生成随机数据，拦截 Ajax 请求</p></blockquote><h2 id="使用">使用<a class="header-anchor" href="#使用">#</a></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Mock</span> <span class="keyword">from</span> <span class="string">&quot;mockjs&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Mock</span>.<span class="title function_">mock</span>(<span class="string">&quot;http://localhost:3000/api&quot;</span>, &#123;</span><br><span class="line">  <span class="string">&quot;data|5&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;id|+1&quot;</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;@cname&quot;</span>,</span><br><span class="line">      <span class="string">&quot;age|18-28&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">axios.<span class="title function_">get</span>(<span class="string">&quot;http://localhost:3000/api&quot;</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">data</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>输出</p><p><img src="http://qiniu.yujing.fit/typora_img/image-20230215233230950.png" alt="image-20230215233230950"></p><h2 id="相关链接">相关链接<a class="header-anchor" href="#相关链接">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p>官方文档: <a href="https://github.com/nuysoft/Mock/wiki">https://github.com/nuysoft/Mock/wiki</a></p></li><li class="lvl-2"><p>示例代码:  <a href="http://mockjs.com/examples.html">http://mockjs.com/examples.html</a></p></li><li class="lvl-2"></li></ul>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mockjs </tag>
            
            <tag> mock </tag>
            
            <tag> js库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typescript</title>
      <link href="/artical/98b5ec51.html"/>
      <url>/artical/98b5ec51.html</url>
      
        <content type="html"><![CDATA[<h1>TypeScript</h1><h2 id="介绍">介绍<a class="header-anchor" href="#介绍">#</a></h2><blockquote><p><a href="https://www.typescriptlang.org/">官方</a>介绍:  TypeScript is <strong>JavaScript with syntax for types.</strong></p><p>翻译过来就是: “TypeScrip是带有<strong>类型</strong>语法的JavaScript。”</p></blockquote><h2 id="历史">历史<a class="header-anchor" href="#历史">#</a></h2><blockquote><p>2012年10月，微软发布了首个公开版本的TypeScript。2013年6月19日，在经历了一个<a href="https://baike.baidu.com/item/%E9%A2%84%E8%A7%88%E7%89%88/8601080?fromModule=lemma_inlink">预览版</a>之后微软正式发布了<a href="https://baike.baidu.com/item/%E6%AD%A3%E5%BC%8F%E7%89%88/5077488?fromModule=lemma_inlink">正式版</a>TypeScript。<strong>TypeScript</strong>的作者是<a href="https://baike.baidu.com/item/%E5%AE%89%E5%BE%B7%E6%96%AF%C2%B7%E6%B5%B7%E5%B0%94%E6%96%AF%E4%BC%AF%E6%A0%BC/2152925?fromModule=lemma_inlink">安德斯·海尔斯伯格</a>，C#的<a href="https://baike.baidu.com/item/%E9%A6%96%E5%B8%AD%E6%9E%B6%E6%9E%84%E5%B8%88/10884085?fromModule=lemma_inlink">首席架构师</a>。</p></blockquote><h2 id="安装">安装<a class="header-anchor" href="#安装">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">npm install -g typescript</span></span><br></pre></td></tr></table></figure><h2 id="数据类型">数据类型<a class="header-anchor" href="#数据类型">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p>与js中数据类型一致，增加了枚举类型</p></li><li class="lvl-2"><p>number</p></li><li class="lvl-2"><p>string</p></li><li class="lvl-2"><p>boolean</p></li><li class="lvl-2"><p>undefined</p></li><li class="lvl-2"><p>BigInt</p></li><li class="lvl-2"><p>Symbol</p></li><li class="lvl-2"><p>Object</p></li></ul><p>函数返回类型</p><ul class="lvl-0"><li class="lvl-2"><p>void</p></li><li class="lvl-2"><p>never</p></li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">a</span>: <span class="built_in">any</span>; <span class="comment">// any类型, 可以赋值任意类型的值</span></span><br><span class="line"><span class="keyword">let</span> hello = <span class="string">&#x27;hello&#x27;</span>;  <span class="comment">// 隐式any类型, 赋值时推断出string类型</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">helloworld</span>: <span class="built_in">string</span> = <span class="string">`<span class="subst">$&#123;hello&#125;</span> world`</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(helloworld);</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数组</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">list1</span>: <span class="built_in">number</span>[] = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(list1);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> <span class="attr">list2</span>: <span class="title class_">Array</span>&lt;<span class="built_in">number</span>&gt; = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>枚举</p></li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">// 枚举, 默认从0开始(没有初始值时)</span></span><br><span class="line">   <span class="keyword">enum</span> <span class="title class_">Color</span> &#123; <span class="title class_">Red</span> = <span class="string">&#x27;#fe5f55&#x27;</span>, <span class="title class_">Green</span> = <span class="string">&#x27;#fff1c1&#x27;</span>, <span class="title class_">Blue</span> = <span class="string">&#x27;#293462&#x27;</span> &#125;;</span><br><span class="line"><span class="comment">// 限制变量c的值只能为枚举中的值</span></span><br><span class="line">   <span class="keyword">let</span> <span class="attr">c</span>: <span class="title class_">Color</span> = <span class="title class_">Color</span>.<span class="property">Green</span>;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(c);  <span class="comment">// #fff1c1</span></span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// void, 表示没有任何类型, 一般用于函数返回值, 其值只能为undefined或null</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">warnUser</span>(<span class="params"></span>): <span class="built_in">void</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;This is my warning message&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">warnUser</span>());  <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// never, 表示永远不会有返回值的类型, 一般用于函数返回值</span></span><br><span class="line"><span class="comment">// 返回never的函数必须存在无法达到的终点</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">error</span>(<span class="params">message: <span class="built_in">string</span></span>): <span class="built_in">never</span> &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(message);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 自动推断返回类型为never</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">error_</span>(<span class="params">message: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">error</span>(<span class="string">&quot;Something failed&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解构赋值">解构赋值<a class="header-anchor" href="#解构赋值">#</a></h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;zhangsan&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> &#123; name, age &#125;: &#123; <span class="attr">name</span>: <span class="built_in">string</span>, <span class="attr">age</span>: <span class="built_in">number</span> &#125; = obj;</span><br><span class="line"><span class="keyword">type</span> C = &#123; <span class="attr">name</span>: <span class="built_in">string</span>, <span class="attr">age</span>: <span class="built_in">number</span> &#125;;</span><br><span class="line"><span class="keyword">let</span> &#123; <span class="attr">name</span>: name1, <span class="attr">age</span>: age1 &#125;: C = obj;</span><br></pre></td></tr></table></figure><h2 id="接口interface">接口<code>interface</code><a class="header-anchor" href="#接口interface">#</a></h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 预定义对象中属性的类型</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="comment">// 只读属性</span></span><br><span class="line">    <span class="keyword">readonly</span> <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">age</span>: <span class="built_in">number</span>;</span><br><span class="line">    <span class="comment">// 可选属性</span></span><br><span class="line">    isAdmin?: <span class="built_in">boolean</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> P = <span class="title class_">Person</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">zhangsan</span>: P = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;zhangsan&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="只读属性">只读属性<a class="header-anchor" href="#只读属性">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p>做为变量使用的话用 const`，</p></li><li class="lvl-2"><p>若做为属性则使用<code>readonly</code>。</p></li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 只读数组</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">arr</span>: <span class="title class_">ReadonlyArray</span>&lt;<span class="built_in">number</span>&gt; = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="comment">// let newArr:number[] = arr;  // &quot;readonly number[]&quot; 为 &quot;readonly&quot;，不能分配给可变类型 &quot;number[]&quot;</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">newArr</span>: <span class="built_in">number</span>[] = arr <span class="keyword">as</span> <span class="built_in">number</span>[];  <span class="comment">// 类型断言, it&#x27;s ok</span></span><br></pre></td></tr></table></figure><h2 id="接口与type">接口与type<a class="header-anchor" href="#接口与type">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p><code>type</code>可实现的<code>interfere</code>都可以实现</p></li><li class="lvl-2"><p>区别: type不可新增属性</p></li></ul><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">interface</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="built_in">number</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">VIPUser</span> <span class="keyword">extends</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="attr">money</span>: <span class="built_in">number</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">jam</span>: <span class="title class_">VIPUser</span>;</span><br><span class="line"><span class="comment">// 可向已定义的接口添加新属性height</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="attr">height</span>: <span class="built_in">number</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="attr">rose</span>: <span class="title class_">User</span> = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;rose&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">    <span class="attr">height</span>: <span class="number">165</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="title class_">User</span> = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="built_in">number</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> <span class="title class_">VIPUser</span> = <span class="title class_">User</span> &amp; &#123;</span><br><span class="line">    <span class="attr">money</span>: <span class="built_in">number</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 不能再向User中添加新属性</span></span><br><span class="line"><span class="keyword">let</span> <span class="attr">jack</span>: <span class="title class_">VIPUser</span>;</span><br></pre></td></tr></table></figure><h2 id="泛型">泛型<a class="header-anchor" href="#泛型">#</a></h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * T 代表泛型，具体什么类型是调用这个方法的时候决定的</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> arg </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span> </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> fun&lt;T&gt;(<span class="attr">arg</span>: T): T &#123;</span><br><span class="line">    <span class="keyword">return</span> arg;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 泛型类, data的类型由实例化的时候决定</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Data</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="attr">data</span>: T;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="枚举作类型">枚举作类型<a class="header-anchor" href="#枚举作类型">#</a></h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">// 枚举, 默认从0开始(没有初始值时)</span></span><br><span class="line">   <span class="keyword">enum</span> <span class="title class_">Color</span> &#123; <span class="title class_">Red</span> = <span class="string">&#x27;#fe5f55&#x27;</span>, <span class="title class_">Green</span> = <span class="string">&#x27;#fff1c1&#x27;</span>, <span class="title class_">Blue</span> = <span class="string">&#x27;#293462&#x27;</span> &#125;;</span><br><span class="line"><span class="comment">// 限制变量c的值只能为枚举中的值</span></span><br><span class="line">   <span class="keyword">let</span> <span class="attr">c</span>: <span class="title class_">Color</span> = <span class="title class_">Color</span>.<span class="property">Green</span>;</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(c);  <span class="comment">// #fff1c1</span></span><br></pre></td></tr></table></figure><h2 id="函数参数">函数参数<a class="header-anchor" href="#函数参数">#</a></h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id 多类型参数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">moreType</span>(<span class="params">id: <span class="built_in">number</span> | <span class="built_in">string</span></span>) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> id 可选参数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">optional</span>(<span class="params">id?: <span class="built_in">number</span></span>) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> fun 当参数为函数时</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">doFun</span>(<span class="params">fun: (str: <span class="built_in">string</span>) =&gt; <span class="built_in">void</span></span>) &#123;</span><br><span class="line">    <span class="title function_">fun</span>(<span class="string">&#x27;hello typrScript&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="相关链接">相关链接<a class="header-anchor" href="#相关链接">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p>中文手册: <a href="https://typescript.bootcss.com/">https://typescript.bootcss.com/</a></p></li><li class="lvl-2"><p>官方文档: <a href="https://www.typescriptlang.org/zh/docs/">https://www.typescriptlang.org/zh/docs/</a></p></li><li class="lvl-2"><p>中文手册2: <a href="https://www.tslang.cn/docs/handbook/basic-types.html">https://www.tslang.cn/docs/handbook/basic-types.html</a></p></li><li class="lvl-2"><p>菜鸟TS教程: <a href="https://www.runoob.com/typescript/ts-tutorial.html">https://www.runoob.com/typescript/ts-tutorial.html</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> TypeScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> typescript </tag>
            
            <tag> ts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win11小任务栏</title>
      <link href="/artical/4a6887b1.html"/>
      <url>/artical/4a6887b1.html</url>
      
        <content type="html"><![CDATA[<h2 id="win11小任务栏">win11小任务栏<a class="header-anchor" href="#win11小任务栏">#</a></h2><p>下载地址: <a href="https://www.startallback.com/">https://www.startallback.com/</a></p><p>原生没有了小任务栏</p><p><img src="http://qiniu.yujing.fit/typora_img/image-20230215005201739.png" alt="image-20230215005201739"></p><p>配置后的</p><p><img src="http://qiniu.yujing.fit/typora_img/image-20230215005443034.png" alt="image-20230215005443034"></p><ul class="lvl-0"><li class="lvl-2"><p>在任务栏右键点击<code>属性</code> , 重新打开配置界面</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 记录一下 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> startallback </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>chatGPTAPI使用Demo</title>
      <link href="/artical/90236ad6.html"/>
      <url>/artical/90236ad6.html</url>
      
        <content type="html"><![CDATA[<ul class="lvl-0"><li class="lvl-2"><p>API文档地址:  <a href="https://platform.openai.com/docs/api-reference/introduction">API Reference - OpenAI API</a></p></li><li class="lvl-2"><p>在线演示: <a href="https://platform.openai.com/playground">https://platform.openai.com/playground</a></p></li><li class="lvl-2"><p>微软:  <a href="https://www.bing.com/new">https://www.bing.com/new</a></p></li><li class="lvl-2"><p>缺点: 准确度还并不是很高，未实现类似一个字一个字的生成，若返回的内容过多，可能需要很久</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;mx-auto bg-white rounded-xl shadow-md items-center w-96&quot;&gt;</span><br><span class="line">        &lt;h1 class=&quot; text-red-500 mx-auto w-20&quot;&gt;chat GPT&lt;/h1&gt;</span><br><span class="line">        &lt;input class=&quot;w-80&quot; type=&quot;text&quot; @keydown.enter=&quot;sendRequest&quot; autofocus placeholder=&quot;请输入一个问题&quot;&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            &lt;ul&gt;</span><br><span class="line">                &lt;template v-for=&quot;dialogue of dialogues&quot;&gt;</span><br><span class="line">                    &lt;li&gt;Human: &#123;&#123; dialogue.ask &#125;&#125;&lt;/li&gt;</span><br><span class="line">                    &lt;li&gt;AI: &#123;&#123; dialogue.answer &#125;&#125;&lt;/li&gt;</span><br><span class="line">                &lt;/template&gt;</span><br><span class="line">            &lt;/ul&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; Configuration, OpenAIApi &#125; from &quot;openai&quot;</span><br><span class="line">import &#123; reactive &#125; from &quot;vue&quot;;</span><br><span class="line">const configuration = new Configuration(&#123;</span><br><span class="line">    organization: &quot;orgination ID&quot;,</span><br><span class="line">    apiKey: &quot;APP key&quot;,</span><br><span class="line">&#125;);</span><br><span class="line">const openai = new OpenAIApi(configuration);</span><br><span class="line">const dialogues = reactive([]);</span><br><span class="line">// openai.listModels().then((response) =&gt; &#123;</span><br><span class="line">//     console.log(response);</span><br><span class="line">// &#125;);</span><br><span class="line">function sendRequest(e) &#123;</span><br><span class="line">    const mes = e.target.value;</span><br><span class="line">    e.target.value = &quot;&quot;;</span><br><span class="line">    dialogues.push(&#123;</span><br><span class="line">        ask: mes,</span><br><span class="line">        answer: &quot;loading...&quot;,</span><br><span class="line">    &#125;);</span><br><span class="line">    // https://platform.openai.com/docs/api-reference/introduction</span><br><span class="line">    openai.createCompletion(&#123;</span><br><span class="line">        model: &quot;text-davinci-003&quot;,</span><br><span class="line">        prompt: mes,</span><br><span class="line">        // max_tokens: 7,</span><br><span class="line">        // 随机性0~2</span><br><span class="line">        // temperature: 0,</span><br><span class="line">        // logprobs: 5,</span><br><span class="line">        // 是否显示自己所输入的</span><br><span class="line">        // echo: true,</span><br><span class="line">        temperature: 0.9,</span><br><span class="line">        max_tokens: 150,</span><br><span class="line">        top_p: 1,</span><br><span class="line">        frequency_penalty: 0,</span><br><span class="line">        presence_penalty: 0.6,</span><br><span class="line">        // stop: [&quot; Human:&quot;, &quot; AI:&quot;],</span><br><span class="line">    &#125;).then((response) =&gt; &#123;</span><br><span class="line">        console.log(response);</span><br><span class="line">        dialogues[dialogues.length - 1].answer = response.data.choices[0].text;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;8.41 lPX:/ # chatGPT 怎么不一样  https://v.douyin.com/BvSFDED/ 复制此链接，打开Dou音搜索，直接观看视频！</span><br></pre></td></tr></table></figure><blockquote><p>演示: <a href="https://v.douyin.com/BvSFDED/">https://v.douyin.com/BvSFDED/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TailwindCss </tag>
            
            <tag> chatGPT </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue3的响应式 | 渲染</title>
      <link href="/artical/dbdd9cef.html"/>
      <url>/artical/dbdd9cef.html</url>
      
        <content type="html"><![CDATA[<h2 id="render函数">render函数<a class="header-anchor" href="#render函数">#</a></h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--vue2--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 第一个参数是标签名，第二个参数是标签的属性，第三个参数是标签体</span></span></span><br><span class="line"><span class="language-javascript">      <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">h</span>(<span class="string">&quot;div&quot;</span>, &#123; <span class="attr">class</span>: <span class="string">&quot;container&quot;</span> &#125;, [</span></span><br><span class="line"><span class="language-javascript">          <span class="title function_">h</span>(<span class="string">&quot;h1&quot;</span>, &#123; <span class="attr">class</span>: <span class="string">&quot;title&quot;</span> &#125;, <span class="string">&quot;hello world&quot;</span>),</span></span><br><span class="line"><span class="language-javascript">        ]),</span></span><br><span class="line"><span class="language-javascript">    &#125;).$mount(<span class="string">&quot;#app&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    new Vue(&#123;</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">      template: `<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;container&#x27;</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&#x27;title&#x27;</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>`,</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">    &#125;).$mount(&quot;#app&quot;);</span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars">  </span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;container&#x27;</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&#x27;title&#x27;</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">template</span>: <span class="string">&quot;#app&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    &#125;).$mount(<span class="string">&quot;#app&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>以上三种结果相同</p><blockquote><p><code>h()</code> 是 <strong>hyperscript</strong> 的简称——意思是“能生成 HTML (超文本标记语言) 的 JavaScript”。这个名字来源于许多虚拟 DOM 实现默认形成的约定。</p><p><code>render()</code>若存在<code>render</code>函数，<em>vue</em>会将<code>render</code> 中的<em>VNode</em>渲染到页面，若不存在则会将挂载的标签中的<code>html</code>编译为<em>Vnode</em>再由<code>render</code>进行渲染，同时存在<code>render</code>优先级更高。</p></blockquote><p>虚拟节点<em>VNode</em></p><p><img src="http://qiniu.yujing.fit/typora_img/image-20230212002420932.png" alt="image-20230212002420932"></p><p>生成的DOM，注意: <code>&lt;div id=&quot;app&quot;&gt;</code>不存在了已经</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>在某些情况写render比模板中更方便</p></blockquote><h2 id="Proxy">Proxy<a class="header-anchor" href="#Proxy">#</a></h2><p>more:  <a href="https://zh.javascript.info/proxy">https://zh.javascript.info/proxy</a></p><h2 id="模拟计数">模拟计数<a class="header-anchor" href="#模拟计数">#</a></h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;count&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;add()&quot;</span>&gt;</span>加一<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> count = <span class="title function_">ref</span>(<span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> countDiv = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#count&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        countDiv.<span class="property">innerText</span> = count.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">ref</span>(<span class="params">target</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 监听get和set事件</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Proxy</span>(&#123;<span class="attr">value</span>:target&#125;, &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">get</span>(<span class="params">target, key</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;get&#x27;</span>, key)</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span> target[key]</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">set</span>(<span class="params">target, key, value</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;set&#x27;</span>, key, value)</span></span><br><span class="line"><span class="language-javascript">                    countDiv.<span class="property">innerHTML</span> = value;</span></span><br><span class="line"><span class="language-javascript">                    target[key] = value</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">add</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            count.<span class="property">value</span>++;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://qiniu.yujing.fit/typora_img/proxy.gif" alt="proxy"></p><p>more: <a href="https://cn.vuejs.org/guide/extras/rendering-mechanism.html">https://cn.vuejs.org/guide/extras/rendering-mechanism.html</a></p><h2 id="模拟双向绑定">模拟双向绑定<a class="header-anchor" href="#模拟双向绑定">#</a></h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;mes&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">oninput</span>=<span class="string">&quot;change(value)&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> mes = <span class="title function_">ref</span>(<span class="string">&#x27;hello world&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> mesDiv = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#mes&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    mesDiv.<span class="property">innerText</span> = mes.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&quot;input&quot;</span>)[<span class="number">0</span>].<span class="property">value</span> = mes.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">ref</span>(<span class="params">target</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Proxy</span>(</span></span><br><span class="line"><span class="language-javascript">        &#123; <span class="attr">value</span>: target &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="title function_">get</span>(<span class="params">target, key</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;get&quot;</span>, key);</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> target[key];</span></span><br><span class="line"><span class="language-javascript">          &#125;,</span></span><br><span class="line"><span class="language-javascript">          <span class="title function_">set</span>(<span class="params">target, key, value</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;set&quot;</span>, key, value);</span></span><br><span class="line"><span class="language-javascript">            mesDiv.<span class="property">innerText</span> = value;</span></span><br><span class="line"><span class="language-javascript">            target[key] = value;</span></span><br><span class="line"><span class="language-javascript">          &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">      );</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">change</span>(<span class="params">val</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="variable language_">console</span>.<span class="title function_">log</span>(val);</span></span><br><span class="line"><span class="language-javascript">      mes.<span class="property">value</span> = val;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Proxy </tag>
            
            <tag> render </tag>
            
            <tag> hyperscript </tag>
            
            <tag> VNode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试标签外挂语法</title>
      <link href="/artical/f54f5be.html"/>
      <url>/artical/f54f5be.html</url>
      
        <content type="html"><![CDATA[<h2 id="安装">安装<a class="header-anchor" href="#安装">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-butterfly-tag-plugins-plus --save</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">卸载默认的渲染器</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm uninstall hexo-renderer-marked --save</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-renderer-kramed --save</span></span><br></pre></td></tr></table></figure><h2 id="配置">配置<a class="header-anchor" href="#配置">#</a></h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tag-plugins-plus</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/615e2dec/</span></span><br><span class="line"><span class="attr">tag_plugins:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开关</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span> <span class="comment">#过滤器优先权</span></span><br><span class="line">  <span class="attr">issues:</span> <span class="literal">false</span> <span class="comment">#issues标签依赖注入开关</span></span><br><span class="line">  <span class="attr">link:</span></span><br><span class="line">    <span class="attr">placeholder:</span> <span class="string">/img/link.png</span> <span class="comment">#link_card标签默认的图标图片</span></span><br><span class="line">  <span class="attr">CDN:</span></span><br><span class="line">    <span class="attr">anima:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/assets/font-awesome-animation.min.css</span> <span class="comment">#动画标签anima的依赖</span></span><br><span class="line">    <span class="attr">jquery:</span> <span class="string">https://npm.elemecdn.com/jquery@latest/dist/jquery.min.js</span> <span class="comment">#issues标签依赖</span></span><br><span class="line">    <span class="attr">issues:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/assets/issues.js</span> <span class="comment">#issues标签依赖</span></span><br><span class="line">    <span class="attr">iconfont:</span> <span class="string">//at.alicdn.com/t/font_2032782_8d5kxvn09md.js</span> <span class="comment">#参看https://akilar.top/posts/d2ebecef/</span></span><br><span class="line">    <span class="attr">carousel:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/assets/carousel-touch.js</span></span><br><span class="line">    <span class="attr">tag_plugins_css:</span> <span class="string">https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/tag_plugins.css</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">备选值/类型</th><th style="text-align:left">释义</th></tr></thead><tbody><tr><td style="text-align:left">enable</td><td style="text-align:left">true/false</td><td style="text-align:left">【必选】控制开关</td></tr><tr><td style="text-align:left">priority</td><td style="text-align:left">number</td><td style="text-align:left">【可选】过滤器优先级，数值越小，执行越早，默认为10，选填</td></tr><tr><td style="text-align:left">issues</td><td style="text-align:left">true/false</td><td style="text-align:left">【可选】issues标签控制开关，默认为false</td></tr><tr><td style="text-align:left">link.placeholder</td><td style="text-align:left">【必选】link卡片外挂标签的默认图标</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">CDN.anima</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】动画标签anima的依赖</td></tr><tr><td style="text-align:left">CDN.jquery</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】issues标签依赖</td></tr><tr><td style="text-align:left">CDN.issues</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】issues标签依赖</td></tr><tr><td style="text-align:left">CDN.iconfont</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】iconfont标签symbol样式引入，如果不想引入，则设为false</td></tr><tr><td style="text-align:left">CDN.carousel</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】carousel旋转相册标签鼠标拖动依赖，如果不想引入则设为false</td></tr><tr><td style="text-align:left">CDN.tag_plugins_css</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】外挂标签样式的CSS依赖，为避免CDN缓存延迟，建议将@latest改为具体版本号</td></tr></tbody></table><h2 id="字体样式">字体样式<a class="header-anchor" href="#字体样式">#</a></h2><div class="tabs" id="字体样式"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#字体样式-1">示例代码</button></li><li class="tab"><button type="button" data-href="#字体样式-2">渲染效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="字体样式-1"><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 带 &#123;% u 下划线 %&#125; 的文本</span><br><span class="line"><span class="bullet">2.</span> 带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class="line"><span class="bullet">3.</span> 带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class="line"><span class="bullet">4.</span> 带 &#123;% del 删除线 %&#125; 的文本</span><br><span class="line"><span class="bullet">5.</span> 键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class="line"><span class="bullet">6.</span> 密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="字体样式-2"><ol><li class="lvl-3"><p>带 <u>下划线</u> 的文本</p></li><li class="lvl-3"><p>带 <emp>着重号</emp> 的文本</p></li><li class="lvl-3"><p>带 <wavy>波浪线</wavy> 的文本</p></li><li class="lvl-3"><p>带 <del>删除线</del> 的文本</p></li><li class="lvl-3"><p>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></p></li><li class="lvl-3"><p>密码样式的文本：<psw>这里没有验证码</psw></p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="分栏效果">分栏效果<a class="header-anchor" href="#分栏效果">#</a></h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例代码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs %&#125;</span><br><span class="line">&lt;!-- tab 示例代码 --&gt;</span><br><span class="line">示例代码tab</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 渲染效果 --&gt;</span><br><span class="line">渲染效果tab</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">示例代码</button></li><li class="tab"><button type="button" data-href="#-2">渲染效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><p>示例代码tab</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><p>渲染效果tab</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="字体颜色">字体颜色<a class="header-anchor" href="#字体颜色">#</a></h2><div class="tabs" id="color"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#color-1">示例代码</button></li><li class="tab"><button type="button" data-href="#color-2">渲染效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="color-1"><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% span red, 红色 %&#125;、&#123;% span yellow, 黄色 %&#125;、&#123;% span green, 绿色 %&#125;、&#123;% span cyan, 青色 %&#125;、&#123;% span blue, 蓝色 %&#125;、&#123;% span gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% span center logo large, Volantis %&#125;</span><br><span class="line">&#123;% span center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="color-2"><ul class="lvl-0"><li class="lvl-2"><p>彩色文字在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。- 超大号文字文档「开始」页面中的标题部分就是超大号文字。<span class='p center logo large'>Volantis</span><span class='p center small'>A Wonderful Theme for Hexo</span></p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="提示框">提示框<a class="header-anchor" href="#提示框">#</a></h2><div class="tabs" id="tips"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#tips-1">示例代码</button></li><li class="tab"><button type="button" data-href="#tips-2">渲染效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="tips-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note simple %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary simple %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success simple %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info simple %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning simple %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger simple %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="tips-2"><div class="note simple"><p>默认 提示块标签</p></div><div class="note default simple"><p>default 提示块标签</p></div><div class="note primary simple"><p>primary 提示块标签</p></div><div class="note success simple"><p>success 提示块标签</p></div><div class="note info simple"><p>info 提示块标签</p></div><div class="note warning simple"><p>warning 提示块标签</p></div><div class="note danger simple"><p>danger 提示块标签</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="链接卡片">链接卡片<a class="header-anchor" href="#链接卡片">#</a></h2><div class="tabs" id="linkcard"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#linkcard-1">示例代码</button></li><li class="tab"><button type="button" data-href="#linkcard-2">渲染效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="linkcard-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 参考文章, https://akilar.top/posts/615e2dec/ %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="linkcard-2"><div class="tag link"><a class="link-card" title="参考文章" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src="/img/link.png"/></div><div class="right"><p class="text">参考文章</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="徽标">徽标<a class="header-anchor" href="#徽标">#</a></h2><div class="tabs" id="badge"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#badge-1">示例代码</button></li><li class="tab"><button type="button" data-href="#badge-2">渲染效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="badge-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Theme,Butterfly %&#125;</span><br><span class="line">&#123;% bdage Frame,Hexo,hexo %&#125;</span><br><span class="line">&#123;% bdage CDN,JsDelivr,jsDelivr||abcdef,https://metroui.org.ua/index.html,本站使用JsDelivr为静态资源提供CDN加速 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割</span><br><span class="line">&#123;% bdage Source,GitHub,GitHub||,https://github.com/ %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="badge-2"><p><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Butterfly-Theme-orange?logo=&color=orange&link=&"></object><br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Hexo-Frame-orange?logo=hexo&color=orange&link=&"></object></p><p><object class="ghbdage" style="margin-inline:5px" title="本站使用JsDelivr为静态资源提供CDN加速" standby="loading..." data="https://img.shields.io/badge/JsDelivr-CDN-orange?logo=jsDelivr&color=abcdef&link=https://metroui.org.ua/index.html&"></object></p><p><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/GitHub-Source-orange?logo=GitHub&color=orange&link=https://github.com/&"></object></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="折叠块">折叠块<a class="header-anchor" href="#折叠块">#</a></h2><div class="tabs" id="folding"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#folding-1">示例代码</button></li><li class="tab"><button type="button" data-href="#folding-2">渲染效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="folding-1"><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding Python %&#125;</span><br><span class="line"><span class="code">```py</span></span><br><span class="line"><span class="code">print(&quot;hello world&quot;);</span></span><br><span class="line"><span class="code">```</span></span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="folding-2"><details class="folding-tag" ><summary> Python </summary>              <div class='content'>              <figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello world&quot;</span>);</span><br></pre></td></tr></table></figure>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="markdown-it">markdown-it<a class="header-anchor" href="#markdown-it">#</a></h2><p><a href="https://github.com/hexojs/hexo-renderer-markdown-it">https://github.com/hexojs/hexo-renderer-markdown-it</a></p><p><a href="https://github.com/markdown-it/markdown-it">https://github.com/markdown-it/markdown-it</a></p><p><a href="https://xxy5.com/vitepress-cn/markdown.html#%E9%AB%98%E7%BA%A7%E8%AE%BE%E7%BD%AE">https://xxy5.com/vitepress-cn/markdown.html#高级设置</a></p><figure class="highlight shell"><figcaption><span>安装</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm i hexo-renderer-markdown-it --save</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">hello vue SFC</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><div class="tips"><p>This is a tip</p></div><div class="success"><p>This is a tip</p></div><div class="danger"><p>This is a tip</p></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">msg</span>: <span class="string">&#x27;Highlighted!&#x27;</span> <span class="comment">// [!code hl]  (将[!code  hl] 之间的空格减为一个后生效)</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><details open><summary><span class="pre-summary">&nbsp;</span><strong>点击折叠</strong></summary><p>这是被隐藏的内容</p></details><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">::: tips</span><br><span class="line"><span class="strong">**提示**</span></span><br><span class="line">这是一个提示</span><br><span class="line">:::</span><br></pre></td></tr></table></figure><div class="tips"><p><strong>提示</strong><br>这是一个提示</p></div><p>::: code-group</p><figure class="highlight js"><figcaption><span>[config.js]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@type</span> &#123;<span class="type">import(&#x27;vitepress&#x27;).UserConfig</span>&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> config = &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> config</span><br></pre></td></tr></table></figure><figure class="highlight ts"><figcaption><span>[config.ts]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="keyword">type</span> &#123; <span class="title class_">UserConfig</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vitepress&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="attr">config</span>: <span class="title class_">UserConfig</span> = &#123;</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> config</span><br></pre></td></tr></table></figure><p>:::</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vue3父子通信&lt;script setup&gt;语法</title>
      <link href="/artical/f8ff8dc8.html"/>
      <url>/artical/f8ff8dc8.html</url>
      
        <content type="html"><![CDATA[<h2 id="子传父">子传父<a class="header-anchor" href="#子传父">#</a></h2><blockquote><p>代码都不多,  很多注释,  仔细读代码</p></blockquote><h3 id="defineExpose">defineExpose<a class="header-anchor" href="#defineExpose">#</a></h3><blockquote><p><a href="https://cn.vuejs.org/guide/essentials/template-refs.html#ref-on-component">https://cn.vuejs.org/guide/essentials/template-refs.html#ref-on-component</a></p><p>如果一个子组件使用的是选项式 API 或没有使用 <code>&lt;script setup&gt;</code>，被引用的组件实例和该子组件的 <code>this</code> 完全一致，这意味着父组件对子组件的每一个属性和方法都有<strong>完全的访问权</strong>。这使得在父组件和子组件之间创建紧密耦合的实现细节变得很容易，当然也因此，应该只在绝对需要时才使用组件引用。<strong>大多数情况下</strong>，你应该首先<strong>使用标准的 props 和 emit 接口</strong>来实现<strong>父子组件交互。</strong></p></blockquote><p>将<strong>子组件</strong>中的数据传递给<strong>父组件</strong>中</p><blockquote><p>父组件中<strong>可直接修改</strong>子组件暴露的值</p></blockquote><figure class="highlight plaintext"><figcaption><span>son.vue(子组件)</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; v-model=&quot;data&quot;&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;!-- 使用了 &lt;script setup&gt; 的组件是默认私有的：</span><br><span class="line">一个父组件无法访问到一个使用了 &lt;script setup&gt; 的子组件中的任何东西，</span><br><span class="line">除非子组件在其中通过 defineExpose 宏显式暴露：--&gt;</span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;;</span><br><span class="line">const data = ref(&#x27;子组件中的值&#x27;);</span><br><span class="line">function fun() &#123;</span><br><span class="line">    console.log(&quot;子组件中的方法&quot;)</span><br><span class="line">&#125;</span><br><span class="line">// 像 defineExpose 这样的编译器宏不需要导入</span><br><span class="line">// https://cn.vuejs.org/api/sfc-script-setup.html#defineexpose</span><br><span class="line">defineExpose(&#123;</span><br><span class="line">    data,</span><br><span class="line">    fun</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>父组件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">// 父组件</span><br><span class="line">&lt;template&gt;</span><br><span class="line">&lt;!-- ref属性: https://cn.vuejs.org/api/built-in-special-attributes.html#ref --&gt;</span><br><span class="line">    子组件: &lt;Son ref=&quot;sonData&quot; /&gt;&lt;br/&gt;</span><br><span class="line">    父组件: &lt;span&gt;&#123;&#123; sonData &#125;&#125;&lt;/span&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import Son from &#x27;./Son.vue&#x27;</span><br><span class="line">import &#123; ref, onMounted &#125; from &#x27;vue&#x27;;</span><br><span class="line">// 声明一个 ref 来存放该元素的引用</span><br><span class="line">// 必须和模板里的 ref 同名</span><br><span class="line">const sonData = ref();</span><br><span class="line"> // !!!只能在挂载之后调用, 即创建DOM节点之后</span><br><span class="line">onMounted(() =&gt; &#123;</span><br><span class="line">  // sonData.value 是子组件的实例</span><br><span class="line">  // 调用子组件的方法</span><br><span class="line">  sonData.value.fun();</span><br><span class="line">  // 读取子组件的值</span><br><span class="line">  console.log(sonData.value.data);</span><br><span class="line">  // 修改子组件的值</span><br><span class="line">  sonData.value.data = &#x27;修改后的值&#x27;;</span><br><span class="line">  console.log(sonData.value.data);</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>运行结果</p><img src="http://qiniu.yujing.fit/typora_img/sonTOFather (1).gif"><blockquote><p>think: <code>setup</code>是最先运行的，在渲染DOM节点之前，<code>sonData</code>都是空的<code>ref()</code>，无法读取子组件中的值，直到渲染完<code>&lt;Son ref=&quot;sonData&quot; /&gt;</code>，即组件挂载完成后，才可访问。<a href="https://cn.vuejs.org/guide/essentials/lifecycle.html#lifecycle-diagram">生命周期↗</a></p><p>注意: 不能直接写在<code>&lt;script setup&gt;</code>中，可封装在一个函数中，需要时再调用（调用时应在挂载完成后）</p><p><a href="https://cn.vuejs.org/api/built-in-special-attributes.html#ref">官网</a>原句: “关于 ref 注册时机的重要说明：因为 ref 本身是作为渲染函数的结果来创建的，<strong>必须等待组件挂载后才能对它进行访问</strong>。”</p><p><a href="https://cn.vuejs.org/guide/essentials/template-refs.html#ref-on-component">组件上的ref↗</a></p></blockquote><h3 id="defineEmits">defineEmits<a class="header-anchor" href="#defineEmits">#</a></h3><ul class="lvl-0"><li class="lvl-2"><p>父组件给子组件传递一个函数</p></li><li class="lvl-2"><p>子组件向函数传递参数，间接传递给父组件</p></li><li class="lvl-2"><p>父组件中<strong>无法直接更改</strong>子组件中的值</p></li></ul><figure class="highlight plaintext"><figcaption><span>子组件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; v-model=&quot;data&quot; /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;;</span><br><span class="line">const data = ref(&#x27;子组件中的值&#x27;);</span><br><span class="line">const emits = defineEmits([&#x27;change&#x27;]);</span><br><span class="line">// 初始化时，触发一次change事件</span><br><span class="line">emits(&#x27;change&#x27;, data.value);</span><br><span class="line">// 监听data的变化，自动触发change事件, 将最新值传递给父组件</span><br><span class="line">watch(data, newVal =&gt; &#123;</span><br><span class="line">    emits(&#x27;change&#x27;, newVal);</span><br><span class="line">&#125;);    </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>父组件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  子组件: &lt;Son @change=&quot;change&quot;/&gt;&lt;br /&gt;</span><br><span class="line">  父组件: &lt;span&gt;&#123;&#123; data &#125;&#125;&lt;/span&gt;&lt;br /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import Son from &#x27;./Son.vue&#x27;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;;</span><br><span class="line"> // 不应在父组件中修改data的值, 而是在子组件中调用</span><br><span class="line"> // 修改此处的data并不会引起子组件中的值变化, 是子=&gt;父单向的</span><br><span class="line">const data = ref(&#x27;&#x27;);</span><br><span class="line">function change(params) &#123;</span><br><span class="line">  data.value = params;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="父传子">父传子<a class="header-anchor" href="#父传子">#</a></h2><h3 id="defineEmits-2">defineEmits<a class="header-anchor" href="#defineEmits-2">#</a></h3><p>使用<a href="https://cn.vuejs.org/api/sfc-script-setup.html#defineprops-defineemits"><code>defineEmits()</code></a>在子组件中声明所传递的事件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// 子组件</span><br><span class="line">&lt;template&gt;</span><br><span class="line">&lt;!-- 模板中可直接通过$emit调用事件 --&gt;</span><br><span class="line">    &lt;button @click=&quot;$emit(&#x27;change&#x27;,&#x27;参数&#x27;)&quot;&gt;button&lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">const emit = defineEmits([&#x27;change&#x27;, &#x27;delete&#x27;])</span><br><span class="line">// 调用父组件中的change_函数</span><br><span class="line">emit(&#x27;change&#x27;,&#x27;参数&#x27;);</span><br><span class="line">// 调用父组件中的delete_函数</span><br><span class="line">emit(&#x27;delete&#x27;,&#x27;参数a&#x27;,&#x27;参数b&#x27;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// 父组件</span><br><span class="line">&lt;template&gt;</span><br><span class="line">&lt;!-- @符号之后的是子组件中调用的事件名, 通常名字保持一致或者类似 --&gt;</span><br><span class="line">    &lt;Son @change=&quot;change_&quot; @delete=&quot;delete_&quot; /&gt;&lt;br /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import Son from &#x27;./Son.vue&#x27;</span><br><span class="line">function change_(data) &#123;</span><br><span class="line">  console.log(data);</span><br><span class="line">&#125;</span><br><span class="line">function delete_(a, b) &#123;</span><br><span class="line">  console.log(a, b);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="子组件中修改父组件的值">子组件中修改父组件的值<a class="header-anchor" href="#子组件中修改父组件的值">#</a></h4><ul class="lvl-0"><li class="lvl-2"><p>子组件中即可修改父组件键中的值</p></li><li class="lvl-2"><p>当然 父组件中 肯定也可以修改自己的值</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// 子组件</span><br><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;button @click=&quot;$emit(&#x27;setName&#x27;, &#x27;李四&#x27;)&quot;&gt;改为李四&lt;/button&gt;</span><br><span class="line">        &lt;p&gt;父组件的name: &#123;&#123; name &#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">const emit = defineEmits([&#x27;setName&#x27;]);</span><br><span class="line">const prop = defineProps([&#x27;name&#x27;]);</span><br><span class="line">emit(&#x27;setName&#x27;, &#x27;王五&#x27;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// 父组件</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;Son :name=&quot;name&quot; @setName = setName /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import Son from &#x27;./Son.vue&#x27;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line">let name  = ref(&#x27;张三&#x27;);</span><br><span class="line">function setName(val) &#123;</span><br><span class="line">  name.value = val;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="defineProps">defineProps<a class="header-anchor" href="#defineProps">#</a></h3><p>使用<a href="https://cn.vuejs.org/api/sfc-script-setup.html#defineprops-defineemits"><code>defineProps()</code></a>在子组件中声明所传递的属性</p><blockquote><p>props是<strong>单向数据流</strong>，只在父组件中改变，传递给子组件，在子组件<strong>只读</strong></p><p>想改变怎么办？<a href="#%E5%AD%90%E7%BB%84%E4%BB%B6%E4%B8%AD%E4%BF%AE%E6%94%B9%E7%88%B6%E7%BB%84%E4%BB%B6%E7%9A%84%E5%80%BC">通过父组件向子组件传递set事件即可</a>, 通过父组件传递的函数调用间接改变父组件的值</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">// 子组件</span><br><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;!-- 在模板中可直接使用, 无需 props.name --&gt;</span><br><span class="line">        &lt;div&gt;&#123;&#123; name &#125;&#125;&lt;/div&gt;</span><br><span class="line">    &lt;div&gt;&#123;&#123; age &#125;&#125;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">// 未使用defineprops声明的属性将会穿透到子组件的根元素上</span><br><span class="line">// (如name与age未被声明, 将渲染为 =&gt; &lt;div name=&quot;张三&quot; age=&quot;18&quot;&gt;&lt;/div&gt;) </span><br><span class="line">// 没有根元素将不会渲染任何元素, 可通过绑定v-bind=&quot;$attrs&quot; 属性决定渲染到哪个元素, 可绑定多个(禁用继承也生效)</span><br><span class="line">const props = defineProps([&#x27;name&#x27;, &#x27;age&#x27;]);  </span><br><span class="line">// 读取</span><br><span class="line">console.log(props.name, props.age);</span><br><span class="line">// props.name = &#x27;李四&#x27;;  // 只读的 Set operation on key &quot;name&quot; failed: target is readonly</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// 父组件</span><br><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;Son name=&quot;张三&quot; :age=&quot;age&quot; /&gt;&lt;br /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import Son from &#x27;./Son.vue&#x27;</span><br><span class="line">const age = 18;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p><a href="https://cn.vuejs.org/guide/components/attrs.html#attribute-inheritance">属性穿透</a>: “透传 attribute”指的是传递给一个组件，却没有被该组件声明为 <a href="https://cn.vuejs.org/guide/components/props.html">props</a> 或 <a href="https://cn.vuejs.org/guide/components/events.html#defining-custom-events">emits</a> 的 attribute 或者 <code>v-on</code> 事件监听器。最常见的例子就是 <code>class</code>、<code>style</code> 和 <code>id</code>。满足条件可深层传递</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">// 子组件</span><br><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;!-- 被age属性 defineProps&quot;消费&quot;, 将不会出现在$attrs中 --&gt;</span><br><span class="line">    &lt;div&gt;&#123;&#123; $attrs &#125;&#125; | &#123;&#123;age&#125;&#125;&lt;/div&gt;  </span><br><span class="line">    &lt;!-- 渲染结果: &lt;div name=&quot;张三&quot;&gt;&#123;&quot;name&quot;: &quot;张三&quot;&#125; | 18&lt;/div&gt; --&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">// 使用普通的 &lt;script&gt; 来声明选项, 禁用继承属性</span><br><span class="line">// 禁用后将不会有name属性, 渲染结果 =&gt; &lt;div&gt;&#123;&quot;name&quot;: &quot;张三&quot;&#125; | 18&lt;/div&gt;</span><br><span class="line">// ! 查看渲染结果请解开下面的注释</span><br><span class="line">/* export default &#123;</span><br><span class="line">  inheritAttrs: false</span><br><span class="line">&#125; */</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">// 在 &lt;script setup&gt; 中访问 attrs  </span><br><span class="line">import &#123; useAttrs &#125; from &#x27;vue&#x27;</span><br><span class="line">const attrs = useAttrs();  // 只读 =&gt;  Proxy &#123;name: &#x27;张三&#x27;, __vInternal: 1&#125;</span><br><span class="line">    </span><br><span class="line">// defineProps对象写法</span><br><span class="line">defineProps(&#123;</span><br><span class="line">    age: &#123;</span><br><span class="line">        type: Number,</span><br><span class="line">        default: 20</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// 父组件</span><br><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;Son name=&quot;张三&quot; :age=&quot;age&quot; /&gt;&lt;br /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import Son from &#x27;./Son.vue&#x27;</span><br><span class="line">const age = 18;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>props<strong>传递对象</strong>的简写</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 子组件</span><br><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;!-- 渲染结果: &lt;div name=&quot;张三&quot; age=&quot;18&quot;&gt;&#123; &quot;name&quot;: &quot;张三&quot;, &quot;age&quot;: 18 &#125;&lt;/div&gt; --&gt;</span><br><span class="line">    &lt;div&gt;&#123;&#123; $attrs &#125;&#125;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// 父组件</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;Son v-bind=&quot;user&quot; /&gt;</span><br><span class="line">  &lt;!-- 等同于 --&gt;</span><br><span class="line">  &lt;Son :name=&quot;user.name&quot; :age=&quot;user.age&quot; /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import Son from &#x27;./Son.vue&#x27;</span><br><span class="line">const user = &#123;</span><br><span class="line">  name: &#x27;张三&#x27;,</span><br><span class="line">  age: 18</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="父子双向">父子双向<a class="header-anchor" href="#父子双向">#</a></h2><p><a href="https://kaifa.baidu.com/searchPage?wd=vue3%E6%A8%A1%E6%9D%BF%E6%B8%B2%E6%9F%93%E6%B5%81%E7%A8%8B&amp;module=SEARCH">vue3模板渲染流程</a></p><h3 id="defiineExpose">defiineExpose<a class="header-anchor" href="#defiineExpose">#</a></h3><ul class="lvl-0"><li class="lvl-2"><p>双向绑定，无论在子组件中还是在父组件中都可以修改，并在另一个组件中得到响应</p></li><li class="lvl-2"><p>方式一： 通过defiineExpose，起点是子（数据源）暴露给父</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// 子组件</span><br><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;input type=&quot;text&quot; v-model=&quot;data&quot;&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;;</span><br><span class="line">const data = ref(&#x27;子组件中的值&#x27;);  // 数据源在子中</span><br><span class="line"></span><br><span class="line">defineExpose(&#123;</span><br><span class="line">    data,</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">// 父组件</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;!--只是随便加一个属性:q=&quot;sonData&quot;, 主要是读取sonData的值就能变正常, why?--&gt;</span><br><span class="line">  子组件: &lt;Son ref=&quot;sonData&quot; :q=&quot;sonData&quot;/&gt;&lt;br /&gt;</span><br><span class="line">  父组件: &lt;span&gt;&#123;&#123; data &#125;&#125;&lt;/span&gt;&lt;br /&gt;</span><br><span class="line">  父组件: &lt;input type=&quot;text&quot; :value=&quot;data&quot; @input=&quot;setData&quot;&gt;&lt;br /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import Son from &#x27;./Son.vue&#x27;</span><br><span class="line">import &#123; ref, onMounted, computed &#125; from &#x27;vue&#x27;;</span><br><span class="line">const sonData = ref();</span><br><span class="line">let data;  // 只读的计算属性</span><br><span class="line">onMounted(() =&gt; &#123;</span><br><span class="line">  // 通过计算属性响应式的获取子组件的值</span><br><span class="line">  data = computed(() =&gt; sonData.value.data);</span><br><span class="line">&#125;)</span><br><span class="line">function setData(e) &#123;</span><br><span class="line">  sonData.value.data = e.target.value;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><img src="http://qiniu.yujing.fit/typora_img/sonTOFather (2).gif"><h3 id="Emit和Prop">Emit和Prop<a class="header-anchor" href="#Emit和Prop">#</a></h3><ul class="lvl-0"><li class="lvl-2"><p>方式二： 通过emit和props(推荐)， 起点是父（数据源）</p></li></ul><figure class="highlight plaintext"><figcaption><span>子组件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 写法一</span><br><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;p&gt;子组件: &#123;&#123; name &#125;&#125;&lt;/p&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; :value=&quot;name&quot; @input=&quot;$emit(&#x27;setName&#x27;, $event.target.value)&quot;&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">defineProps([&#x27;name&#x27;]);  //声明name</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 写法二: 子组件还可以只使用模板中的函数, 不再需要script标签中的内容</span><br><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;p&gt;子组件: &#123;&#123; $attrs.name &#125;&#125;&lt;/p&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; :value=&quot;$attrs.name&quot; @input=&quot;$emit(&#x27;setName&#x27;, $event.target.value)&quot;&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><figcaption><span>父组件</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;Son :name=&quot;name&quot; @setName = setName /&gt;</span><br><span class="line">  &lt;div&gt;父组件: &#123;&#123; name &#125;&#125;&lt;/div&gt;</span><br><span class="line">  &lt;input type=&quot;text&quot; v-model=&quot;name&quot;&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import Son from &#x27;./Son.vue&#x27;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line">let name  = ref(&#x27;张三&#x27;);  // // 数据源在父中</span><br><span class="line">function setName(val) &#123;</span><br><span class="line">  name.value = val;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><img src="http://qiniu.yujing.fit/typora_img/sonTOFather (3).gif" /><h2 id="总结">总结<a class="header-anchor" href="#总结">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p><strong>父传子</strong>并在子中<strong>只读</strong>，用<strong>props</strong></p></li><li class="lvl-2"><p>父传子，但在子中可写，需再传递一个改值的事件到子组件中，props+emits</p></li><li class="lvl-2"><p>子传父，在父中只读，用emit向父组件中传递参数的形式</p></li><li class="lvl-2"><p>子传父，在父中可写，用defineExpose</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
            <tag> defineExpose </tag>
            
            <tag> defineProps </tag>
            
            <tag> defineEmits </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>包管理器npm/cnpm/yarn/pnpm</title>
      <link href="/artical/14d5f4d2.html"/>
      <url>/artical/14d5f4d2.html</url>
      
        <content type="html"><![CDATA[<h2 id="npm">npm<a class="header-anchor" href="#npm">#</a></h2><p>概念:  npm 是 <a href="https://nodejs.org/en/">Node.js</a> 的包管理工具，用来安装各种 Node.js 的扩展。</p><blockquote><p>它于 2010 年发布，开启了 web 开发的新时代。在此之前，项目依赖库都是手动下载和管理的，npm 是把 WEB 开发推向了一个更高的阶段。</p><p>npm 是 JavaScript 的包管理工具，也是世界上最大的软件注册表。有超过 60 万个 JavaScript 代码包可供下载，每周下载约 30 亿次。npm 让 JavaScript 开发人员可以轻松地使用其他开发人员共享的代码。(转自openchina)</p></blockquote><p>npm 主要做三件事：</p><ul class="lvl-0"><li class="lvl-2"><p>一个用于管理 npm 体验各个方面的网站</p></li><li class="lvl-2"><p>用于访问广泛的 JavaScript 包公共数据库的注册表</p></li><li class="lvl-2"><p>用于通过终端与 npm 交互的命令行界面（CLI）</p></li></ul><blockquote><p>安装：下载<code>Node</code>安装的同时会默认安装<code>npm</code></p><p>Node安装方式一, 通过官网https://nodejs.org下载安装方式二:  <a href="#nvm">通过Node版本管理工具<code>nvm</code>安装</a></p></blockquote><p>Node中文文档： <a href="https://www.nodeapp.cn/">https://www.nodeapp.cn/</a></p><p>npm中文文档：  <a href="https://www.npmjs.cn/">https://www.npmjs.cn/</a></p><p>菜鸟教程：<a href="https://www.runoob.com/nodejs/nodejs-npm.html">https://www.runoob.com/nodejs/nodejs-npm.html</a></p><p>设置淘宝镜像: <code> npm config set registry https://registry.npm.taobao.org</code><br>检查镜像地址:  <code>npm config get registry</code></p><p>常用命令：</p><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td><code>npm -v</code></td><td>输出版本号,一般用于检查是否安装成功</td></tr><tr><td><code>npm init</code></td><td>初始化管理文件,  自己输入</td></tr><tr><td><code>npm init -y</code></td><td>初始化管理文件, 使用默认值</td></tr><tr><td><code>npm i</code></td><td>安装项目的全部依赖包，<code>package.json</code>文件中记录的</td></tr><tr><td><code>npm i express</code></td><td><code>i</code>表示<code>install</code>，下载包，加上<code>@</code>可指定版本,默认下载最新版</td></tr><tr><td><code>npm i express -g</code></td><td><code>-g</code> 全局安装express框架</td></tr><tr><td><code>npm list -g</code></td><td>输出全局安装的所有包以及版本信息</td></tr><tr><td><code>npm uninstall express</code></td><td>卸载express框架</td></tr><tr><td><code>npm ls</code></td><td>查看<code>node_modules</code>文件夹中安装的所有包</td></tr><tr><td><code>npm search express</code></td><td>搜索express框架</td></tr><tr><td><code>npm update express</code></td><td>更新包</td></tr><tr><td><code>npm publish</code></td><td>发布包</td></tr></tbody></table><h3 id="版本号">版本号<a class="header-anchor" href="#版本号">#</a></h3><p>使用 NPM 下载和发布代码时都会接触到版本号。NPM 使用语义版本号来管理代码，这里简单介绍一下。语义版本号分为X.Y.Z三位，分别代表主版本号、次版本号和补丁版本号。当代码变更时，版本号按以下原则更新。</p><ul class="lvl-0"><li class="lvl-2"><p>如果只是修复bug，需要更新Z位。</p></li><li class="lvl-2"><p>如果是新增了功能，但是向下兼容，需要更新Y位。</p></li><li class="lvl-2"><p>如果有大变动，向下不兼容，需要更新X位。</p></li></ul><h3 id="帮助">帮助<a class="header-anchor" href="#帮助">#</a></h3><ul class="lvl-0"><li class="lvl-2"><p><code>npm</code> 查看全部命令</p></li><li class="lvl-2"><p><code>npm &lt;command&gt; -h</code> 查看命令基本用法</p></li><li class="lvl-2"><p><code>npm help &lt;command&gt; </code> 在浏览器中查看命令完整用法</p></li><li class="lvl-2"><p><code>npm help npm</code> 查看<code>npm</code>的完整说明文档</p></li></ul><h3 id="npx">npx<a class="header-anchor" href="#npx">#</a></h3><p>介绍:  npx 是 npm5.2.0版本新增的一个工具包，定义为npm包的执行者，相比 npm，npx 会自动安装依赖包并执行某个命令。</p><p>eg: 用 create-react-app 脚手架创建一个 react 项目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 第一步</span><br><span class="line">npm i -g create-react-app</span><br><span class="line"></span><br><span class="line">// 第二步</span><br><span class="line">create-react-app my-react-app</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 使用npx一步到位</span><br><span class="line">npx create-react-app my-react-app</span><br></pre></td></tr></table></figure><p>npx 会在当前目录下的<code>./node_modules/.bin</code>里去查找是否有可执行的命令，没有找到的话再从全局里查找是否有安装对应的模块，全局也没有的话就会自动下载对应的模块，如上面的 create-react-app，npx 会将 create-react-app 下载到一个临时目录，用完即删，不会占用本地资源。</p><blockquote><p>npm自带npx，可以直接使用，如果没有可以手动安装一下：<code>npm i -g npx</code></p></blockquote><h3 id="nvm">nvm<a class="header-anchor" href="#nvm">#</a></h3><p><a href="https://github.com/nvm-sh/nvm#intro">官方</a>介绍: <code>nvm</code> allows you to quickly install and use different versions of node via the command line.</p><p>翻译过来就是: <code>nvm</code>允许您通过命令行快速安装和使用不同版本的Node。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 使用样例</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nvm use 16</span></span><br><span class="line">Now using node v16.9.1 (npm v7.21.1)</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">node -v</span></span><br><span class="line">v16.9.1</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nvm use 14</span></span><br><span class="line">Now using node v14.18.0 (npm v6.14.15)</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">node -v</span></span><br><span class="line">v14.18.0</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nvm install 12</span></span><br><span class="line">Now using node v12.22.6 (npm v6.14.5)</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">node -v</span></span><br><span class="line">v12.22.6</span><br></pre></td></tr></table></figure><p>安装:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash</span><br></pre></td></tr></table></figure><p>window安装:  <a href="https://github.com/coreybutler/nvm-windows/releases">https://github.com/coreybutler/nvm-windows/releases</a></p><p>推荐下载:   <a href="https://github.com/coreybutler/nvm-windows/releases/download/1.1.10/nvm-setup.exe">nvm-setup.exe</a></p><p>使用:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nvm install 8.11.1 #下载8.11.1</span><br><span class="line">nvm use 8.9.0 #使用8.9.0</span><br><span class="line">nvm alias default 6.10.0 #设置默认版本</span><br><span class="line">nvm uninstall 10.16.3 # 卸载版本</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看下载的所有node版本, 并标出当前使用的版本</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nvm <span class="built_in">ls</span></span></span><br><span class="line"></span><br><span class="line">  * 16.17.0 (Currently using 64-bit executable)</span><br></pre></td></tr></table></figure><h3 id="nrm">nrm<a class="header-anchor" href="#nrm">#</a></h3><p>介绍: 管理镜像源</p><blockquote><p>有些功能淘宝镜像不可用, 需切换官方镜像</p></blockquote><p>安装:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i nrm -g</span><br></pre></td></tr></table></figure><p>使用:</p><ul class="lvl-0"><li class="lvl-2"><p>切换官方镜像:  <code>nrm use npm</code></p></li><li class="lvl-2"><p>切换淘宝镜像:  <code>nrm use taobao</code></p></li><li class="lvl-2"><p>查看所有可用源<code>nrm ls</code></p></li><li class="lvl-2"><p>测试延迟: <code>nrm test npm</code></p></li></ul><h3 id="npkill">npkill<a class="header-anchor" href="#npkill">#</a></h3><p>介绍: 快速删除<code>node_modules</code>文件夹, 重装依赖</p><p>使用方式一:</p><ol><li class="lvl-3"><p>全局安装: <code>npm i -g npkill</code></p></li><li class="lvl-3"><p><code>npkill</code> 选择要删除的<code>node_modules</code>文件夹, 按<code>空格</code>删除</p></li></ol><p>使用方式二: <code>npx npkill</code> 选择要删除的<code>node_modules</code>文件夹, 按<code>空格</code>删除</p><h2 id="cnpm">cnpm<a class="header-anchor" href="#cnpm">#</a></h2><p>官网: <a href="https://npmmirror.com/">https://npmmirror.com/</a></p><ul class="lvl-0"><li class="lvl-2"><p>安装并设置镜像: <code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></p></li><li class="lvl-2"><p>使用: <code>cnpm install express</code></p></li></ul><h2 id="yarn">yarn<a class="header-anchor" href="#yarn">#</a></h2><p>官网: <a href="https://www.yarnpkg.cn/">https://www.yarnpkg.cn/</a></p><p>介绍:  yarn 包管理器是 npm 的一个替代方案，由 Facebook 于 2016 年 10 月发布。yarn 最初的目标是处理 npm 的缺点，比如性能和安全问题。yarn 很快被定位为一个安全、快速、可靠的 JavaScript 依赖管理工具。</p><p><strong>特点</strong></p><ul class="lvl-0"><li class="lvl-2"><p>离线模式：如果您之前下载了软件包，则可以在没有任何互联网连接的情况下安装。</p></li><li class="lvl-2"><p>确定性：无论安装顺序如何，相同的依赖关系将以相同的方式安装在计算机上。</p></li><li class="lvl-2"><p>网络性能：Yarn 有效地将请求排序，避免请求堆积，以最大限度地提高网络利用率。</p></li><li class="lvl-2"><p>多个注册表：无论从 npm 或 Bower 安装任何包，能保持包工作流程相同。</p></li><li class="lvl-2"><p>网络恢复：单个请求失败不会导致安装失败。 请求在失败时会自动重试。</p></li><li class="lvl-2"><p>平面模式：将不兼容版本的依赖项解析为单个版本，以避免创建重复项。</p></li></ul><p><strong>安装</strong>:  <code>npm install -g yarn</code></p><p><strong>使用:</strong></p><ul class="lvl-0"><li class="lvl-2"><p><code>npm install | yarn</code>：安装依赖</p></li><li class="lvl-2"><p><code>npm install [package] | yarn add [package]</code>：安装一个包</p></li><li class="lvl-2"><p><code>npm install --save-dev [package] | yarn add --dev [package]</code>：安装包作为开发依赖项</p></li><li class="lvl-2"><p><code>npm uninstall [package] | yarn remove [package]</code>：卸载一个包</p></li><li class="lvl-2"><p><code>npm uninstall --save-dev [package] | yarn remove [package]</code>：卸载开发依赖包</p></li><li class="lvl-2"><p><code>npm update | yarn upgrade</code>：更新的依赖关系</p></li><li class="lvl-2"><p><code>npm update [package] | yarn upgrade [package]</code>：更新包</p></li></ul><h2 id="pnpm">pnpm<a class="header-anchor" href="#pnpm">#</a></h2><p>官网: <a href="https://pnpm.io/zh">https://pnpm.io/zh</a></p><p>介绍: <code>pnpm</code>代表<code>performant npm</code>（高性能的npm），同<code>npm</code>和<code>Yarn</code>，都属于<code>Javascript</code>包管理安装工具，它较<code>npm</code>和<code>Yarn</code>在性能上得到很大提升，被称为<strong>快速的，节省磁盘空间的包管理工具</strong>。</p><blockquote><p>当使用 <code>npm</code> 或 <code>Yarn</code> 时，如果你有 100 个项目使用了某个依赖（dependency），就会有 100 份该依赖的副本保存在硬盘上，而在使用 <code>pnpm</code> 时，依赖会被存储在内容可寻址的存储中，所以：</p><ol><li class="lvl-3">如果你用到了某依赖项的不同版本，只会将不同版本间有差异的文件添加到仓库。 例如，如果某个包有100个文件，而它的新版本只改变了其中1个文件。那么 <code>pnpm update</code> 时只会向存储中心额外添加1个新文件，而不会因为仅仅一个文件的改变复制整新版本包的内容。</li><li class="lvl-3">所有文件都会存储在硬盘上的某一位置。 当软件包被安装时，包里的文件会硬链接到这一位置上对应的文件，而不会占用额外的磁盘空间。 这允许你跨项目地共享同一版本的依赖。</li></ol><p>因此，您在磁盘上节省了大量空间，这与项目和依赖项的数量成正比，并且安装速度要快得多！</p></blockquote><h3 id="安装">安装<a class="header-anchor" href="#安装">#</a></h3><ul class="lvl-0"><li class="lvl-2"><p>直接powershell安装: <code> iwr https://get.pnpm.io/install.ps1 -useb | iex</code></p></li><li class="lvl-2"><p>通过npm安装:  <code>npm install -g pnpm</code></p></li></ul><h3 id="使用">使用<a class="header-anchor" href="#使用">#</a></h3><ul class="lvl-0"><li class="lvl-2"><p>安装项目全部依赖:  <code>pnpm i</code></p></li><li class="lvl-2"><p>添加包:  <code>pnpm add express</code></p></li></ul><p>推荐文章：<a href="https://zhuanlan.zhihu.com/p/451025256?utm_id=0">JavaScript 包管理器简史（npm/yarn/pnpm）</a></p>]]></content>
      
      
      <categories>
          
          <category> npm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node </tag>
            
            <tag> npm </tag>
            
            <tag> nvm </tag>
            
            <tag> npx </tag>
            
            <tag> cnpm </tag>
            
            <tag> pnpm </tag>
            
            <tag> yarn </tag>
            
            <tag> nrm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git基本使用</title>
      <link href="/artical/2df4f2b8.html"/>
      <url>/artical/2df4f2b8.html</url>
      
        <content type="html"><![CDATA[<h1>Git笔记</h1><p><a href="https://git-scm.com/">https://git-scm.com/</a></p><p><a href="https://www.runoob.com/typescript/ts-tutorial.html">https://www.runoob.com/typescript/ts-tutorial.html</a></p><p>git本地文档: file:///D:/Program/Git/mingw64/share/doc/git-doc/git.html</p><p><a href="https://backlog.com/git-tutorial/cn/">https://backlog.com/git-tutorial/cn/</a></p><p><a href="https://www.runoob.com/git/git-tutorial.html">https://www.runoob.com/git/git-tutorial.html</a></p><h2 id="查看帮助-学习方式">查看帮助| 学习方式<a class="header-anchor" href="#查看帮助-学习方式">#</a></h2><h3 id="查看文档-基本常用命令使用">查看文档 | 基本常用命令使用<a class="header-anchor" href="#查看文档-基本常用命令使用">#</a></h3><p>git自带的都是英文版, 很难受</p><ol><li class="lvl-4"><p>直接控制台输入<code>git</code>, 查看常用命令基本用法</p></li><li class="lvl-4"><p><code>git help git</code> 打开一本完整的说明网页</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">PS D:\desktop&gt; git</span><br><span class="line">usage: git [-v | --version] [-h | --<span class="built_in">help</span>] [-C &lt;path&gt;] [-c &lt;name&gt;=&lt;value&gt;]</span><br><span class="line">           [--exec-path[=&lt;path&gt;]] [--html-path] [--man-path] [--info-path]</span><br><span class="line">           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]</span><br><span class="line">           [--git-dir=&lt;path&gt;] [--work-tree=&lt;path&gt;] [--namespace=&lt;name&gt;]</span><br><span class="line">           [--super-prefix=&lt;path&gt;] [--config-env=&lt;name&gt;=&lt;envvar&gt;]</span><br><span class="line">           &lt;<span class="built_in">command</span>&gt; [&lt;args&gt;]</span><br><span class="line"></span><br><span class="line">These are common Git commands used <span class="keyword">in</span> various situations:</span><br><span class="line"></span><br><span class="line">start a working area (see also: git <span class="built_in">help</span> tutorial)</span><br><span class="line">   <span class="built_in">clone</span>     Clone a repository into a new directory <span class="comment">#将存储库克隆到新目录中</span></span><br><span class="line">   <span class="comment"># 创建空的Git存储库或重新初始化现有存储库</span></span><br><span class="line">   init      Create an empty Git repository or reinitialize an existing one</span><br><span class="line"></span><br><span class="line">work on the current change (see also: git <span class="built_in">help</span> everyday)</span><br><span class="line">   add       Add file contents to the index</span><br><span class="line">             <span class="comment"># 移动或重命名文件、目录或符号链接</span></span><br><span class="line">   <span class="built_in">mv</span>        Move or rename a file, a directory, or a symlink</span><br><span class="line">   restore   Restore working tree files</span><br><span class="line">              <span class="comment"># 从工作树和索引中删除文件</span></span><br><span class="line">   <span class="built_in">rm</span>        Remove files from the working tree and from the index</span><br><span class="line"></span><br><span class="line">examine the <span class="built_in">history</span> and state (see also: git <span class="built_in">help</span> revisions)</span><br><span class="line">   bisect    Use binary search to find the commit that introduced a bug</span><br><span class="line">   diff      Show changes between commits, commit and working tree, etc</span><br><span class="line">   grep      Print lines matching a pattern</span><br><span class="line">   <span class="built_in">log</span>       Show commit logs</span><br><span class="line">   show      Show various types of objects</span><br><span class="line">   status    Show the working tree status</span><br><span class="line"></span><br><span class="line">grow, mark and tweak your common <span class="built_in">history</span></span><br><span class="line">   branch    List, create, or delete branches</span><br><span class="line">   commit    Record changes to the repository</span><br><span class="line">   merge     Join two or more development histories together</span><br><span class="line">   rebase    Reapply commits on top of another base tip</span><br><span class="line">   reset     Reset current HEAD to the specified state</span><br><span class="line">   switch    Switch branches</span><br><span class="line">   tag       Create, list, delete or verify a tag object signed with GPG</span><br><span class="line"></span><br><span class="line">collaborate (see also: git <span class="built_in">help</span> workflows)</span><br><span class="line">   fetch     Download objects and refs from another repository</span><br><span class="line">   pull      Fetch from and integrate with another repository or a <span class="built_in">local</span> branch</span><br><span class="line">   push      Update remote refs along with associated objects</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;git help -a&#x27;</span> and <span class="string">&#x27;git help -g&#x27;</span> list available subcommands and some</span><br><span class="line">concept guides. See <span class="string">&#x27;git help &lt;command&gt;&#x27;</span> or <span class="string">&#x27;git help &lt;concept&gt;&#x27;</span></span><br><span class="line">to <span class="built_in">read</span> about a specific subcommand or concept.</span><br><span class="line">See <span class="string">&#x27;git help git&#x27;</span> <span class="keyword">for</span> an overview of the system.</span><br></pre></td></tr></table></figure><h3 id="查看某个具体命令的用法">查看某个具体命令的用法<a class="header-anchor" href="#查看某个具体命令的用法">#</a></h3><ul class="lvl-0"><li class="lvl-4"><p>eg: <code> git commit --help</code> 或者<code>git help commit</code>,<br>查看<code>commit</code>命令的用法, 自动打开一个本地网页</p></li></ul><h3 id="Git概念指南">Git概念指南<a class="header-anchor" href="#Git概念指南">#</a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">PS D:\desktop&gt; git <span class="built_in">help</span> -g</span><br><span class="line">The Git concept guides are:</span><br><span class="line">   attributes          Defining attributes per path</span><br><span class="line">   cli                 Git command-line interface and conventions</span><br><span class="line">   core-tutorial       A Git core tutorial <span class="keyword">for</span> developers</span><br><span class="line">   credentials         Providing usernames and passwords to Git</span><br><span class="line">   cvs-migration       Git <span class="keyword">for</span> CVS <span class="built_in">users</span></span><br><span class="line">   diffcore            Tweaking diff output</span><br><span class="line">   everyday            A useful minimum <span class="built_in">set</span> of commands <span class="keyword">for</span> Everyday Git</span><br><span class="line">   faq                 Frequently asked questions about using Git</span><br><span class="line">   glossary            A Git Glossary</span><br><span class="line">   hooks               Hooks used by Git</span><br><span class="line">   ignore              Specifies intentionally untracked files to ignore</span><br><span class="line">   mailmap             Map author/committer names and/or E-Mail addresses</span><br><span class="line">   modules             Defining submodule properties</span><br><span class="line">   namespaces          Git namespaces</span><br><span class="line">   remote-helpers      Helper programs to interact with remote repositories</span><br><span class="line">   repository-layout   Git Repository Layout</span><br><span class="line">   revisions           Specifying revisions and ranges <span class="keyword">for</span> Git</span><br><span class="line">   submodules          Mounting one repository inside another</span><br><span class="line">   tutorial            A tutorial introduction to Git</span><br><span class="line">   tutorial-2          A tutorial introduction to Git: part two</span><br><span class="line">   workflows           An overview of recommended workflows with Git</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="完整的命令基本说明">完整的命令基本说明<a class="header-anchor" href="#完整的命令基本说明">#</a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line">PS D:\desktop&gt; git <span class="built_in">help</span> -a</span><br><span class="line">See <span class="string">&#x27;git help &lt;command&gt;&#x27;</span> to <span class="built_in">read</span> about a specific subcommand</span><br><span class="line"></span><br><span class="line">Main Porcelain Commands</span><br><span class="line">   add                  Add file contents to the index</span><br><span class="line">   am                   Apply a series of patches from a mailbox</span><br><span class="line">   archive              Create an archive of files from a named tree</span><br><span class="line">   bisect               Use binary search to find the commit that introduced a bug</span><br><span class="line">   branch               List, create, or delete branches</span><br><span class="line">   bundle               Move objects and refs by archive</span><br><span class="line">   checkout             Switch branches or restore working tree files</span><br><span class="line">   cherry-pick          Apply the changes introduced by some existing commits</span><br><span class="line">   citool               Graphical alternative to git-commit</span><br><span class="line">   clean                Remove untracked files from the working tree</span><br><span class="line">   <span class="built_in">clone</span>                Clone a repository into a new directory</span><br><span class="line">   commit               Record changes to the repository</span><br><span class="line">   describe             Give an object a human readable name based on an available ref</span><br><span class="line">   diff                 Show changes between commits, commit and working tree, etc</span><br><span class="line">   fetch                Download objects and refs from another repository</span><br><span class="line">   format-patch         Prepare patches <span class="keyword">for</span> e-mail submission</span><br><span class="line">   gc                   Cleanup unnecessary files and optimize the <span class="built_in">local</span> repository</span><br><span class="line">   gitk                 The Git repository browser</span><br><span class="line">   grep                 Print lines matching a pattern</span><br><span class="line">   gui                  A portable graphical interface to Git</span><br><span class="line">   init                 Create an empty Git repository or reinitialize an existing one</span><br><span class="line">   <span class="built_in">log</span>                  Show commit logs</span><br><span class="line">   maintenance          Run tasks to optimize Git repository data</span><br><span class="line">   merge                Join two or more development histories together</span><br><span class="line">   <span class="built_in">mv</span>                   Move or rename a file, a directory, or a symlink</span><br><span class="line">   notes                Add or inspect object notes</span><br><span class="line">   pull                 Fetch from and integrate with another repository or a <span class="built_in">local</span> branch</span><br><span class="line">   push                 Update remote refs along with associated objects</span><br><span class="line">   range-diff           Compare two commit ranges (e.g. two versions of a branch)</span><br><span class="line">   rebase               Reapply commits on top of another base tip</span><br><span class="line">   reset                Reset current HEAD to the specified state</span><br><span class="line">   restore              Restore working tree files</span><br><span class="line">   revert               Revert some existing commits</span><br><span class="line">   <span class="built_in">rm</span>                   Remove files from the working tree and from the index</span><br><span class="line">   shortlog             Summarize <span class="string">&#x27;git log&#x27;</span> output</span><br><span class="line">   show                 Show various types of objects</span><br><span class="line">   sparse-checkout      Reduce your working tree to a subset of tracked files</span><br><span class="line">   stash                Stash the changes <span class="keyword">in</span> a dirty working directory away</span><br><span class="line">   status               Show the working tree status</span><br><span class="line">   submodule            Initialize, update or inspect submodules</span><br><span class="line">   switch               Switch branches</span><br><span class="line">   tag                  Create, list, delete or verify a tag object signed with GPG</span><br><span class="line">   worktree             Manage multiple working trees</span><br><span class="line"></span><br><span class="line">Ancillary Commands / Manipulators</span><br><span class="line">   config               Get and <span class="built_in">set</span> repository or global options</span><br><span class="line">   fast-export          Git data exporter</span><br><span class="line">   fast-import          Backend <span class="keyword">for</span> fast Git data importers</span><br><span class="line">   filter-branch        Rewrite branches</span><br><span class="line">   mergetool            Run merge conflict resolution tools to resolve merge conflicts</span><br><span class="line">   pack-refs            Pack heads and tags <span class="keyword">for</span> efficient repository access</span><br><span class="line">   prune                Prune all unreachable objects from the object database</span><br><span class="line">   reflog               Manage reflog information</span><br><span class="line">   remote               Manage <span class="built_in">set</span> of tracked repositories</span><br><span class="line">   repack               Pack unpacked objects <span class="keyword">in</span> a repository</span><br><span class="line">   replace              Create, list, delete refs to replace objects</span><br><span class="line"></span><br><span class="line">Ancillary Commands / Interrogators</span><br><span class="line">   annotate             Annotate file lines with commit information</span><br><span class="line">   blame                Show what revision and author last modified each line of a file</span><br><span class="line">   bugreport            Collect information <span class="keyword">for</span> user to file a bug report</span><br><span class="line">   count-objects        Count unpacked number of objects and their disk consumption</span><br><span class="line">   difftool             Show changes using common diff tools</span><br><span class="line">   fsck                 Verifies the connectivity and validity of the objects <span class="keyword">in</span> the database</span><br><span class="line">   gitweb               Git web interface (web frontend to Git repositories)</span><br><span class="line">   <span class="built_in">help</span>                 Display <span class="built_in">help</span> information about Git</span><br><span class="line">   instaweb             Instantly browse your working repository <span class="keyword">in</span> gitweb</span><br><span class="line">   merge-tree           Show three-way merge without touching index</span><br><span class="line">   rerere               Reuse recorded resolution of conflicted merges</span><br><span class="line">   show-branch          Show branches and their commits</span><br><span class="line">   verify-commit        Check the GPG signature of commits</span><br><span class="line">   verify-tag           Check the GPG signature of tags</span><br><span class="line">   whatchanged          Show logs with difference each commit introduces</span><br><span class="line"></span><br><span class="line">Interacting with Others</span><br><span class="line">   archimport           Import a GNU Arch repository into Git</span><br><span class="line">   cvsexportcommit      Export a single commit to a CVS checkout</span><br><span class="line">   cvsimport            Salvage your data out of another SCM people love to hate</span><br><span class="line">   cvsserver            A CVS server emulator <span class="keyword">for</span> Git</span><br><span class="line">   imap-send            Send a collection of patches from stdin to an IMAP folder</span><br><span class="line">   p4                   Import from and submit to Perforce repositories</span><br><span class="line">   quiltimport          Applies a quilt patchset onto the current branch</span><br><span class="line">   request-pull         Generates a summary of pending changes</span><br><span class="line">   send-email           Send a collection of patches as emails</span><br><span class="line">   svn                  Bidirectional operation between a Subversion repository and Git</span><br><span class="line"></span><br><span class="line">Low-level Commands / Manipulators</span><br><span class="line">   apply                Apply a patch to files and/or to the index</span><br><span class="line">   checkout-index       Copy files from the index to the working tree</span><br><span class="line">   commit-graph         Write and verify Git commit-graph files</span><br><span class="line">   commit-tree          Create a new commit object</span><br><span class="line">   hash-object          Compute object ID and optionally creates a blob from a file</span><br><span class="line">   index-pack           Build pack index file <span class="keyword">for</span> an existing packed archive</span><br><span class="line">   merge-file           Run a three-way file merge</span><br><span class="line">   merge-index          Run a merge <span class="keyword">for</span> files needing merging</span><br><span class="line">   mktag                Creates a tag object with extra validation</span><br><span class="line">   mktree               Build a tree-object from ls-tree formatted text</span><br><span class="line">   multi-pack-index     Write and verify multi-pack-indexes</span><br><span class="line">   pack-objects         Create a packed archive of objects</span><br><span class="line">   prune-packed         Remove extra objects that are already <span class="keyword">in</span> pack files</span><br><span class="line">   read-tree            Reads tree information into the index</span><br><span class="line">   symbolic-ref         Read, modify and delete symbolic refs</span><br><span class="line">   unpack-objects       Unpack objects from a packed archive</span><br><span class="line">   update-index         Register file contents <span class="keyword">in</span> the working tree to the index</span><br><span class="line">   update-ref           Update the object name stored <span class="keyword">in</span> a ref safely</span><br><span class="line">   write-tree           Create a tree object from the current index</span><br><span class="line"></span><br><span class="line">Low-level Commands / Interrogators</span><br><span class="line">   cat-file             Provide content or <span class="built_in">type</span> and size information <span class="keyword">for</span> repository objects</span><br><span class="line">   cherry               Find commits yet to be applied to upstream</span><br><span class="line">   diff-files           Compares files <span class="keyword">in</span> the working tree and the index</span><br><span class="line">   diff-index           Compare a tree to the working tree or index</span><br><span class="line">   diff-tree            Compares the content and mode of blobs found via two tree objects</span><br><span class="line">   for-each-ref         Output information on each ref</span><br><span class="line">   for-each-repo        Run a Git <span class="built_in">command</span> on a list of repositories</span><br><span class="line">   get-tar-commit-id    Extract commit ID from an archive created using git-archive</span><br><span class="line">   ls-files             Show information about files <span class="keyword">in</span> the index and the working tree</span><br><span class="line">   ls-remote            List references <span class="keyword">in</span> a remote repository</span><br><span class="line">   ls-tree              List the contents of a tree object</span><br><span class="line">   merge-base           Find as good common ancestors as possible <span class="keyword">for</span> a merge</span><br><span class="line">   name-rev             Find symbolic names <span class="keyword">for</span> given revs</span><br><span class="line">   pack-redundant       Find redundant pack files</span><br><span class="line">   rev-list             Lists commit objects <span class="keyword">in</span> reverse chronological order</span><br><span class="line">   rev-parse            Pick out and massage parameters</span><br><span class="line">   show-index           Show packed archive index</span><br><span class="line">   show-ref             List references <span class="keyword">in</span> a <span class="built_in">local</span> repository</span><br><span class="line">   unpack-file          Creates a temporary file with a blob<span class="string">&#x27;s contents</span></span><br><span class="line"><span class="string">   var                  Show a Git logical variable</span></span><br><span class="line"><span class="string">   verify-pack          Validate packed Git archive files</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Low-level Commands / Syncing Repositories</span></span><br><span class="line"><span class="string">   daemon               A really simple server for Git repositories</span></span><br><span class="line"><span class="string">   fetch-pack           Receive missing objects from another repository</span></span><br><span class="line"><span class="string">   http-backend         Server side implementation of Git over HTTP</span></span><br><span class="line"><span class="string">   send-pack            Push objects over Git protocol to another repository</span></span><br><span class="line"><span class="string">   update-server-info   Update auxiliary info file to help dumb servers</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Low-level Commands / Internal Helpers</span></span><br><span class="line"><span class="string">   check-attr           Display gitattributes information</span></span><br><span class="line"><span class="string">   check-ignore         Debug gitignore / exclude files</span></span><br><span class="line"><span class="string">   check-mailmap        Show canonical names and email addresses of contacts</span></span><br><span class="line"><span class="string">   check-ref-format     Ensures that a reference name is well formed</span></span><br><span class="line"><span class="string">   column               Display data in columns</span></span><br><span class="line"><span class="string">   credential           Retrieve and store user credentials</span></span><br><span class="line"><span class="string">   credential-cache     Helper to temporarily store passwords in memory</span></span><br><span class="line"><span class="string">   credential-store     Helper to store credentials on disk</span></span><br><span class="line"><span class="string">   fmt-merge-msg        Produce a merge commit message</span></span><br><span class="line"><span class="string">   hook                 Run git hooks</span></span><br><span class="line"><span class="string">   interpret-trailers   Add or parse structured information in commit messages</span></span><br><span class="line"><span class="string">   mailinfo             Extracts patch and authorship from a single e-mail message</span></span><br><span class="line"><span class="string">   mailsplit            Simple UNIX mbox splitter program</span></span><br><span class="line"><span class="string">   merge-one-file       The standard helper program to use with git-merge-index</span></span><br><span class="line"><span class="string">   patch-id             Compute unique ID for a patch</span></span><br><span class="line"><span class="string">   sh-i18n              Git&#x27;</span>s i18n setup code <span class="keyword">for</span> shell scripts</span><br><span class="line">   sh-setup             Common Git shell script setup code</span><br><span class="line">   stripspace           Remove unnecessary whitespace</span><br><span class="line"></span><br><span class="line">External commands</span><br><span class="line">   askpass</span><br><span class="line">   askyesno</span><br><span class="line">   credential-helper-selector</span><br><span class="line">   credential-manager-core</span><br><span class="line">   flow</span><br><span class="line">   lfs</span><br><span class="line">   update-git-for-windows</span><br></pre></td></tr></table></figure><h1>基本流程</h1><ul class="lvl-0"><li class="lvl-4"><p><code>add</code>添加到暂存区</p></li><li class="lvl-4"><p><code>commit</code>提交到本地仓库</p></li><li class="lvl-4"><p><code>push</code>推送到远程仓库</p></li></ul><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>git init</td><td>初始化仓库</td></tr><tr><td>git status</td><td>查看本地库状态</td></tr><tr><td>git add .</td><td>添加到暂存区</td></tr><tr><td>git commit -m “日志信息”</td><td>提交到本地库</td></tr><tr><td>git reflog</td><td>查看历史记录</td></tr><tr><td>git reset —hard 版本号</td><td>切换版本</td></tr><tr><td>git branch -v</td><td>查看分支</td></tr><tr><td>git branch 新分支名</td><td>新建分支</td></tr><tr><td>git chechkout 目标分支名</td><td>切换分支</td></tr><tr><td>git merge 目标分支名</td><td>将目标分支合并到当前分支</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">PS D:\desktop\web小案例\git-study&gt; git status</span><br><span class="line">On branch master</span><br><span class="line"></span><br><span class="line">No commits yet</span><br><span class="line"></span><br><span class="line">Untracked files:</span><br><span class="line">  (use <span class="string">&quot;git add &lt;file&gt;...&quot;</span> to include <span class="keyword">in</span> what will be committed)</span><br><span class="line">        .gitignore</span><br><span class="line">        .vscode/</span><br><span class="line">        README.md</span><br><span class="line">        index.html</span><br><span class="line">        package-lock.json</span><br><span class="line">        package.json</span><br><span class="line">        postcss.config.cjs</span><br><span class="line">        public/</span><br><span class="line">        src/</span><br><span class="line">        tailwind.config.cjs</span><br><span class="line">        tsconfig.json</span><br><span class="line">        tsconfig.node.json</span><br><span class="line">        vite.config.ts</span><br><span class="line"></span><br><span class="line">nothing added to commit but untracked files present (use <span class="string">&quot;git add&quot;</span> to track)</span><br><span class="line">PS D:\desktop\web小案例\git-study&gt;</span><br></pre></td></tr></table></figure><h1>常用提交命令</h1><h2 id="1-git-init">1. git init<a class="header-anchor" href="#1-git-init">#</a></h2><p>作用:  生成一个.git的隐藏文件夹，初始化仓库，以后此文件夹中的内容都可以交由git管理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS D:\desktop\web小案例\git-study&gt; git init</span><br><span class="line">Initialized empty Git repository <span class="keyword">in</span> D:/desktop/web小案例/git-study/.git/</span><br></pre></td></tr></table></figure><h2 id="2-git-status">2. git status<a class="header-anchor" href="#2-git-status">#</a></h2><ul class="lvl-0"><li class="lvl-4"><p>当有修改的内容未添加到暂存区时，其文件名显示红色</p></li><li class="lvl-4"><p>当添加到暂存区后，文件名显示绿色</p></li><li class="lvl-4"><p>当提交到本地库后，显示<code>nothing to commit, working tree clean</code></p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 系统同户名 git版本 文件夹路径 当前所在分支</span></span><br><span class="line">30362@Tiam-Dell MINGW64 /d/desktop/web小案例/git-study (master)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="http://qiniu.yujing.fit/typora_img/image_ypVgmMPalD.png" alt=""></p><p>还未添加到暂存区时,  文件显示红色</p><p><img src="http://qiniu.yujing.fit/typora_img/image_oeUeV1HjHd.png" alt=""></p><p>添加到暂存区后,  文件显示绿色</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># git commit 提交到本地库后</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 再次查看状态</span></span><br><span class="line">$ git status</span><br><span class="line">On branch master</span><br><span class="line">nothing to commit, working tree clean  <span class="comment"># 没什么可提交的，工作树干净</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3-git-commit">3. git commit<a class="header-anchor" href="#3-git-commit">#</a></h2><ul class="lvl-0"><li class="lvl-4"><p>将暂存区中的内容 提交到本地库中</p></li><li class="lvl-4"><p><code>-m</code> 提交日志</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">30362@Tiam-Dell MINGW64 /d/desktop/web小案例/git-study (master)</span><br><span class="line"><span class="comment"># 提交到本地库中</span></span><br><span class="line">$ git commit -m <span class="string">&quot;第一次提交&quot;</span></span><br><span class="line">[master (root-commit) 173c2e6] 第一次提交</span><br><span class="line"> 18 files changed, 3314 insertions(+)</span><br><span class="line"> create mode 100644 .gitignore</span><br><span class="line"> create mode 100644 .vscode/extensions.json</span><br><span class="line"> create mode 100644 README.md</span><br><span class="line"> create mode 100644 index.html</span><br><span class="line">....</span><br><span class="line"></span><br><span class="line">30362@Tiam-Dell MINGW64 /d/desktop/web小案例/git-study (master)</span><br><span class="line"><span class="comment"># 精简查看历史提交信息</span></span><br><span class="line">$ git reflog</span><br><span class="line">173c2e6 (HEAD -&gt; master) HEAD@&#123;0&#125;: commit (initial): 第一次提交</span><br><span class="line"></span><br><span class="line">30362@Tiam-Dell MINGW64 /d/desktop/web小案例/git-study (master)</span><br><span class="line"><span class="comment"># 完整查看历史提交信息</span></span><br><span class="line">$ git <span class="built_in">log</span></span><br><span class="line">commit 173c2e64043d12e9f5ab135c8f90b771a84eb3da (HEAD -&gt; master)</span><br><span class="line">Author: Tiam &lt;3036293856@qq.com&gt;</span><br><span class="line">Date:   Fri Jan 20 19:57:07 2023 +0800</span><br><span class="line"></span><br><span class="line">    第一次提交</span><br></pre></td></tr></table></figure><h2 id="4-合并操作add与commit">4. 合并操作add与commit<a class="header-anchor" href="#4-合并操作add与commit">#</a></h2><ul class="lvl-0"><li class="lvl-4"><p><code>git commit -am &quot;第二次提交&quot;</code></p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PS D:\desktop\web小案例\git-study&gt; git commit -am <span class="string">&quot;第二次提交&quot;</span></span><br><span class="line">[master 42eea42] 第二次提交</span><br><span class="line"> 1 file changed, 1 insertion(+), 37 deletions(-)</span><br><span class="line">PS D:\desktop\web小案例\git-study&gt; git reflog</span><br><span class="line"><span class="comment"># 当前所在的版本</span></span><br><span class="line">42eea42 (HEAD -&gt; master) HEAD@&#123;0&#125;: commit: 第二次提交</span><br><span class="line">173c2e6 HEAD@&#123;1&#125;: commit (initial): 第一次提交</span><br></pre></td></tr></table></figure><h2 id="5-版本切换">5. 版本切换<a class="header-anchor" href="#5-版本切换">#</a></h2><ul class="lvl-0"><li class="lvl-4"><p><code>git reset --hard 版本号</code></p></li><li class="lvl-4"><p><code>—hard</code></p></li><li class="lvl-4"><p>Resets the index and working tree. Any changes to tracked files in the working tree since <code>&lt;commit&gt;</code> are discarded. Any untracked files or directories in the way of writing any tracked files are simply deleted.</p></li><li class="lvl-4"><p>翻译: 重置索引和工作树。自&lt;Commit&gt;以来对工作树中跟踪的文件所做的任何更改都将被丢弃。以写入任何跟踪文件的方式的任何未跟踪的文件或目录被简单地删除。</p></li><li class="lvl-4"><p>无<code>—hard</code>内容未发生改变,  不知道为啥</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">PS D:\desktop\web小案例\git-study&gt; git reflog</span><br><span class="line">42eea42 (HEAD -&gt; master) HEAD@&#123;0&#125;: commit: 第二次提交</span><br><span class="line">173c2e6 HEAD@&#123;1&#125;: commit (initial): 第一次提交</span><br><span class="line"></span><br><span class="line">PS D:\desktop\web小案例\git-study&gt; git reset --hard 173c2e6</span><br><span class="line">HEAD is now at 173c2e6 第一次提交</span><br><span class="line"></span><br><span class="line">PS D:\desktop\web小案例\git-study&gt; git reflog</span><br><span class="line">173c2e6 (HEAD -&gt; master) HEAD@&#123;0&#125;: reset: moving to 173c2e6</span><br><span class="line">173c2e6 (HEAD -&gt; master) HEAD@&#123;1&#125;: reset: moving to 173c2e6</span><br><span class="line">42eea42 HEAD@&#123;2&#125;: commit: 第二次提交</span><br><span class="line">173c2e6 (HEAD -&gt; master) HEAD@&#123;3&#125;: commit (initial): 第一次提交</span><br></pre></td></tr></table></figure><h1>分支</h1><ul class="lvl-0"><li class="lvl-4"><p><code>git branch -v</code> 查看分支</p></li><li class="lvl-4"><p><code>git branch dev</code> 新建一个名为dev的分支</p></li><li class="lvl-4"><p><code>git checkout dev</code> 切换到的dev分支</p></li><li class="lvl-4"><p><code>git branch -M main</code> 更改当前分支名为main</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看分支</span></span><br><span class="line">PS D:\desktop\web小案例\git-study&gt; git branch -v</span><br><span class="line">* master 42eea42 第二次提交</span><br><span class="line"><span class="comment"># 添加分支</span></span><br><span class="line">PS D:\desktop\web小案例\git-study&gt; git branch dev</span><br><span class="line">PS D:\desktop\web小案例\git-study&gt; git branch -v </span><br><span class="line">  dev    42eea42 第二次提交</span><br><span class="line">* master 42eea42 第二次提交  <span class="comment"># *号表示当前所在分支</span></span><br><span class="line"><span class="comment"># 切换分支</span></span><br><span class="line">PS D:\desktop\web小案例\git-study&gt; git checkout dev</span><br><span class="line">Switched to branch <span class="string">&#x27;dev&#x27;</span></span><br><span class="line">PS D:\desktop\web小案例\git-study&gt; git branch -v   </span><br><span class="line">* dev    42eea42 第二次提交</span><br><span class="line">  master 42eea42 第二次提交</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>分支是独立的, 不会影响另一个分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PS D:\desktop\web小案例\git-study&gt; git commit -am <span class="string">&quot;在dev分支第一次提交&quot;</span></span><br><span class="line">[dev 4a62386] 在dev分支第一次提交</span><br><span class="line"> 1 file changed, 2 insertions(+)</span><br><span class="line">PS D:\desktop\web小案例\git-study&gt; git branch -v</span><br><span class="line">* dev    4a62386 在dev分支第一次提交</span><br><span class="line">  master 42eea42 第二次提交</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PS D:\desktop\web小案例\git-study&gt; git reflog</span><br><span class="line">4a62386 (HEAD -&gt; dev) HEAD@&#123;0&#125;: commit: 在dev分支第一次提交</span><br><span class="line">42eea42 (master) HEAD@&#123;1&#125;: checkout: moving from master to dev</span><br><span class="line">42eea42 (master) HEAD@&#123;2&#125;: reset: moving to 42eea42</span><br><span class="line">173c2e6 HEAD@&#123;3&#125;: reset: moving to 173c2e6</span><br><span class="line">173c2e6 HEAD@&#123;4&#125;: reset: moving to 173c2e6</span><br><span class="line">42eea42 (master) HEAD@&#123;5&#125;: commit: 第二次提交</span><br><span class="line">173c2e6 HEAD@&#123;6&#125;: commit (initial): 第一次提交</span><br></pre></td></tr></table></figure><p>注意:  当切换回<code>master</code>分支时,  内容也会切回&quot;第二次提交&quot;时的内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS D:\desktop\web小案例\git-study&gt; git checkout master</span><br><span class="line">Switched to branch <span class="string">&#x27;master&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="合并分支">合并分支<a class="header-anchor" href="#合并分支">#</a></h2><ul class="lvl-0"><li class="lvl-4"><p><code>git merge dev</code>将目标分支<code>dev</code>合并到当前所在分支</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PS D:\desktop\web小案例\git-study&gt; git merge dev</span><br><span class="line">Updating 42eea42..4a62386</span><br><span class="line">Fast-forward</span><br><span class="line"> README.md | 2 ++</span><br><span class="line"> 1 file changed, 2 insertions(+)</span><br></pre></td></tr></table></figure><h3 id="分支冲突">分支冲突<a class="header-anchor" href="#分支冲突">#</a></h3><p>当两个分支中的同一文件中的同一行的同一位置，产生了不同的内容，产生冲突</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PS D:\desktop\web小案例\git-study&gt; git merge dev</span><br><span class="line">Auto-merging README.md</span><br><span class="line">CONFLICT (content): Merge conflict <span class="keyword">in</span> README.md</span><br><span class="line"><span class="comment"># 自动合并失败；请修复冲突，然后提交结果。</span></span><br><span class="line">Automatic merge failed; fix conflicts and <span class="keyword">then</span> commit the result.</span><br></pre></td></tr></table></figure><p><img src="http://qiniu.yujing.fit/typora_img/image_iDrSBPiTz7.png" alt=""></p><p>手动解决冲突后</p><p>再次合并</p><p>注意：  合并只会改变当前分支，目标分支不会被改变</p><h1>远程仓库</h1><ul class="lvl-0"><li class="lvl-4"><p>推送和拉取都需要验证权限</p></li><li class="lvl-4"><p>可以将多个成员加到一个远程库下，实现多人开发一个项目</p></li></ul><h2 id="推送">推送<a class="header-anchor" href="#推送">#</a></h2><p>方式一:</p><ul class="lvl-0"><li class="lvl-4"><p><code>git remote add [远程库别名] [远程库地址]</code></p></li><li class="lvl-4"><p><code>git push -u [远程库别名] [本地仓库分支]:[远程仓库分支]</code></p></li><li class="lvl-4"><p>当本地分支名与远程库分支名相同时可简写为: </p></li><li class="lvl-4"><p><code>git push -u [远程库别名] [分支名]</code></p></li></ul><p>方式二</p><ul class="lvl-0"><li class="lvl-4"><p><code>git push -u [远程库地址] [远程仓库分支]</code></p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加远程仓库</span></span><br><span class="line">git remote add [远程库别名] [远程库地址]</span><br><span class="line"><span class="comment"># 举例</span></span><br><span class="line">git remote add origin https://github.com/tiam-bloom/website-navigate.git</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PS D:\desktop\web小案例\git-study&gt; git remote add github https://github.com/tiam-bloom/git-study.git</span><br><span class="line"><span class="comment"># 查看添加的远程仓库</span></span><br><span class="line">PS D:\desktop\web小案例\git-study&gt; git remote</span><br><span class="line">github</span><br><span class="line">PS D:\desktop\web小案例\git-study&gt; git remote -v</span><br><span class="line">github  https://github.com/tiam-bloom/git-study.git (fetch)</span><br><span class="line">github  https://github.com/tiam-bloom/git-study.git (push) </span><br></pre></td></tr></table></figure><p>第一次推送和拉取需要验证登录</p><p>推送到远程服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将当前分支更改为与远程分支名相同的名</span></span><br><span class="line">PS D:\desktop\web小案例\git-study&gt; git branch -M main</span><br><span class="line"><span class="comment"># 推送</span></span><br><span class="line">PS D:\desktop\web小案例\git-study&gt; git push -u github main</span><br><span class="line">git: <span class="string">&#x27;credential-manager&#x27;</span> is not a git <span class="built_in">command</span>. See <span class="string">&#x27;git --help&#x27;</span>.</span><br><span class="line"></span><br><span class="line">The most similar <span class="built_in">command</span> is</span><br><span class="line">        credential-manager-core</span><br><span class="line">Enumerating objects: 37, <span class="keyword">done</span>.</span><br><span class="line">Counting objects: 100% (37/37), <span class="keyword">done</span>.</span><br><span class="line">Delta compression using up to 8 threads</span><br><span class="line">Compressing objects: 100% (31/31), <span class="keyword">done</span>.</span><br><span class="line">Writing objects: 100% (37/37), 39.27 KiB | 3.27 MiB/s, <span class="keyword">done</span>.</span><br><span class="line">Total 37 (delta 5), reused 0 (delta 0), pack-reused 0</span><br><span class="line">remote: Resolving deltas: 100% (5/5), <span class="keyword">done</span>.</span><br><span class="line">To https://github.com/tiam-bloom/git-study.git</span><br><span class="line"> * [new branch]      main -&gt; main</span><br><span class="line">branch <span class="string">&#x27;main&#x27;</span> <span class="built_in">set</span> up to track <span class="string">&#x27;github/main&#x27;</span>.</span><br></pre></td></tr></table></figure><h2 id="拉取">拉取<a class="header-anchor" href="#拉取">#</a></h2><p>在github上更改内容后, 将更改的内容拉回本地</p><p>拉取</p><p>每次开发时 应保持本地与远程库的一致性</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">PS D:\desktop\web小案例\git-study&gt; git pull github main</span><br><span class="line">remote: Enumerating objects: 5, <span class="keyword">done</span>.</span><br><span class="line">remote: Counting objects: 100% (5/5), <span class="keyword">done</span>.</span><br><span class="line">remote: Compressing objects: 100% (3/3), <span class="keyword">done</span>.</span><br><span class="line">remote: Total 3 (delta 2), reused 0 (delta 0), pack-reused 0</span><br><span class="line">Unpacking objects: 100% (3/3), 715 bytes | 35.00 KiB/s, <span class="keyword">done</span>.</span><br><span class="line">From https://github.com/tiam-bloom/git-study</span><br><span class="line"> * branch            main       -&gt; FETCH_HEAD</span><br><span class="line">   325abc7..5dd3385  main       -&gt; github/main</span><br><span class="line">Updating 325abc7..5dd3385</span><br><span class="line">Fast-forward</span><br><span class="line"> README.md | 3 ++-</span><br><span class="line"> 1 file changed, 2 insertions(+), 1 deletion(-)</span><br></pre></td></tr></table></figure><p>常见网络错误</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">fatal: unable to access <span class="string">&#x27;xxx&#x27;</span>: OpenSSL SSL_read: Connection was reset, errno 10054</span><br><span class="line">fatal: unable to access <span class="string">&#x27;xxx&#x27;</span>: Failed to connect to github.com port 443 after 21060 ms: Timed out</span><br><span class="line">PS D:\desktop\web小案例\git-study&gt; git push -u https://github.com/tiam-bloom/git-study.git main</span><br><span class="line">fatal: unable to access <span class="string">&#x27;xxx&#x27;</span>: Failed to connect to github.com port 443 after 21118 ms: Timed out</span><br><span class="line">PS D:\desktop\web小案例\git-study&gt; git push -u https://github.com/tiam-bloom/git-study.git main</span><br><span class="line">fatal: unable to access <span class="string">&#x27;xxx&#x27;</span>: Failed to connect to github.com port 443 after 21062 ms: Timed out</span><br><span class="line">PS D:\desktop\web小案例\git-study&gt; git push -u https://github.com/tiam-bloom/git-study.git main</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="删除远程库">删除远程库<a class="header-anchor" href="#删除远程库">#</a></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">G:\Arithmetic\Java_20220624&gt;git remote</span><br><span class="line">leetCode</span><br><span class="line">origin</span><br><span class="line"></span><br><span class="line">G:\Arithmetic\Java_20220624&gt;git remote <span class="built_in">rm</span> origin</span><br><span class="line"></span><br><span class="line">G:\Arithmetic\Java_20220624&gt;git remote</span><br><span class="line">leetCode</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1>克隆远程库</h1><ul class="lvl-0"><li class="lvl-4"><p><code>git clone 远程库地址</code></p></li></ul><ol><li class="lvl-4"><p>拉取代码</p></li><li class="lvl-4"><p>初始化本地库</p></li><li class="lvl-4"><p>创建别名</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java web课设--宿舍管理系统</title>
      <link href="/artical/5ef23733.html"/>
      <url>/artical/5ef23733.html</url>
      
        <content type="html"><![CDATA[<h1>宿舍管理系统</h1><p>1月7日 18:00前</p><ol><li class="lvl-4"><p>项目源码</p></li><li class="lvl-4"><p>sql</p></li><li class="lvl-4"><p>实验报告</p></li><li class="lvl-4"><p>2014-学号-姓名.zip</p></li><li class="lvl-4"><p><a href="mailto:chendikai1314@163.com">chendikai1314@163.com</a></p></li></ol><h1>项目结构</h1><p><img src="http://qiniu.yujing.fit/typora_img/image_mw1y-EQny4.png" alt=""></p><h1>数据库连接</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">driverClassName =com.mysql.cj.jdbc.Driver</span><br><span class="line">url =jdbc:mysql://localhost:3306/dorm-management-system?serverTimezone=GMT&amp;useSSL=false&amp;characterEncoding=utf-8</span><br><span class="line">username =root</span><br><span class="line">password =123456</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JDBCUtil</span> &#123;</span><br><span class="line">    <span class="comment">// 获取配置文件</span></span><br><span class="line">    <span class="keyword">static</span> ResourceBundle bundle;</span><br><span class="line">    <span class="keyword">static</span> String driverClass;</span><br><span class="line">    <span class="keyword">static</span> String url;</span><br><span class="line">    <span class="keyword">static</span> String username;</span><br><span class="line">    <span class="keyword">static</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        bundle = ResourceBundle.getBundle(<span class="string">&quot;jdbc&quot;</span>); <span class="comment">// 无文件后缀</span></span><br><span class="line">        driverClass = bundle.getString(<span class="string">&quot;driverClassName&quot;</span>);</span><br><span class="line">        url = bundle.getString(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">        username = bundle.getString(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        password = bundle.getString(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(driverClass);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title function_">getConnection</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> DriverManager.getConnection(url, username, password);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">close</span><span class="params">(ResultSet rs, Statement st, Connection co)</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(rs!=<span class="literal">null</span>) rs.close();</span><br><span class="line">            <span class="keyword">if</span>(st!=<span class="literal">null</span>) st.close();</span><br><span class="line">            <span class="keyword">if</span>(co!=<span class="literal">null</span>) co.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>DAO层</h1><h2 id="查询">查询<a class="header-anchor" href="#查询">#</a></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> User <span class="title function_">findUserById</span><span class="params">(String id)</span> &#123;</span><br><span class="line">    <span class="type">Connection</span> <span class="variable">con</span> <span class="operator">=</span> JDBCUtil.getConnection();</span><br><span class="line">    <span class="type">PreparedStatement</span> <span class="variable">ps</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from tb_user where id = ?&quot;</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        ps = con.prepareStatement(sql);</span><br><span class="line">        ps.setString(<span class="number">1</span>, id);</span><br><span class="line">        rs = ps.executeQuery();</span><br><span class="line">        <span class="comment">// 处理结果</span></span><br><span class="line">        <span class="keyword">return</span> rs.next() ? ResultSetUtil.ResultSetToUser(rs) : <span class="literal">null</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        JDBCUtil.close(rs, ps, con);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="处理结果">处理结果<a class="header-anchor" href="#处理结果">#</a></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> User <span class="title function_">ResultSetToUser</span><span class="params">(ResultSet rs)</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">User</span>(rs.getInt(<span class="number">1</span>),</span><br><span class="line">            rs.getString(<span class="number">2</span>),</span><br><span class="line">            rs.getString(<span class="number">3</span>),</span><br><span class="line">            rs.getString(<span class="number">4</span>),</span><br><span class="line">            rs.getString(<span class="number">5</span>),</span><br><span class="line">            rs.getString(<span class="number">6</span>),</span><br><span class="line">            rs.getString(<span class="number">7</span>),</span><br><span class="line">            rs.getInt(<span class="number">8</span>),</span><br><span class="line">            rs.getInt(<span class="number">9</span>),</span><br><span class="line">            rs.getInt(<span class="number">10</span>),</span><br><span class="line">            rs.getInt(<span class="number">11</span>),</span><br><span class="line">            <span class="literal">null</span>,</span><br><span class="line">            <span class="literal">null</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="修改">修改<a class="header-anchor" href="#修改">#</a></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">updateUserDisabled</span><span class="params">(<span class="type">int</span> disabled, String id)</span> &#123;</span><br><span class="line">    <span class="type">Connection</span> <span class="variable">con</span> <span class="operator">=</span> JDBCUtil.getConnection();</span><br><span class="line">    <span class="type">PreparedStatement</span> <span class="variable">ps</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;update tb_user set disabled = ? where id = ?&quot;</span>;</span><br><span class="line">    <span class="type">int</span> <span class="variable">rows</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 关闭自动提交事物</span></span><br><span class="line">        con.setAutoCommit(<span class="literal">false</span>);</span><br><span class="line">        ps = con.prepareStatement(sql);</span><br><span class="line">        ps.setInt(<span class="number">1</span>, disabled);</span><br><span class="line">        ps.setString(<span class="number">2</span>, id);</span><br><span class="line">        rows = ps.executeUpdate();</span><br><span class="line">        <span class="comment">// 提交事务</span></span><br><span class="line">        con.commit();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 出现异常回滚</span></span><br><span class="line">            con.rollback();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException ex) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(ex);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        JDBCUtil.close(<span class="literal">null</span>, ps, con);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> rows;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>过滤器</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@WebFilter(urlPatterns = &quot;*&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalFilter</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">req</span> <span class="operator">=</span> (HttpServletRequest) servletRequest;</span><br><span class="line">        <span class="type">HttpServletResponse</span> <span class="variable">resp</span> <span class="operator">=</span> (HttpServletResponse) servletResponse;</span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> req.getSession();</span><br><span class="line">        <span class="type">Object</span> <span class="variable">user</span> <span class="operator">=</span> session.getAttribute(<span class="string">&quot;session_user&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取请求地址</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">requestURI</span> <span class="operator">=</span> req.getRequestURI();</span><br><span class="line">        log.info(<span class="string">&quot;拦截请求: &#123;&#125;&quot;</span>, requestURI);</span><br><span class="line">        <span class="keyword">switch</span> (requestURI) &#123;</span><br><span class="line">            <span class="comment">// 登录和登出请求直接放行</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;/login&quot;</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;/loginOut.action&quot;</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">// 1. 请求登录页面, 有session记录, 直接跳转主页</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;/&quot;</span>:</span><br><span class="line">                <span class="keyword">if</span> (user != <span class="literal">null</span>) req.getRequestDispatcher(<span class="string">&quot;/index.action&quot;</span>).forward(req, resp);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">// 2. 请求其他页面, 未session记录, 重定向到登录页面</span></span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">if</span> (user == <span class="literal">null</span>) &#123;</span><br><span class="line">                    req.setAttribute(<span class="string">&quot;error&quot;</span>, <span class="string">&quot;登录身份过期, 请重新登录&quot;</span>);</span><br><span class="line">                    req.getRequestDispatcher(<span class="string">&quot;/loginOut.action&quot;</span>).forward(req, resp);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        filterChain.doFilter(servletRequest, servletResponse);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>实体类</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Getter、Setter、toString、equals</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="comment">// 全参构造方法</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="comment">// 无参构造方法</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DormBuild</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String remark;</span><br><span class="line">    <span class="keyword">private</span> Integer disabled;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>登录Servlet</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">stuCode</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;stuCode&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">remember</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;remember&quot;</span>);</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userDao.findByStuCode(stuCode);</span><br><span class="line">    <span class="keyword">if</span> (user == <span class="literal">null</span>) &#123;</span><br><span class="line">        req.setAttribute(<span class="string">&quot;error&quot;</span>, <span class="string">&quot;用户名不存在&quot;</span>);</span><br><span class="line">        req.getRequestDispatcher(<span class="string">&quot;/&quot;</span>).forward(req, resp);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!password.equals(user.getPassword())) &#123;</span><br><span class="line">        req.setAttribute(<span class="string">&quot;error&quot;</span>, <span class="string">&quot;密码错误&quot;</span>);</span><br><span class="line">        req.getRequestDispatcher(<span class="string">&quot;/&quot;</span>).forward(req, resp);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> req.getSession();</span><br><span class="line">        session.setAttribute(<span class="string">&quot;session_user&quot;</span>, user);</span><br><span class="line">        <span class="keyword">if</span> (remember != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 7天内自动填充密码</span></span><br><span class="line">            <span class="type">Cookie</span> <span class="variable">cookie_stuCode</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cookie</span>(<span class="string">&quot;cookie_stuCode&quot;</span>, stuCode);</span><br><span class="line">            <span class="type">Cookie</span> <span class="variable">cookie_pwd</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cookie</span>(<span class="string">&quot;cookie_pwd&quot;</span>, password);</span><br><span class="line">            cookie_stuCode.setMaxAge(<span class="number">7</span> * <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span>);</span><br><span class="line">            cookie_pwd.setMaxAge(<span class="number">7</span> * <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span>);</span><br><span class="line">            resp.addCookie(cookie_stuCode);</span><br><span class="line">            resp.addCookie(cookie_pwd);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">// 未勾选 =&gt; 删除Cookie</span></span><br><span class="line">            Cookie[] cookies = req.getCookies();</span><br><span class="line">            List&lt;Cookie&gt; collect = Arrays.stream(cookies)</span><br><span class="line">                    .filter(cookie -&gt;</span><br><span class="line">                    cookie.getName().equals(<span class="string">&quot;cookie_stuCode&quot;</span>) ||</span><br><span class="line">                    cookie.getName().equals(<span class="string">&quot;cookie_pwd&quot;</span>))</span><br><span class="line">                    .collect(Collectors.toList());</span><br><span class="line">            collect.forEach(cookie -&gt;&#123;</span><br><span class="line">                cookie.setMaxAge(<span class="number">0</span>);</span><br><span class="line">                resp.addCookie(cookie);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        req.getRequestDispatcher(<span class="string">&quot;/index.action&quot;</span>).forward(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1>依赖pom.xml</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- jsp依赖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet.jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- jstl表达式依赖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp.jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- taglibs 标签库依赖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>taglibs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>standard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--日志依赖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.28<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--mysql连接--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.0.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Servlet--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--单元测试--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.jupiter<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-jupiter-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;junit.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.jupiter<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-jupiter-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;junit.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Lombok--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.24<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h1>JSP语法</h1><p>jsp页面标注</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line">    pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;%@taglib prefix=<span class="string">&quot;c&quot;</span>  uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br></pre></td></tr></table></figure><h2 id="引入css、js">引入css、js<a class="header-anchor" href="#引入css、js">#</a></h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/bootstrap/css/bootstrap.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/bootstrap/js/jQuery.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表单请求">表单请求<a class="header-anchor" href="#表单请求">#</a></h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">&quot;myForm&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">class</span>=<span class="string">&quot;form-signin&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">action</span>=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/login&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">method</span>=<span class="string">&quot;post&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">onsubmit</span>=<span class="string">&quot;return checkForm()&quot;</span>&gt;</span></span><br><span class="line">表单体...</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="导航栏和主体">导航栏和主体<a class="header-anchor" href="#导航栏和主体">#</a></h2><ul class="lvl-0"><li class="lvl-4"><p>根据不同权限显示不同菜单</p></li><li class="lvl-4"><p>右侧内容填充使用，达到复用导航栏的目的</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;span2 bs-docs-sidebar&quot;</span> &gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav nav-list bs-docs-sidenav&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--  超级管理员--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">&quot;$&#123;session_user.roleId == 0&#125;&quot;</span>&gt;</span></span><br><span class="line">      导航栏菜单....</span><br><span class="line">    <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!--宿舍管理员  --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">&quot;$&#123;session_user.roleId == 1&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 学生 --&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">c:if</span> <span class="attr">test</span>=<span class="string">&quot;$&#123;session_user.roleId == 2&#125;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">c:if</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;span10&quot;</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--右侧内容--&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">jsp:include</span> <span class="attr">page</span>=<span class="string">&quot;$&#123;mainRight==null? &#x27;blank.jsp&#x27;:mainRight&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">jsp:include</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="forEach">forEach<a class="header-anchor" href="#forEach">#</a></h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--items:表示要循环遍历的元素   var:代表当前集合中每一个元素     varStatus代表循环状态的变量名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">items</span>=<span class="string">&quot;$&#123;builds&#125;&quot;</span> <span class="attr">var</span>=<span class="string">&quot;build&quot;</span> <span class="attr">varStatus</span>=<span class="string">&quot;stat&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;stat.index+1&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;build.name&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;build.remark&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> </span></span><br><span class="line"><span class="tag">      <span class="attr">onclick</span>=<span class="string">&quot;javascript:window.location=&#x27;dormBuild.action?action=preUpdate&amp;id=$&#123;build.id&#125;&#x27;&quot;</span>&gt;</span></span><br><span class="line">        修改</span><br><span class="line">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="jsp自定义标签">jsp自定义标签<a class="header-anchor" href="#jsp自定义标签">#</a></h2><p>注意 并不完整, jsp标签处理类未写好, 没有html结构</p><p>配置文件<code>page-taglib.tld</code>, 在<code>WEB-INF</code>目录下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;ISO-8859-1&quot;</span> ?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">taglib</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://java.sun.com/j2ee/dtd/web-jsptaglibrary_1_2.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">taglib</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--标签的版本号  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tlib-version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">tlib-version</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--jsp的版本号  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">jsp-version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">jsp-version</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--标签的简称号  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">short-name</span>&gt;</span>simple<span class="tag">&lt;/<span class="name">short-name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--jsp页面可通过引入该地址 与标签进行关联，并找到标签处理类  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uri</span>&gt;</span>wdl-page-tag<span class="tag">&lt;/<span class="name">uri</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 描述信息 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span></span><br><span class="line">    A simple tab library for the examples</span><br><span class="line">  <span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">tag</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 标签名 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>pager<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 标签处理类 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tag-class</span>&gt;</span>fit.yujing.utils.PageTag<span class="tag">&lt;/<span class="name">tag-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span> Display JSP sources <span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 属性 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">attribute</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 属性名 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">name</span>&gt;</span>totalNum<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--  该属性是否必填--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">required</span>&gt;</span>true<span class="tag">&lt;/<span class="name">required</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--是否支持el表达式  --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">rtexprvalue</span>&gt;</span>true<span class="tag">&lt;/<span class="name">rtexprvalue</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">attribute</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 属性 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">attribute</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 属性名 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">name</span>&gt;</span>pageSize<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--  该属性是否必填--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">required</span>&gt;</span>true<span class="tag">&lt;/<span class="name">required</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--是否支持el表达式  --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">rtexprvalue</span>&gt;</span>true<span class="tag">&lt;/<span class="name">rtexprvalue</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">attribute</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 属性 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">attribute</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 属性名 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">name</span>&gt;</span>pageIndex<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--  该属性是否必填--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">required</span>&gt;</span>true<span class="tag">&lt;/<span class="name">required</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--是否支持el表达式  --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">rtexprvalue</span>&gt;</span>true<span class="tag">&lt;/<span class="name">rtexprvalue</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">attribute</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 属性 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">attribute</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 属性名 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">name</span>&gt;</span>submitUrl<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--  该属性是否必填--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">required</span>&gt;</span>true<span class="tag">&lt;/<span class="name">required</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--是否支持el表达式  --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">rtexprvalue</span>&gt;</span>true<span class="tag">&lt;/<span class="name">rtexprvalue</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">attribute</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tag</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">taglib</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>标签处理类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="meta">@Setter</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PageTag</span> <span class="keyword">extends</span> <span class="title class_">BodyTagSupport</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer totalNum;</span><br><span class="line">    <span class="keyword">private</span> Integer pageSize;</span><br><span class="line">    <span class="keyword">private</span> Integer pageIndex;</span><br><span class="line">    <span class="keyword">private</span> String submitUrl;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">doStartTag</span><span class="params">()</span> <span class="keyword">throws</span> JspException &#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.doStartTag();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">doAfterBody</span><span class="params">()</span> <span class="keyword">throws</span> JspException &#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.doAfterBody();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">doEndTag</span><span class="params">()</span> <span class="keyword">throws</span> JspException &#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">        <span class="comment">// 将属性值写入到页面显示</span></span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            out = pageContext.getResponse().getWriter();</span><br><span class="line">            <span class="comment">// 写入值并输出</span></span><br><span class="line">            out.print(<span class="built_in">this</span>.pageSize);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.doEndTag();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- jsp页面引入 --&gt;</span></span><br><span class="line">&lt;%@taglib prefix=&quot;wdlPager&quot; uri=&quot;wdl-page-tag&quot; %&gt;</span><br><span class="line"><span class="comment">&lt;!-- 使用 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">wdlPager:pager</span></span></span><br><span class="line"><span class="tag">        <span class="attr">totalNum</span> =<span class="string">&quot;$&#123;totalNum&#125;&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">pageSize</span>=<span class="string">&quot;3&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">pageIndex</span>=<span class="string">&quot;$&#123;pageIndex&#125;&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">submitUrl</span>=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/record.action?action=list&amp;searchType=$&#123;searchType&#125;&amp;keyword=$&#123;keyword&#125;&amp;dormBuildId=$&#123;dormBuildId&#125;&amp;startDate=$&#123;startDate&#125;&amp;endDate=$&#123;endDate&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">wdlPager:pager</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1>日志</h1><p>引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.28<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置文件<code>log4j.properties</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">### ??###</span><br><span class="line">log4j.rootLogger = info,stdout,D,E</span><br><span class="line"></span><br><span class="line">### ???????? ###</span><br><span class="line">log4j.appender.stdout = org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.stdout.Target = System.out</span><br><span class="line">log4j.appender.stdout.layout = org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.stdout.layout.ConversionPattern = [%-5p] %d&#123;yyyy-MM-dd HH:mm:ss,SSS&#125; method:%l%n%m%n</span><br><span class="line"></span><br><span class="line">### ??DEBUG ????????=logs/error.log ###</span><br><span class="line">log4j.appender.D = org.apache.log4j.DailyRollingFileAppender</span><br><span class="line">log4j.appender.D.File = logs/log.log</span><br><span class="line">log4j.appender.D.Append = true</span><br><span class="line">log4j.appender.D.Threshold = DEBUG </span><br><span class="line">log4j.appender.D.layout = org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.D.layout.ConversionPattern = %-d&#123;yyyy-MM-dd HH:mm:ss&#125;  [ %t:%r ] - [ %p ]  %m%n</span><br><span class="line"></span><br><span class="line">### ??ERROR ????????=logs/error.log ###</span><br><span class="line">log4j.appender.E = org.apache.log4j.DailyRollingFileAppender</span><br><span class="line">log4j.appender.E.File =logs/error.log </span><br><span class="line">log4j.appender.E.Append = true</span><br><span class="line">log4j.appender.E.Threshold = ERROR </span><br><span class="line">log4j.appender.E.layout = org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.E.layout.ConversionPattern = %-d&#123;yyyy-MM-dd HH:mm:ss&#125;  [ %t:%r ] - [ %p ]  %m%n</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加注解使用日志</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@WebServlet(&quot;/record.action&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RecordServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">// 防止接收的中文参数乱码, 必须在所有req使用之前</span></span><br><span class="line">        req.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">action</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;action&quot;</span>);</span><br><span class="line">        log.info(<span class="string">&quot;接收参数action: &#123;&#125;&quot;</span>, action);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd&quot;</span>).parse(date);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">            log.error(<span class="string">&quot;时间转换错误, string = &#123;&#125;&quot;</span>, date);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> javaweb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分享一些接口</title>
      <link href="/artical/7c551d72.html"/>
      <url>/artical/7c551d72.html</url>
      
        <content type="html"><![CDATA[<h1>接口API</h1><h1>GitHub</h1><ul class="lvl-0"><li class="lvl-2"><p>文档 <a href="https://docs.github.com/en/rest?apiVersion=2022-11-28">https://docs.github.com/en/rest?apiVersion=2022-11-28</a></p></li><li class="lvl-2"><p>接口 <a href="https://api.github.com/">https://api.github.com/</a></p></li><li class="lvl-2"><p>用户信息 <a href="https://api.github.com/users/tiam-bloom">https://api.github.com/users/tiam-bloom</a></p></li><li class="lvl-2"><p>查询 <a href="https://api.github.com/search/users?q=tiam-bloom">https://api.github.com/search/users?q=tiam-bloom</a></p></li></ul><h1>网易音乐</h1><ul class="lvl-0"><li class="lvl-2"><p>在线项目实例: <a href="https://smallruraldog.github.io/vue3-music/#/discover">https://smallruraldog.github.io/vue3-music/#/discover</a></p></li><li class="lvl-2"><p>文档 <a href="https://neteasecloudmusicapi.vercel.app/#/">https://neteasecloudmusicapi.vercel.app/#/</a></p></li><li class="lvl-2"><p><a href="https://autumnfish.cn">https://autumnfish.cn</a></p></li><li class="lvl-2"><p>热搜 <a href="https://autumnfish.cn/search/hot">https://autumnfish.cn/search/hot</a>    <a href="https://autumnfish.cn/search/hot/detail">https://autumnfish.cn/search/hot/detail</a></p></li><li class="lvl-2"><p>歌单 <a href="https://autumnfish.cn/personalized">https://autumnfish.cn/personalized</a></p></li><li class="lvl-2"><p>榜单 <a href="https://autumnfish.cn/toplist">https://autumnfish.cn/toplist</a></p></li><li class="lvl-2"><p>喜欢列表 <a href="https://autumnfish.cn/likelist?uid=32953014">https://autumnfish.cn/likelist?uid=32953014</a></p></li><li class="lvl-2"><p>搜索歌手(根据id)  <a href="https://autumnfish.cn/artist/top/song?id=7763">https://autumnfish.cn/artist/top/song?id=7763</a></p></li><li class="lvl-2"><p>搜索 <a href="https://autumnfish.cn/cloudsearch?keywords=%E9%82%93%E7%B4%AB%E6%A3%8B">https://autumnfish.cn/cloudsearch?keywords=邓紫棋</a></p></li></ul><p><img src="http://qiniu.yujing.fit/typora_img/image-20221205130123855.png" alt="image-20221205130123855"></p><ul class="lvl-0"><li class="lvl-2"><p>获取歌词 <a href="https://autumnfish.cn/lyric?id=30612793">https://autumnfish.cn/lyric?id=30612793</a></p></li><li class="lvl-2"><p>获取歌曲url <a href="https://autumnfish.cn/song/url?id=30612793">https://autumnfish.cn/song/url?id=30612793</a></p></li></ul><h1>博客园</h1><ul class="lvl-0"><li class="lvl-2"><p>文档 <a href="https://api.cnblogs.com/help">https://api.cnblogs.com/help</a></p></li></ul><h1>微博</h1><ul class="lvl-0"><li class="lvl-2"><p><a href="https://open.weibo.com/wiki/API">https://open.weibo.com/wiki/API</a></p></li></ul><h1>社会语录</h1><ul class="lvl-0"><li class="lvl-2"><p><a href="http://api.uixsj.cn/hitokoto/get?type=social">http://api.uixsj.cn/hitokoto/get?type=social</a></p></li><li class="lvl-2"><p>文档 <a href="https://api.uixsj.cn/hitokoto/index.html">https://api.uixsj.cn/hitokoto/index.html</a></p></li></ul><table><thead><tr><th style="text-align:left">名称</th><th style="text-align:left">必填</th><th style="text-align:left">类型</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left">type</td><td style="text-align:left">否</td><td style="text-align:left">string</td><td style="text-align:left">选择输出分类[hitokoto|en|social|soup|fart|zha]，为空默认hitokoto</td></tr><tr><td style="text-align:left">code</td><td style="text-align:left">否</td><td style="text-align:left">string</td><td style="text-align:left">选择输出格式[json|js]</td></tr></tbody></table><p>hitokoto(一言)、en(中英文)、social(社会语录)、soup(毒鸡汤)、fart(彩虹屁)、zha(渣男语录)</p><h1>大西瓜</h1><p><a href="https://api.no0a.cn/">https://api.no0a.cn/</a></p><h1>爬取icon</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">思路: </span><br><span class="line"></span><br><span class="line">第一种方法</span><br><span class="line">如果想要获取一个网站的页面logo，最简单且最有效的办法就是在它的网址后面加上/favicon.ico</span><br><span class="line">例如： https://www.baidu.com/favicon.ico</span><br><span class="line">就可以获取了！</span><br><span class="line"></span><br><span class="line">第二种方法</span><br><span class="line">在浏览器界面按下F12，打开开发者模式，在 Elements中打开&lt;head&gt;...&lt;/head&gt;标签</span><br><span class="line">找到&lt;link....&gt; 中含有favicon或ico的链接，复制即可</span><br><span class="line">因为图标是放在head部分的link中，通过设置rel=&quot;icon&quot;或者 rel=&quot;shortcut icon&quot; 来让浏览器识别</span><br></pre></td></tr></table></figure><p>一</p><p>API:  <a href="https://api.iowen.cn/doc/favicon.html">https://api.iowen.cn/doc/favicon.html</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://api.iowen.cn/favicon/www.yujing.fit.png</span><br></pre></td></tr></table></figure><p>==注意:==不需要 http(s)😕/ ，且结尾必须填 .png</p><p>二</p><p><a href="https://favicongrabber.com/">https://favicongrabber.com/</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://favicongrabber.com/api/grab/github.com</span><br></pre></td></tr></table></figure><p>三</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www.google.com/s2/favicons?domain=https://yujing.fit/</span><br></pre></td></tr></table></figure><h1>爬取标题</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://api.no0a.cn/api/sitetitle/query?url=https://yujing.fit</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;status&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span><span class="attr">&quot;title&quot;</span><span class="punctuation">:</span><span class="string">&quot;J&#x27;s Blog&quot;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">getTitles</span>(<span class="params">url</span>) &#123;</span><br><span class="line">      <span class="comment">// 获取网站标题</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">await</span> <span class="title function_">fetch</span>(url)</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> res.<span class="title function_">text</span>())</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">(<span class="params">html</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">const</span> title = html.<span class="title function_">match</span>(<span class="regexp">/&lt;title&gt;(.*?)&lt;\/title&gt;/</span>);</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(title);</span><br><span class="line">          <span class="keyword">return</span> title ? title[<span class="number">1</span>] : <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> API </category>
          
      </categories>
      
      
        <tags>
            
            <tag> API </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分享一些记笔记的APP</title>
      <link href="/artical/782b41df.html"/>
      <url>/artical/782b41df.html</url>
      
        <content type="html"><![CDATA[<h1>个人博客</h1><p>最初第一款用的记笔记软件是<a href="https://typoraio.cn/#"><code>Typora</code></a>，写md很舒服，不过后面开始收费了。就是有个问题，只能在保存在本地，图片用了OSS后可以自动上传云端了还可以，但是文件始终还是保存在本地的。</p><p>后面发现了一个云端的文档写作–<a href="https://www.yuque.com">语雀</a>，可以在线编辑并且保存到云端，用了一段时间后总感觉样式差点，没有夜间模式，写多了一点还会有点卡。就没怎么用了。</p><p>某个悄然的时机，发现了wolai，UI设计很好看，其他方面也不错，推荐</p><p>记一下在网上写过所有的地址</p><ol><li class="lvl-3"><p>CSDN:  <a href="http://csdn.yujing.fit">http://csdn.yujing.fit</a><br>社区类型，域名收费自定义，可通过域名重定向更改域名，但是流量好像蛮多的，</p></li><li class="lvl-3"><p>博客园: <a href="https://www.cnblogs.com/JustBloom/">https://www.cnblogs.com/JustBloom/</a><br>社区类型，几乎都是免费的，自定义外观域名等</p></li><li class="lvl-3"><p>wolai:  <a href="https://www.wolai.com/justbloom%EF%BC%8C%E5%B7%B2%E7%99%BB%E5%BD%95%E5%8F%AF%E7%9B%B4%E6%8E%A5%E8%AE%BF%E9%97%AE">https://www.wolai.com/justbloom，已登录可直接访问</a><a href="http://add.page">http://add.page</a>入管理页在线文档，需登录</p></li><li class="lvl-3"><p>语雀: <a href="https://www.yuque.com/justbloom">https://www.yuque.com/justbloom</a><br>在线文档，公共访问</p></li><li class="lvl-3"><p>GitBook:  <a href="https://gitbook.yujing.fit">https://gitbook.yujing.fit</a><br>在线文档，很慢，感觉很适合写产品文档，VitePress写产品文档也很不错</p></li><li class="lvl-3"><p>baklib：<a href="https://89c884.bk-free01.com/">https://89c884.bk-free01.com/</a><br>在线文档，感觉md支持不太好，域名自定义也收费，但是主题设计蛮好看。</p></li><li class="lvl-3"><p>HashNode: <a href="https://tiam.hashnode.dev/">https://tiam.hashnode.dev/</a><br>个人博客类，用的较少，感觉还不错的</p></li><li class="lvl-3"><p>flomo：<a href="https://v.flomoapp.com/mine">https://v.flomoapp.com/mine</a><br>需登录查看，记录一些精短的想法灵感，联合微信，很方便，但是不太适合长篇的笔记</p></li><li class="lvl-3"><p>石墨文档： <a href="https://shimo.im/space">https://shimo.im/space</a><br>私有文档，需登录查看（公布收费）</p></li><li class="lvl-4"><p>简书：<a href="https://www.jianshu.com/u/3a1f1d78b611">https://www.jianshu.com/u/3a1f1d78b611</a><br>社区类型，用的比较少</p></li><li class="lvl-4"><p>微信公众号：带着月亮申请好像有点麻烦</p></li><li class="lvl-4"><p>个人博客：🔗<a href="https://yujing.fit/">https://yujing.fit/</a><br>使用<code>hexo</code>+<code>butterfly</code>主题搭建的博客，感觉这个主题很好看被搜索引擎收录挺麻烦，很难被查询到，只是对自己写笔记自己看还不错</p></li><li class="lvl-4"><p>VitePress：🔗<a href="https://docs.yujing.fit/">https://docs.yujing.fit/</a><br>个人搭建，需要一点技术，但不多</p></li></ol><p>还有一些其他社区平台，比如</p><ul class="lvl-0"><li class="lvl-2"><p>稀土掘金：🔗 <a href="https://juejin.cn/">https://juejin.cn/</a></p></li><li class="lvl-2"><p>阿里开发者社区：<strong><a href="https://developer.aliyun.com">https://developer.aliyun.com</a></strong></p></li><li class="lvl-2"><p>腾讯开发者：<a href="https://cloud.tencent.com/developer">https://cloud.tencent.com/developer</a></p></li><li class="lvl-2"><p>StackOverflow：<a href="https://stackoverflow.com/">https://stackoverflow.com/</a></p></li><li class="lvl-2"><p>开源中国：<a href="https://www.oschina.net/">https://www.oschina.net/</a></p></li><li class="lvl-2"><p>知乎：<a href="https://www.zhihu.com/">https://www.zhihu.com/</a>  （涉及领域就比较广泛了）</p></li><li class="lvl-2"><p>思否：<a href="http://sf.gg">http://sf.gg</a></p></li></ul><p>都可以自己注册账号发布文章笔记等</p><h2 id="总结">总结<a class="header-anchor" href="#总结">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p>想自己的文章可以被更多人访问，可以选择社区类的，注册账号就行很简单</p><blockquote><ul class="lvl-3"><li class="lvl-2">CSDN</li><li class="lvl-2">博客园</li><li class="lvl-2">掘金</li><li class="lvl-2">…</li></ul></blockquote></li><li class="lvl-2"><p>写文章需求量大，需要写很多的</p><blockquote><ul class="lvl-3"><li class="lvl-2">wolai</li><li class="lvl-2">语雀</li><li class="lvl-2">石墨</li><li class="lvl-2">gitbook</li><li class="lvl-2">baklib</li></ul></blockquote></li><li class="lvl-2"><p>只是自己记录笔记方便自己查看，可以自己搭建一个，个人博客类</p><blockquote><ul class="lvl-3"><li class="lvl-2">hexo</li><li class="lvl-2">VitePress</li><li class="lvl-2">HashNode</li></ul></blockquote></li></ul><h2 id="规划">规划<a class="header-anchor" href="#规划">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p><code>CSDN</code>记录报错，有流量，也方便帮助其他人踩坑📉🔗</p></li><li class="lvl-2"><p><code>wolai</code> 记录整体的笔记，比如想学ts，就可以将全部ts相关的记录在<code>wolai</code>，因为这种一般比较会比较多，不太适合发布到一篇文章</p></li><li class="lvl-2"><p>个人博客随便写一些文章，记录一些自己的理解。</p></li><li class="lvl-2"><p>等有了自己比较大的项目时，可以考虑<code>gitbook</code> 、<code>语雀</code>、 <code>vitePress</code>写一个完整的产品文档，介绍以及使用说明</p></li></ul><blockquote><p><strong>个人观点，仅供参考，以实际使用为准</strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 推荐 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Vue3项目基本搭建</title>
      <link href="/artical/1725adc6.html"/>
      <url>/artical/1725adc6.html</url>
      
        <content type="html"><![CDATA[<h1>项目搭建</h1><h2 id="vite">vite<a class="header-anchor" href="#vite">#</a></h2><p>使用<code>vite</code>创建项目</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方式一</span></span><br><span class="line">npm init/create vue [项目名]</span><br><span class="line"><span class="comment"># 方式二</span></span><br><span class="line">npm init/create vite [项目名]</span><br><span class="line"><span class="comment"># 方式三</span></span><br><span class="line">vue ui</span><br></pre></td></tr></table></figure><p>安装 Vite 的前端依赖关系</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; npm i</span><br></pre></td></tr></table></figure><h2 id="Vue-Router">Vue-Router<a class="header-anchor" href="#Vue-Router">#</a></h2><p>Vue2 安装<code>npm i vue-router@3</code></p><p>安装路由<code>Vue-Router</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&gt; npm i vue<span class="literal">-router</span></span><br><span class="line">// 当文件名为 index 时, 完整路径 ./router/index.js 可简写为 ./router</span><br><span class="line">import router from <span class="string">&#x27;./router&#x27;</span></span><br><span class="line">app.use(router)</span><br><span class="line">// router/index.js 基本使用</span><br><span class="line">import &#123; createRouter,createWebHashHistory &#125; from <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"></span><br><span class="line">export default createRouter(&#123;</span><br><span class="line">    <span class="built_in">history</span>: createWebHashHistory(),</span><br><span class="line">    routes: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">            <span class="type">redirect</span>: &#123; <span class="type">name</span>: <span class="string">&quot;Navigate&quot;</span> &#125;,</span><br><span class="line">            // <span class="type">redirect</span>: <span class="string">&#x27;/navigate&#x27;</span>,   // 通过路径重定向</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">name</span>: <span class="string">&#x27;Navigate&#x27;</span>,</span><br><span class="line">            <span class="type">path</span>: <span class="string">&#x27;/navigate&#x27;</span>,</span><br><span class="line">            <span class="type">component</span>: () =&gt; <span class="type">import</span>(<span class="string">&#x27;@/views/Navigate.vue&#x27;</span>),</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="Pinia">Pinia<a class="header-anchor" href="#Pinia">#</a></h2><p>安装<code>Pinia</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&gt; npm i pinia</span><br><span class="line">import &#123; createPinia &#125; from <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line">const pinia = createPinia()</span><br><span class="line">app.use(pinia)</span><br><span class="line">// stores/siteInfo.js</span><br><span class="line">import &#123;defineStore&#125; from <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"></span><br><span class="line">export const useSiteInfoStore = defineStore(<span class="string">&#x27;siteInfo&#x27;</span>,&#123;</span><br><span class="line">    state: () =&gt; (&#123;</span><br><span class="line">        count: <span class="number">0</span></span><br><span class="line">    &#125;),</span><br><span class="line">    getters: &#123;</span><br><span class="line">        double: (state) =&gt; state.count * <span class="number">2</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    actions: &#123;</span><br><span class="line">        increment() &#123;</span><br><span class="line">            this.count++</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &lt;script setup&gt;</span></span><br><span class="line"><span class="keyword">import</span> &#123; storeToRefs &#125; <span class="keyword">from</span> <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useSiteStore &#125; <span class="keyword">from</span> <span class="string">&#x27;@/stores/siteInfo&#x27;</span></span><br><span class="line"><span class="keyword">const</span> siteStore = <span class="title function_">useSiteStore</span>()</span><br><span class="line"><span class="comment">// 获取响应式的state</span></span><br><span class="line"><span class="keyword">const</span> &#123; count, &#125; = <span class="title function_">storeToRefs</span>(siteStore)</span><br><span class="line"><span class="comment">// 获取action</span></span><br><span class="line"><span class="keyword">const</span> &#123; increment &#125; = siteStore</span><br><span class="line"><span class="comment">// 获取getters</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="Element-Plus">Element Plus<a class="header-anchor" href="#Element-Plus">#</a></h2><p>安装 <code>Element Plus</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="variable">$</span> npm i element<span class="literal">-plus</span></span><br><span class="line">// main.js 中</span><br><span class="line">// 引入element<span class="literal">-plus</span></span><br><span class="line">import ElementPlus from <span class="string">&#x27;element-plus&#x27;</span></span><br><span class="line">import <span class="string">&#x27;element-plus/dist/index.css&#x27;</span>  // 否则无样式, 但是不会报错</span><br><span class="line">const app = createApp(App)</span><br><span class="line">app.use(ElementPlus)</span><br><span class="line">app.mount(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><p>安装<code>Element Plus</code>图标库</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="variable">$</span> npm install @element<span class="literal">-plus</span>/icons<span class="literal">-vue</span></span><br><span class="line">// main.js 引入全部图标</span><br><span class="line">import * as ElementPlusIconsVue from <span class="string">&#x27;@element-plus/icons-vue&#x27;</span></span><br><span class="line"><span class="keyword">for</span> (const [<span class="type">key</span>, <span class="type">component</span>] of Object.entries(ElementPlusIconsVue)) &#123;</span><br><span class="line">  app.component(key, component)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>按需引入图标(<strong>推荐</strong>)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;!-- 方式一 --&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">el-input</span> <span class="attr">:prefix-icon</span>=<span class="string">&quot;Search&quot;</span>/&gt;</span></span></span><br><span class="line">    &lt;!-- 方式二 --&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">el-icon</span> <span class="attr">style</span>=<span class="string">&quot;vertical-align: middle&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">Search</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-icon</span>&gt;</span></span></span><br><span class="line">    &lt;!-- 方式三 --&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">Search</span> <span class="attr">style</span>=<span class="string">&quot;width: 1em; height: 1em; margin-right: 8px&quot;</span> /&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; <span class="title class_">Search</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@element-plus/icons-vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="Tailwind-CSS">Tailwind CSS<a class="header-anchor" href="#Tailwind-CSS">#</a></h2><p>安装Tailwind CSS:  <a href="https://www.tailwindcss.cn/docs/guides/vue-3-vite">https://www.tailwindcss.cn/docs/guides/vue-3-vite</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -D tailwindcss@latest postcss@latest autoprefixer@latest</span><br></pre></td></tr></table></figure><p>初始化配置文件, <code>tailwind.config.js</code> 和 <code>postcss.config.js</code> 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npx tailwindcss init -p</span><br></pre></td></tr></table></figure><p>不管<code>postcss.config</code>中的配置</p><p>在<code>tailwind.config</code>中添加一行配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// tailwind.config.cjs</span></span><br><span class="line"><span class="comment">/** <span class="doctag">@type</span> &#123;<span class="type">import(&#x27;tailwindcss&#x27;).Config</span>&#125; */</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">purge</span>: [<span class="string">&#x27;./index.html&#x27;</span>, <span class="string">&#x27;./src/**/*.&#123;vue,js,ts,jsx,tsx&#125;&#x27;</span>],  <span class="comment">// 添加此行配置, 很重要!</span></span><br><span class="line">  <span class="attr">content</span>: [],</span><br><span class="line">  <span class="attr">theme</span>: &#123;</span><br><span class="line">    <span class="attr">extend</span>: &#123;&#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="built_in">require</span>(<span class="string">&quot;tailwindcss&quot;</span>),</span><br><span class="line">    <span class="built_in">require</span>(<span class="string">&quot;autoprefixer&quot;</span>),</span><br><span class="line">  ],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新建一个css文件, 并引入到<code>main.ts</code>中</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* style.css */</span></span><br><span class="line"><span class="keyword">@tailwind</span> base;</span><br><span class="line"><span class="keyword">@tailwind</span> components;</span><br><span class="line"><span class="keyword">@tailwind</span> utilities;</span><br></pre></td></tr></table></figure><p>测试, 字体为粉色说明ok</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;text-pink-200&quot;</span>&gt;</span>1111<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Font-Awesome图标">Font Awesome图标<a class="header-anchor" href="#Font-Awesome图标">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p>CDN引入:    <code>&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.staticfile.org/font-awesome/4.7.0/css/font-awesome.css&quot;&gt;</code></p></li><li class="lvl-2"><p>用法:  <a href="https://www.runoob.com/font-awesome/fontawesome-reference.html">https://www.runoob.com/font-awesome/fontawesome-reference.html</a></p></li></ul><h3 id="VUE引入">VUE引入<a class="header-anchor" href="#VUE引入">#</a></h3><ul class="lvl-0"><li class="lvl-2"><p>安装:  <a href="https://fontawesome.com/v6/docs/web/use-with/vue/">https://fontawesome.com/v6/docs/web/use-with/vue/</a></p></li><li class="lvl-2"><p>用法Vue2:  <a href="https://blog.fontawesome.com/how-to-use-vue-js-with-font-awesome/">https://blog.fontawesome.com/how-to-use-vue-js-with-font-awesome/</a></p></li><li class="lvl-2"><p>图标搜索:  <a href="https://fontawesome.com/icons">https://fontawesome.com/icons</a></p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">add svg-core</span></span><br><span class="line">npm i --save @fortawesome/fontawesome-svg-core</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Free icons styles</span></span><br><span class="line">npm i --save @fortawesome/free-solid-svg-icons</span><br><span class="line">npm i --save @fortawesome/free-regular-svg-icons</span><br><span class="line">npm i --save @fortawesome/free-brands-svg-icons</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="keyword">for</span> Vue 2.x</span></span><br><span class="line">npm i --save @fortawesome/vue-fontawesome@latest-2</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="keyword">for</span> Vue 3.x</span></span><br><span class="line">npm i --save @fortawesome/vue-fontawesome@latest-3</span><br></pre></td></tr></table></figure><p>引入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Set up using Vue 3 */</span></span><br><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* import the fontawesome core */</span></span><br><span class="line"><span class="keyword">import</span> &#123; library &#125; <span class="keyword">from</span> <span class="string">&#x27;@fortawesome/fontawesome-svg-core&#x27;</span></span><br><span class="line"><span class="comment">/* import font awesome icon component */</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">FontAwesomeIcon</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@fortawesome/vue-fontawesome&#x27;</span></span><br><span class="line"><span class="comment">/* import specific icons */</span></span><br><span class="line"><span class="keyword">import</span> &#123; faUserSecret &#125; <span class="keyword">from</span> <span class="string">&#x27;@fortawesome/free-solid-svg-icons&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* add icons to the library */</span></span><br><span class="line">library.<span class="title function_">add</span>(faUserSecret)</span><br><span class="line"></span><br><span class="line"><span class="title function_">createApp</span>(<span class="title class_">App</span>)</span><br><span class="line">.<span class="title function_">component</span>(<span class="string">&#x27;font-awesome-icon&#x27;</span>, <span class="title class_">FontAwesomeIcon</span>)</span><br><span class="line">.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">font-awesome-icon</span> <span class="attr">icon</span>=<span class="string">&quot;fa-solid fa-user-secret&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h2 id="VueUse">VueUse<a class="header-anchor" href="#VueUse">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i @vueuse/core</span><br></pre></td></tr></table></figure><h3 id="暗黑模式element-plus-VueUse">暗黑模式<code>element plus</code> + <code>VueUse</code><a class="header-anchor" href="#暗黑模式element-plus-VueUse">#</a></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// main.js中 引入样式</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;element-plus/theme-chalk/dark/css-vars.css&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- html标签中添加 class=&quot;dark&quot;  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dark&quot;</span>&gt;</span>  </span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;!-- El开关组件 --&gt;</span><br><span class="line">    &lt;el-switch v-model=&quot;isDark&quot; /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; useDark &#125; from &#x27;@vueuse/core&#x27;</span><br><span class="line">const isDark = useDark();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="配置路径别名">配置路径别名<a class="header-anchor" href="#配置路径别名">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i path</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">// vite.config.js</span><br><span class="line">import &#123; defineConfig &#125; from <span class="string">&quot;vite&quot;</span>;</span><br><span class="line">import vue from <span class="string">&quot;@vitejs/plugin-vue&quot;</span>;</span><br><span class="line">import path from <span class="string">&quot;path&quot;</span>;</span><br><span class="line"></span><br><span class="line">// https://vitejs.dev/config/</span><br><span class="line"><span class="built_in">export</span> default defineConfig(&#123;</span><br><span class="line">  plugins: [vue()],</span><br><span class="line">  resolve: &#123;</span><br><span class="line">    <span class="built_in">alias</span>: &#123;</span><br><span class="line">      <span class="string">&quot;@&quot;</span>: path.resolve(__dirname, <span class="string">&quot;./src&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vite </tag>
            
            <tag> Vue3 </tag>
            
            <tag> Vue-Router </tag>
            
            <tag> Pinia </tag>
            
            <tag> Element plus </tag>
            
            <tag> TailwindCss </tag>
            
            <tag> FontAwesome </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker 镜像命令</title>
      <link href="/artical/adc983fe.html"/>
      <url>/artical/adc983fe.html</url>
      
        <content type="html"><![CDATA[<h1>基本概念</h1><ul class="lvl-0"><li class="lvl-2"><strong>镜像（Image）</strong>：Docker 镜像（Image），就相当于是一个 root 文件系统。比如官方镜像 ubuntu:16.04 就包含了完整的一套 Ubuntu16.04 最小系统的 root 文件系统。</li><li class="lvl-2"><strong>容器（Container）</strong>：镜像（Image）和容器（Container）的关系，就像是面向对象程序设计中的类和实例一样，镜像是静态的定义，容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂停等。</li><li class="lvl-2"><strong>仓库（Repository）</strong>：仓库可看成一个代码控制中心，用来保存镜像。</li></ul><h1>帮助</h1><h2 id="查看帮助">查看帮助<a class="header-anchor" href="#查看帮助">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p><code>$ docker</code></p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">[root@1674615372401 ~]# docker</span><br><span class="line"></span><br><span class="line">Usage:  docker COMMAND</span><br><span class="line"></span><br><span class="line">A self-sufficient runtime for containers</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">      --config string      Location of client config files (default &quot;/root/.docker&quot;)</span><br><span class="line">  -D, --debug              Enable debug mode</span><br><span class="line">      --help               Print usage</span><br><span class="line">  -H, --host list          Daemon socket(s) to connect to (default [])</span><br><span class="line">  -l, --log-level string   Set the logging level (&quot;debug&quot;, &quot;info&quot;, &quot;warn&quot;, &quot;error&quot;, &quot;fatal&quot;) (default &quot;info&quot;)</span><br><span class="line">      --tls                Use TLS; implied by --tlsverify</span><br><span class="line">      --tlscacert string   Trust certs signed only by this CA (default &quot;/root/.docker/ca.pem&quot;)</span><br><span class="line">      --tlscert string     Path to TLS certificate file (default &quot;/root/.docker/cert.pem&quot;)</span><br><span class="line">      --tlskey string      Path to TLS key file (default &quot;/root/.docker/key.pem&quot;)</span><br><span class="line">      --tlsverify          Use TLS and verify the remote</span><br><span class="line">  -v, --version            Print version information and quit</span><br><span class="line"></span><br><span class="line">Management Commands:</span><br><span class="line">  container   Manage containers</span><br><span class="line">  image       Manage images</span><br><span class="line">  network     Manage networks</span><br><span class="line">  node        Manage Swarm nodes</span><br><span class="line">  plugin      Manage plugins</span><br><span class="line">  secret      Manage Docker secrets</span><br><span class="line">  service     Manage services</span><br><span class="line">  stack       Manage Docker stacks</span><br><span class="line">  swarm       Manage Swarm</span><br><span class="line">  system      Manage Docker</span><br><span class="line">  volume      Manage volumes</span><br><span class="line"></span><br><span class="line">Commands:</span><br><span class="line">  attach      Attach to a running container</span><br><span class="line">  build       Build an image from a Dockerfile  # 从Dockerfile构建镜像</span><br><span class="line">  commit      Create a new image from a container&#x27;s changes</span><br><span class="line">  cp          Copy files/folders between a container and the local filesystem</span><br><span class="line">  create      Create a new container  # 创建一个新的容器</span><br><span class="line">  diff        Inspect changes on a container&#x27;s filesystem</span><br><span class="line">  events      Get real time events from the server</span><br><span class="line">  exec        Run a command in a running container</span><br><span class="line">  export      Export a container&#x27;s filesystem as a tar archive</span><br><span class="line">  history     Show the history of an image</span><br><span class="line">  images      List images  # 列出所有镜像</span><br><span class="line">  import      Import the contents from a tarball to create a filesystem image</span><br><span class="line">  info        Display system-wide information</span><br><span class="line">  inspect     Return low-level information on Docker objects</span><br><span class="line">  kill        Kill one or more running containers  # 杀死一个或多个正在运行的容器</span><br><span class="line">  load        Load an image from a tar archive or STDIN</span><br><span class="line">  login       Log in to a Docker registry</span><br><span class="line">  logout      Log out from a Docker registry</span><br><span class="line">  logs        Fetch the logs of a container  # 获取容器的日志</span><br><span class="line">  pause       Pause all processes within one or more containers  # 暂停一个或多个容器中的所有进程</span><br><span class="line">  port        List port mappings or a specific mapping for the container</span><br><span class="line">  ps          List containers  # 列出所有容器</span><br><span class="line">  pull        Pull an image or a repository from a registry</span><br><span class="line">  push        Push an image or a repository to a registry  </span><br><span class="line">  rename      Rename a container  # 重命名容器</span><br><span class="line">  restart     Restart one or more containers  # 重启一个或多个容器</span><br><span class="line">  rm          Remove one or more containers # 删除一个或多个容器</span><br><span class="line">  rmi         Remove one or more images # 删除一个或多个镜像</span><br><span class="line">  run         Run a command in a new container  # 在新容器中运行命令</span><br><span class="line">  save        Save one or more images to a tar archive (streamed to STDOUT by default)</span><br><span class="line">  search      Search the Docker Hub for images</span><br><span class="line">  start       Start one or more stopped containers  # 启动一个或多个停止的容器</span><br><span class="line">  stats       Display a live stream of container(s) resource usage statistics</span><br><span class="line">  stop        Stop one or more running containers  # 停止一个或多个正在运行的容器</span><br><span class="line">  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE</span><br><span class="line">  top         Display the running processes of a container  # 显示容器正在运行的进程</span><br><span class="line">  unpause     Unpause all processes within one or more containers</span><br><span class="line">  update      Update configuration of one or more containers</span><br><span class="line">  version     Show the Docker version information</span><br><span class="line">  wait        Block until one or more containers stop, then print their exit codes</span><br><span class="line"></span><br><span class="line">Run &#x27;docker COMMAND --help&#x27; for more information on a command.</span><br></pre></td></tr></table></figure><h2 id="查看命令用法">查看命令用法<a class="header-anchor" href="#查看命令用法">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p><code>$ docker [命令] --help</code></p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@1674615372401 ~]# docker images --help</span><br><span class="line"></span><br><span class="line">Usage:  docker images [OPTIONS] [REPOSITORY[:TAG]]</span><br><span class="line"></span><br><span class="line">List images</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -a, --all             Show all images (default hides intermediate images)</span><br><span class="line">      --digests         Show digests</span><br><span class="line">  -f, --filter filter   Filter output based on conditions provided</span><br><span class="line">      --format string   Pretty-print images using a Go template</span><br><span class="line">      --help            Print usage</span><br><span class="line">      --no-trunc        Don&#x27;t truncate output</span><br><span class="line">  -q, --quiet           Only show numeric IDs</span><br></pre></td></tr></table></figure><h1>镜像命令</h1><h2 id="搜索镜像">搜索镜像<a class="header-anchor" href="#搜索镜像">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p><code>docker search [keywords]</code></p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@1674615372401 ~]# docker search hello</span><br><span class="line">INDEX       NAME                                           DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED</span><br><span class="line">docker.io   docker.io/hello-world                          Hello World! (an example of minimal Docker...   1962      [OK]       </span><br><span class="line">docker.io   docker.io/hello-seattle                        Hello from DockerCon 2016 (Seattle)!            13        [OK]       </span><br><span class="line">docker.io   docker.io/rancher/hello-world                                                                  4                    </span><br><span class="line">docker.io   docker.io/ibmcom/helloworld                    A sample used by IBM Cloud Code Engine          2       ...</span><br></pre></td></tr></table></figure><h2 id="下载镜像">下载镜像<a class="header-anchor" href="#下载镜像">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p><code>docker pull [image name]</code></p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@1674615372401 ~]# docker pull hello-world</span><br><span class="line">Using default tag: latest</span><br><span class="line">Trying to pull repository docker.io/library/hello-world ... </span><br><span class="line">latest: Pulling from docker.io/library/hello-world</span><br><span class="line">2db29710123e: Pull complete </span><br><span class="line">Digest: sha256:2498fce14358aa50ead0cc6c19990fc6ff866ce72aeb5546e1d59caac3d0d60f</span><br><span class="line">Status: Downloaded newer image for docker.io/hello-world:latest</span><br></pre></td></tr></table></figure><h2 id="查询所有镜像">查询所有镜像<a class="header-anchor" href="#查询所有镜像">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@1674615372401 ~]# docker images</span><br><span class="line">REPOSITORY              TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">test                    1.0                 ae784e527383        26 minutes ago      598 MB</span><br><span class="line">&lt;none&gt;                  &lt;none&gt;              092cd1cb0519        55 minutes ago      598 MB</span><br><span class="line">docker.io/openjdk       8                   e24ac15e052e        13 months ago       526 MB</span><br><span class="line">docker.io/mysql         latest              3218b38490ce        13 months ago       516 MB</span><br><span class="line">docker.io/hello-world   latest              feb5d9fea6a5        16 months ago       13.3 kB</span><br><span class="line">docker.io/java          8                   d23bdf5b1b1b        6 years ago         643 MB</span><br></pre></td></tr></table></figure><h2 id="删除镜像">删除镜像<a class="header-anchor" href="#删除镜像">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p><code>docker rmi [image id]</code></p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@1674615372401 ~]# docker rmi 092cd1cb0519</span><br><span class="line">Deleted: sha256:092cd1cb05190dcf6dea044dd92dc3b8a5f5bc8077157c88e31a49f3891d756f</span><br><span class="line">Deleted: sha256:fcf3f071fde7fba8fa6ffbb8fb6e3e911b1e7673bcaa9fa0151f604cf56dde39</span><br><span class="line">Deleted: sha256:841aa62063a5a204f52201bf009f8d19ec9748b374f6d223c07e2c75082271c4</span><br><span class="line">Deleted: sha256:db3ab2e6593987d605b87e2402cd0db8be0cbbaa1f0c098a4c65c2d6e15169fb</span><br><span class="line">Deleted: sha256:cb19cc4ba12ebe123c8c42be0da1a6fe75fa011bbe66b81682561776f2d394eb</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>报错:  <code>image is being used by stopped container</code>, 执行以下命令再删除</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a | grep <span class="string">&quot;Exited&quot;</span> | awk <span class="string">&#x27;&#123;print $1 &#125;&#x27;</span>|xargs docker stop</span><br><span class="line">docker ps -a | grep <span class="string">&quot;Exited&quot;</span> | awk <span class="string">&#x27;&#123;print $1 &#125;&#x27;</span>|xargs docker <span class="built_in">rm</span></span><br><span class="line">docker images|grep none|awk <span class="string">&#x27;&#123;print $3 &#125;&#x27;</span>|xargs docker rmi</span><br></pre></td></tr></table></figure><h2 id="运行容器">运行容器<a class="header-anchor" href="#运行容器">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p><strong><code>-t</code>:</strong> 在新容器内指定一个伪终端或终端。</p></li><li class="lvl-2"><p><strong><code>-i</code>:</strong> 允许你对容器内的标准输入 (STDIN) 进行交互。</p></li><li class="lvl-2"><p><code>-d</code>:   指定容器的运行模式, 默认以进程方式运行</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@1674615372401 ~]# docker run -itd --name mysql-test -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql</span><br><span class="line">2b237156961bba56778b13e9b3f3e9486497d4d52b70391d11daed0a7bbc5f36</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@1674615372401 ~]# docker run hello-world</span><br><span class="line"></span><br><span class="line">Hello from Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line"></span><br><span class="line">To generate this message, Docker took the following steps:</span><br><span class="line"> 1. The Docker client contacted the Docker daemon.</span><br><span class="line"> 2. The Docker daemon pulled the &quot;hello-world&quot; image from the Docker Hub.</span><br><span class="line">    (amd64)</span><br><span class="line"> 3. The Docker daemon created a new container from that image which runs the</span><br><span class="line">    executable that produces the output you are currently reading.</span><br><span class="line"> 4. The Docker daemon streamed that output to the Docker client, which sent it</span><br><span class="line">    to your terminal.</span><br><span class="line"></span><br><span class="line">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class="line"><span class="meta prompt_"> $ </span><span class="language-bash">docker run -it ubuntu bash</span></span><br><span class="line"></span><br><span class="line">Share images, automate workflows, and more with a free Docker ID:</span><br><span class="line"> https://hub.docker.com/</span><br><span class="line"></span><br><span class="line">For more examples and ideas, visit:</span><br><span class="line"> https://docs.docker.com/get-started/</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="查看运行">查看运行<a class="header-anchor" href="#查看运行">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p><code>-a</code> 查看历史运行记录</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@1674615372401 ~]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                               NAMES</span><br><span class="line">2b237156961b        mysql               &quot;docker-entrypoint...&quot;   2 minutes ago       Up 2 minutes        0.0.0.0:3306-&gt;3306/tcp, 33060/tcp   mysql-test</span><br><span class="line">a41e7e889a1a        test:1.0            &quot;java -Djava.secur...&quot;   35 minutes ago      Up 35 minutes       0.0.0.0:8080-&gt;8081/tcp              springboot</span><br></pre></td></tr></table></figure><p><strong>STATUS:</strong> 容器状态。</p><p>状态有7种：</p><ul class="lvl-0"><li class="lvl-2"><p>created（已创建）</p></li><li class="lvl-2"><p>restarting（重启中）</p></li><li class="lvl-2"><p>running 或 Up（运行中）</p></li><li class="lvl-2"><p>removing（迁移中）</p></li><li class="lvl-2"><p>paused（暂停）</p></li><li class="lvl-2"><p>exited（停止）</p></li><li class="lvl-2"><p>dead（死亡）</p></li></ul><p><a href="https://www.runoob.com/docker/docker-tutorial.html">https://www.runoob.com/docker/docker-tutorial.html</a></p><h2 id="停止运行容器">停止运行容器<a class="header-anchor" href="#停止运行容器">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p><code>docker stop [CONTAINER ID ]</code></p></li></ul><h2 id="进入容器与退出">进入容器与退出<a class="header-anchor" href="#进入容器与退出">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p><code>docker exec [CONTAINER ID ]  /bin/bash</code>  指定使用的控制台地址/bin/bash</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@1674615372401 ~]# docker exec -it 2b237156961b /bin/bash</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">发生变化</span></span><br><span class="line">root@2b237156961b:/# exit</span><br><span class="line">exit</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">恢复回来</span></span><br><span class="line">[root@1674615372401 ~]# </span><br></pre></td></tr></table></figure><h2 id="查看容器运行日志">查看容器运行日志<a class="header-anchor" href="#查看容器运行日志">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p><code>docker logs -f [CONTAINER ID ]</code></p></li><li class="lvl-2"><p><code>-f</code> 实时显示日志</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@1674615372401 ~]# docker logs -f a41e7e889a1a</span><br><span class="line">  .   ____          _            __ _ _</span><br><span class="line"> /\\ / ___&#x27;_ __ _ _(_)_ __  __ _ \ \ \ \</span><br><span class="line">( ( )\___ | &#x27;_ | &#x27;_| | &#x27;_ \/ _` | \ \ \ \</span><br><span class="line"> \\/  ___)| |_)| | | | | || (_| |  ) ) ) )</span><br><span class="line">  &#x27;  |____| .__|_| |_|_| |_\__, | / / / /</span><br><span class="line"> =========|_|==============|___/=/_/_/_/</span><br><span class="line"> :: Spring Boot ::                (v2.5.6)</span><br><span class="line"> ....</span><br></pre></td></tr></table></figure><h2 id="重启容器">重启容器<a class="header-anchor" href="#重启容器">#</a></h2><p>启动一个或多个已经停止的容器</p><ul class="lvl-0"><li class="lvl-2"><p><code>docker start [name]</code></p></li></ul><h2 id="构建镜像">构建镜像<a class="header-anchor" href="#构建镜像">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p><code>Dockerfile</code>命令说明:  <a href="https://www.runoob.com/docker/docker-dockerfile.html">https://www.runoob.com/docker/docker-dockerfile.html</a></p></li><li class="lvl-2"><p><code>$ docker build -t nginx:v3 .</code></p></li><li class="lvl-2"><p><strong>-t</strong> ：指定要创建的目标镜像名</p></li><li class="lvl-2"><p><code>v3</code> 表示版本标签</p></li><li class="lvl-2"><p>最后一个点表示<code>Dockerfile</code>所在的路径, 在当前路径同目录下</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git常用命令</title>
      <link href="/artical/caff8000.html"/>
      <url>/artical/caff8000.html</url>
      
        <content type="html"><![CDATA[<h1>Git常用命令</h1><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>git init</code></td><td style="text-align:center">初始化本地仓库</td></tr><tr><td style="text-align:center"><code>git commit -am “第一次提交”</code></td><td style="text-align:center">添加并提交到本地库</td></tr><tr><td style="text-align:center"><code>git status</code></td><td style="text-align:center">查看当前文件状态</td></tr><tr><td style="text-align:center"><code>git reflog</code></td><td style="text-align:center">查看简洁日志</td></tr><tr><td style="text-align:center"><code>git log</code></td><td style="text-align:center">查看完整日志</td></tr><tr><td style="text-align:center"><code>git remote</code></td><td style="text-align:center">查看添加的远程库</td></tr><tr><td style="text-align:center"><code>git remote add origin [远程库地址]</code></td><td style="text-align:center">添加一个别名为<code>origin</code>的远程库</td></tr><tr><td style="text-align:center"><code>git push -u origin main</code></td><td style="text-align:center">将本地库<code>main</code>分支推送到<code>origin</code>远程库的<code>main</code>分支</td></tr><tr><td style="text-align:center"><code>git push -u [远程库地址] main</code></td><td style="text-align:center">将本地库<code>main</code>分支推送到<code>[远程库地址]</code>所在的远程库的<code>main</code>分支</td></tr><tr><td style="text-align:center"><code>git push -u origin master:main</code></td><td style="text-align:center">将本地库<code>master</code>分支推送到<code>origin</code>远程库的<code>main</code>分支</td></tr><tr><td style="text-align:center"><code>git remote rm origin</code></td><td style="text-align:center">删除<code>origin</code>远程库</td></tr><tr><td style="text-align:center">分支</td><td style="text-align:center"></td></tr><tr><td style="text-align:center"><code>git branch -v</code></td><td style="text-align:center">查看所有分支</td></tr><tr><td style="text-align:center"><code>git branch dev</code></td><td style="text-align:center">创建一个名为<code>dev</code>的分支</td></tr><tr><td style="text-align:center"><code>git checkout dev</code></td><td style="text-align:center">切换到<code>dev</code>分支</td></tr><tr><td style="text-align:center"><code>git checkout -b dev</code></td><td style="text-align:center">创建一个名为<code>dev</code>的分支,  同时切换到<code>dev</code>分支</td></tr><tr><td style="text-align:center"><code>git branch -M test</code></td><td style="text-align:center">将当前所在分支更名为<code>test</code></td></tr><tr><td style="text-align:center"><code>git merge main</code></td><td style="text-align:center">将<code>main</code>分支合并到当前分支(可能会产生冲突, 需手动处理)</td></tr><tr><td style="text-align:center"><code>git reset –hard [版本号]</code></td><td style="text-align:center">切换到某个版本，可通过<code>git reflog</code>查看版本号</td></tr><tr><td style="text-align:center"><code>git branch --delete dev</code></td><td style="text-align:center">删除<code>dev</code>分支</td></tr><tr><td style="text-align:center"><code> git reset --hard HEAD</code></td><td style="text-align:center">恢复到最后一次提交的状态</td></tr><tr><td style="text-align:center"><code>git clone [远程库地址]</code></td><td style="text-align:center">克隆远程库的项目到本地</td></tr></tbody></table><h1>扩展</h1><ul class="lvl-0"><li class="lvl-2"><p>官网:  <a href="https://git-scm.com/book/zh/v2">https://git-scm.com/book/zh/v2</a></p></li><li class="lvl-2"><p>常用命令:  <a href="https://yelog.org/2016/10/02/git-command/">https://yelog.org/2016/10/02/git-command/</a></p></li><li class="lvl-2"><p>git - 简易指南:   <a href="https://www.bootcss.com/p/git-guide/">https://www.bootcss.com/p/git-guide/</a></p></li><li class="lvl-2"><p>菜鸟Git教程:  <a href="https://www.runoob.com/git/git-tutorial.html">https://www.runoob.com/git/git-tutorial.html</a></p></li><li class="lvl-2"><p>Git大全:  <a href="https://gitee.com/all-about-git">https://gitee.com/all-about-git</a></p></li></ul><h1>基本结构</h1><p><img src="http://qiniu.yujing.fit/typora_img/Git.png" alt="Git"></p><h1>Pull Request</h1><ol><li class="lvl-3"><p><code>fork</code>项目到本地仓库</p></li><li class="lvl-3"><p>对项目更改后提交到本地库</p></li><li class="lvl-3"><p>点击<code>Pull request</code>创建一个拉取请求</p></li><li class="lvl-3"><p>写入日志提交</p></li><li class="lvl-3"><p>仓库主点击Pull Request 查看更改的代码</p></li><li class="lvl-3"><p>选择是否合并请求</p></li></ol><h1>常见问题</h1><ul class="lvl-0"><li class="lvl-2"><p><code>push</code>之前应先<code>pull</code>保持版本最新</p></li></ul><h2 id="Github网络问题">Github网络问题<a class="header-anchor" href="#Github网络问题">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p>使用<code>ssh</code>提交</p></li><li class="lvl-2"><p>更换使用<code>Gitee</code></p></li><li class="lvl-2"><p>多尝试几次</p></li><li class="lvl-2"><p>尝试下面两种方法</p></li></ul><p><strong>修改设置，解除ssl验证</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.sslVerify &quot;false&quot;</span><br></pre></td></tr></table></figure><p>取消代理</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --unset http.proxy</span><br><span class="line">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure><p>当两个仓库历史不一致时, <code>fatal: refusing to merge unrelated histories</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull https://gitee.com/yu-jing-Tiam/gitee_-web.git master --allow-unrelated-histories</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo基本安装和使用</title>
      <link href="/artical/148e19a2.html"/>
      <url>/artical/148e19a2.html</url>
      
        <content type="html"><![CDATA[<h1>Hexo</h1><p>hexo参考官方文档:</p><ul class="lvl-0"><li class="lvl-2"><p><a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a></p></li></ul><p>butterfly主题配置 参考教程:</p><ul class="lvl-0"><li class="lvl-2"><p>推荐:  <a href="https://butterfly.js.org">https://butterfly.js.org</a></p></li><li class="lvl-2"><p><a href="https://butterfly.zhheo.com/docs">https://butterfly.zhheo.com/docs</a></p></li></ul><h2 id="全局安装">全局安装<a class="header-anchor" href="#全局安装">#</a></h2><h3 id="前提">前提<a class="header-anchor" href="#前提">#</a></h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\<span class="number">30362</span>&gt;git <span class="literal">-v</span></span><br><span class="line">git version <span class="number">2.37</span>.<span class="number">3</span>.windows.<span class="number">1</span></span><br><span class="line"></span><br><span class="line">C:\Users\<span class="number">30362</span>&gt;node <span class="literal">-v</span></span><br><span class="line">v18.<span class="number">12.1</span></span><br><span class="line"></span><br><span class="line">C:\Users\<span class="number">30362</span>&gt;npm <span class="literal">-v</span></span><br><span class="line"><span class="number">8.19</span>.<span class="number">2</span></span><br></pre></td></tr></table></figure><h3 id="安装">安装<a class="header-anchor" href="#安装">#</a></h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\<span class="number">30362</span>&gt;npm install <span class="literal">-g</span> hexo<span class="literal">-cli</span></span><br><span class="line"></span><br><span class="line">added <span class="number">59</span> packages <span class="keyword">in</span> <span class="number">7</span>s</span><br><span class="line"></span><br><span class="line">C:\Users\<span class="number">30362</span>&gt;hexo <span class="literal">-v</span></span><br><span class="line">hexo<span class="literal">-cli</span>: <span class="number">4.3</span>.<span class="number">0</span></span><br><span class="line">os: win32 <span class="number">10.0</span>.<span class="number">19044</span></span><br><span class="line">node: <span class="number">18.12</span>.<span class="number">1</span></span><br><span class="line">v8: <span class="number">10.2</span>.<span class="number">154.15</span><span class="literal">-node</span>.<span class="number">12</span></span><br><span class="line">uv: <span class="number">1.43</span>.<span class="number">0</span></span><br><span class="line">zlib: <span class="number">1.2</span>.<span class="number">11</span></span><br><span class="line">brotli: <span class="number">1.0</span>.<span class="number">9</span></span><br><span class="line">ares: <span class="number">1.18</span>.<span class="number">1</span></span><br><span class="line">modules: <span class="number">108</span></span><br><span class="line">nghttp2: <span class="number">1.47</span>.<span class="number">0</span></span><br><span class="line">napi: <span class="number">8</span></span><br><span class="line">llhttp: <span class="number">6.0</span>.<span class="number">10</span></span><br><span class="line">openssl: <span class="number">3.0</span>.<span class="number">7</span>+quic</span><br><span class="line">cldr: <span class="number">41.0</span></span><br><span class="line">icu: <span class="number">71.1</span></span><br><span class="line">tz: <span class="number">2022</span>b</span><br><span class="line">unicode: <span class="number">14.0</span></span><br><span class="line">ngtcp2: <span class="number">0.8</span>.<span class="number">1</span></span><br><span class="line">nghttp3: <span class="number">0.7</span>.<span class="number">0</span></span><br><span class="line"></span><br><span class="line">C:\Users\<span class="number">30362</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="SSH连接">SSH连接<a class="header-anchor" href="#SSH连接">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看是否安装ssh</span></span><br><span class="line">30362@Tiam-Dell MINGW64 /d/wwwroot/Hexo</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ssh</span></span><br><span class="line">usage: ssh [-46AaCfGgKkMNnqsTtVvXxYy] [-B bind_interface]</span><br><span class="line">           [-b bind_address] [-c cipher_spec] [-D [bind_address:]port]</span><br><span class="line">           [-E log_file] [-e escape_char] [-F configfile] [-I pkcs11]</span><br><span class="line">           [-i identity_file] [-J [user@]host[:port]] [-L address]</span><br><span class="line">           [-l login_name] [-m mac_spec] [-O ctl_cmd] [-o option] [-p port]</span><br><span class="line">           [-Q query_option] [-R address] [-S ctl_path] [-W host:port]</span><br><span class="line">           [-w local_tun[:remote_tun]] destination [command [argument ...]]</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">生成秘钥</span></span><br><span class="line">ssh-keygen -t rsa -C &quot;github邮箱地址&quot;</span><br></pre></td></tr></table></figure><p>秘钥路径:<code>C:\Users\30362\.ssh\id_rsa.pub</code></p><p><img src="http://qiniu.yujing.fit/typora_img/image-20221118190321120.png" alt="image-20221118190321120"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">测试是否连接成功</span></span><br><span class="line">30362@Tiam-Dell MINGW64 /d/wwwroot/Hexo</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ssh -T git@github.com</span></span><br><span class="line">Hi tiam-bloom! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><h2 id="初始化文件夹-仓库">初始化文件夹(仓库)<a class="header-anchor" href="#初始化文件夹-仓库">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">clone</span> hexo</span></span><br><span class="line">30362@Tiam-Dell MINGW64 /d/wwwroot/Hexo-Blog</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo init</span></span><br><span class="line">INFO  Cloning hexo-starter https://github.com/hexojs/hexo-starter.git</span><br><span class="line">error: RPC failed; curl 28 OpenSSL SSL_read: Connection was reset, errno 10054</span><br><span class="line">fatal: expected &#x27;packfile&#x27;</span><br><span class="line">WARN  git clone failed. Copying data instead</span><br><span class="line">INFO  Install dependencies</span><br><span class="line">INFO  Start blogging with Hexo!</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">部署本地hexo blog, 开启hexo server</span></span><br><span class="line">30362@Tiam-Dell MINGW64 /d/wwwroot/Hexo-Blog</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo s</span></span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br><span class="line">&lt;Ctrl+C&gt;</span><br><span class="line">INFO  Have a nice day</span><br></pre></td></tr></table></figure><p><img src="http://qiniu.yujing.fit/typora_img/image-20221118194320476.png" alt="image-20221118194320476"></p><p>修改配置文件: <code>_config.yml</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="comment"># 使用ssh连接更快</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">https://github.com/tiam-bloom/tiam-bloom.github.io.git</span> </span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装hexo-deployer-git 自动部署发布工具</span></span><br><span class="line">30362@Tiam-Dell MINGW64 /d/wwwroot/Hexo-Blog</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-deployer-git --save</span></span><br><span class="line"></span><br><span class="line">added 1 package in 1s</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">上传文件到github仓库</span></span><br><span class="line">30362@Tiam-Dell MINGW64 /d/wwwroot/Hexo-Blog</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo g</span></span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Files loaded in 95 ms</span><br><span class="line">INFO  Generated: archives/index.html</span><br><span class="line">INFO  Generated: index.html</span><br><span class="line">........</span><br><span class="line">INFO  28 files generated in 343 ms</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">第二步</span></span><br><span class="line">30362@Tiam-Dell MINGW64 /d/wwwroot/Hexo-Blog</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo d</span></span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  Deploying: git</span><br><span class="line">INFO  Clearing .deploy_git folder...</span><br><span class="line">INFO  Copying files from public folder...</span><br><span class="line">...</span><br><span class="line">remote: Resolving deltas: 100% (3/3), done.</span><br><span class="line">To https://github.com/tiam-bloom/tiam-bloom.github.io.git</span><br><span class="line"> + 97cc225...3e72f91 HEAD -&gt; main (forced update)</span><br><span class="line">branch &#x27;master&#x27; set up to track &#x27;https://github.com/tiam-bloom/tiam-bloom.github.io.git/main&#x27;.</span><br><span class="line">INFO  Deploy done: git</span><br></pre></td></tr></table></figure><p><img src="http://qiniu.yujing.fit/typora_img/image-20221118193403425.png" alt="image-20221118193403425"></p><p><img src="http://qiniu.yujing.fit/typora_img/image-20221118193526031.png" alt="image-20221118193526031"></p><h2 id="结果">结果<a class="header-anchor" href="#结果">#</a></h2><p>可以直接通过仓库名访问了</p><p><img src="http://qiniu.yujing.fit/typora_img/image-20221118194200777.png" alt="image-20221118194200777"></p><p><img src="http://qiniu.yujing.fit/typora_img/image-20221118194249569.png" alt="image-20221118194249569"></p><h2 id="个性化自定义">个性化自定义<a class="header-anchor" href="#个性化自定义">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p>清除缓存文件（db.json）和已生成的静态文件（public） =&gt; <code>hexo cl</code></p></li><li class="lvl-2"><p><code>hexo g</code></p></li><li class="lvl-2"><p><code>hexo s</code></p></li><li class="lvl-2"><p><code>hexo d</code></p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">示列</span></span><br><span class="line">30362@Tiam-Dell MINGW64 /d/wwwroot/Hexo-Blog</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo cl</span></span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  Deleted database.</span><br><span class="line">INFO  Deleted public folder.</span><br><span class="line"></span><br><span class="line">30362@Tiam-Dell MINGW64 /d/wwwroot/Hexo-Blog</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo g</span></span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Files loaded in 130 ms</span><br><span class="line">INFO  Generated: archives/index.html</span><br><span class="line">INFO  Generated: archives/2022/11/index.html</span><br><span class="line">INFO  Generated: archives/2022/index.html</span><br><span class="line">......</span><br><span class="line">INFO  28 files generated in 274 ms</span><br><span class="line"></span><br><span class="line">30362@Tiam-Dell MINGW64 /d/wwwroot/Hexo-Blog</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo s</span></span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br><span class="line">INFO  Farewell</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">30362@Tiam-Dell MINGW64 /d/wwwroot/Hexo-Blog</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo d</span></span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  Deploying: git</span><br><span class="line">INFO  Clearing .deploy_git folder...</span><br><span class="line">....</span><br><span class="line"> + 2340992...9d5fbcd HEAD -&gt; main (forced update)</span><br><span class="line">branch &#x27;master&#x27; set up to track &#x27;https://github.com/tiam-bloom/tiam-bloom.github.io.git/main&#x27;.</span><br><span class="line">INFO  Deploy done: git</span><br></pre></td></tr></table></figure><h2 id="安装其他主题">安装其他主题<a class="header-anchor" href="#安装其他主题">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在根目录下执行</span></span><br><span class="line">30362@Tiam-Dell MINGW64 /d/wwwroot/Hexo-Blog</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span></span><br><span class="line">Cloning into &#x27;themes/butterfly&#x27;...</span><br><span class="line">remote: Enumerating objects: 5600, done.</span><br><span class="line">remote: Counting objects: 100% (207/207), done.</span><br><span class="line">remote: Compressing objects: 100% (145/145), done.</span><br><span class="line">remote: Total 5600 (delta 92), reused 144 (delta 62), pack-reused 5393</span><br><span class="line">Receiving objects: 100% (5600/5600), 2.50 MiB | 1.17 MiB/s, done.</span><br><span class="line">Resolving deltas: 100% (3660/3660), done.</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装pug 以及 stylus 的渲染器</span></span><br><span class="line">30362@Tiam-Dell MINGW64 /d/wwwroot/Hexo-Blog</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-renderer-pug hexo-renderer-stylus --save</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">added 38 packages in 8s</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解决文章中文路径失效问题, 安装插件</span></span><br><span class="line">30362@Tiam-Dell MINGW64 /d/wwwroot/Hexo-Blog</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install hexo-abbrlink --save</span></span><br><span class="line"></span><br><span class="line">added 2 packages in 3s</span><br></pre></td></tr></table></figure><h2 id="目录结构">目录结构<a class="header-anchor" href="#目录结构">#</a></h2><p><img src="http://qiniu.yujing.fit/typora_img/image-20230123214229198.png" alt="image-20230123214229198"></p><h2 id="更新主题到服务器">更新主题到服务器<a class="header-anchor" href="#更新主题到服务器">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">30362@Tiam-Dell MINGW64 /d/wwwroot/Hexo-Blog</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo cl</span></span><br><span class="line"></span><br><span class="line">30362@Tiam-Dell MINGW64 /d/wwwroot/Hexo-Blog</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo g</span></span><br><span class="line"></span><br><span class="line">30362@Tiam-Dell MINGW64 /d/wwwroot/Hexo-Blog</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo s</span></span><br><span class="line"></span><br><span class="line">30362@Tiam-Dell MINGW64 /d/wwwroot/Hexo-Blog</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo d</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>主题自定义: <a href="http://haiyong.site/post/22e1d5da.html">http://haiyong.site/post/22e1d5da.html</a></p><p>域名: <a href="https://www.namesilo.com/">https://www.namesilo.com/</a></p><p>如何绑定; <a href="https://www.likecs.com/show-30474.html">https://www.likecs.com/show-30474.html</a></p><p>官方主题: <a href="https://hexo.io/themes/">https://hexo.io/themes/</a></p><p>建建站文档: <a href="https://hexo.io/zh-cn/docs/setup">https://hexo.io/zh-cn/docs/setup</a></p><h2 id="绑定域名">绑定域名<a class="header-anchor" href="#绑定域名">#</a></h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\<span class="number">30362</span>&gt;ping tiam<span class="literal">-bloom</span>.github.io</span><br><span class="line"></span><br><span class="line">正在 Ping tiam<span class="literal">-bloom</span>.github.io [<span class="number">185.199</span><span class="type">.110.153</span>] 具有 <span class="number">32</span> 字节的数据:</span><br><span class="line">来自 <span class="number">185.199</span>.<span class="number">110.153</span> 的回复: 字节=<span class="number">32</span> 时间=<span class="number">191</span>ms TTL=<span class="number">42</span></span><br><span class="line">来自 <span class="number">185.199</span>.<span class="number">110.153</span> 的回复: 字节=<span class="number">32</span> 时间=<span class="number">194</span>ms TTL=<span class="number">42</span></span><br><span class="line">来自 <span class="number">185.199</span>.<span class="number">110.153</span> 的回复: 字节=<span class="number">32</span> 时间=<span class="number">200</span>ms TTL=<span class="number">42</span></span><br><span class="line">来自 <span class="number">185.199</span>.<span class="number">110.153</span> 的回复: 字节=<span class="number">32</span> 时间=<span class="number">201</span>ms TTL=<span class="number">42</span></span><br><span class="line"></span><br><span class="line"><span class="number">185.199</span>.<span class="number">110.153</span> 的 Ping 统计信息:</span><br><span class="line">    数据包: 已发送 = <span class="number">4</span>，已接收 = <span class="number">4</span>，丢失 = <span class="number">0</span> (<span class="number">0</span>% 丢失)，</span><br><span class="line">往返行程的估计时间(以毫秒为单位):</span><br><span class="line">    最短 = <span class="number">191</span>ms，最长 = <span class="number">201</span>ms，平均 = <span class="number">196</span>ms</span><br></pre></td></tr></table></figure><p><strong>IP:</strong> 185.199.111.153</p><h2 id="更新主题配置">更新主题配置<a class="header-anchor" href="#更新主题配置">#</a></h2><h2 id="评论">评论<a class="header-anchor" href="#评论">#</a></h2><p><a href="https://twikoo.js.org/">https://twikoo.js.org/</a></p><p><a href="http://haiyong.site/post/17c68aa7.html">http://haiyong.site/post/17c68aa7.html</a></p><h2 id="新建文章">新建文章<a class="header-anchor" href="#新建文章">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;Title&quot;</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source\_posts\Title.md</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><h2 id="本地图片位置">本地图片位置<a class="header-anchor" href="#本地图片位置">#</a></h2><p>放在本地文件夹位置：<code>/themes/butterfly/source/img</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">favicon:</span> <span class="string">/img/favicon.png</span></span><br></pre></td></tr></table></figure><h2 id="基本使用">基本使用<a class="header-anchor" href="#基本使用">#</a></h2><p>欢迎来到<a href="https://hexo.io/">Hexo</a>！这是你的第一个帖子。查看<a href="https://hexo.io/docs/">文档</a>了解更多信息。如果你在使用Hexo时遇到任何问题，你可以在<a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a>上找到答案，或者你可以在<a href="https://github.com/hexojs/hexo/issues">GitHub</a>.上问我</p><h3 id="Create-a-new-post">Create a new post<a class="header-anchor" href="#Create-a-new-post">#</a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server<a class="header-anchor" href="#Run-server">#</a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files<a class="header-anchor" href="#Generate-static-files">#</a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites<a class="header-anchor" href="#Deploy-to-remote-sites">#</a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h1>常用命令</h1><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>hexo cl</code></td><td style="text-align:center"><code>cl</code>=&gt;clear 清除缓存，当配置未生效的时候可以试试</td></tr><tr><td style="text-align:center"><code>hexo  new &quot;title&quot;</code></td><td style="text-align:center">新建一个标题为<code>title</code>的文章，文件路径<code>/source/_posts/title.md</code></td></tr><tr><td style="text-align:center"><code>hexo g</code></td><td style="text-align:center"><code>g =&gt; generate</code>，生成静态文件</td></tr><tr><td style="text-align:center"><code>hexo s</code></td><td style="text-align:center"><code>s =&gt; server</code>，开启本地服务调试，适用经常修改配置查看效果时</td></tr><tr><td style="text-align:center"><code>hexo d</code></td><td style="text-align:center"><code>d =&gt; deploy</code>，部署到远程库，之后便可在外网访问了，通常会有一会延迟</td></tr><tr><td style="text-align:center"><code>hexo g -d</code></td><td style="text-align:center">相当于<code>hexo g</code> + <code>hexo d</code>，发布新文章时可用</td></tr></tbody></table><h1>文章页配置</h1><ul class="lvl-0"><li class="lvl-2"><p>转自: <a href="https://butterfly.js.org/posts/dc584b87/#Post-Front-matter">https://butterfly.js.org/posts/dc584b87/#Post-Front-matter</a></p></li><li class="lvl-2"><p>页面配置见: <a href="https://butterfly.js.org/posts/dc584b87/#Page-Front-matter">https://butterfly.js.org/posts/dc584b87/#Page-Front-matter</a></p></li></ul><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">keywords:</span><br><span class="line">description:</span><br><span class="line">top<span class="emphasis">_img:</span></span><br><span class="line"><span class="emphasis">comments:</span></span><br><span class="line"><span class="emphasis">cover:</span></span><br><span class="line"><span class="emphasis">toc:</span></span><br><span class="line"><span class="emphasis">toc_</span>number:</span><br><span class="line">toc<span class="emphasis">_style_</span>simple:</span><br><span class="line">copyright:</span><br><span class="line">copyright<span class="emphasis">_author:</span></span><br><span class="line"><span class="emphasis">copyright_</span>author<span class="emphasis">_href:</span></span><br><span class="line"><span class="emphasis">copyright_</span>url:</span><br><span class="line">copyright<span class="emphasis">_info:</span></span><br><span class="line"><span class="emphasis">mathjax:</span></span><br><span class="line"><span class="emphasis">katex:</span></span><br><span class="line"><span class="emphasis">aplayer:</span></span><br><span class="line"><span class="emphasis">highlight_</span>shrink:</span><br><span class="line"><span class="section">aside:</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>写法</th><th>解释</th></tr></thead><tbody><tr><td>title</td><td>【必需】文章标题</td></tr><tr><td>date</td><td>【必需】文章创建日期</td></tr><tr><td>updated</td><td>【可选】文章更新日期</td></tr><tr><td>tags</td><td>【可选】文章标签</td></tr><tr><td>categories</td><td>【可选】文章分类</td></tr><tr><td>keywords</td><td>【可选】文章关键字</td></tr><tr><td>description</td><td>【可选】文章描述</td></tr><tr><td>top_img</td><td>【可选】文章顶部图片</td></tr><tr><td>cover</td><td>【可选】文章缩略图(如果没有设置top_img,文章页顶部将显示缩略图，可设为false/图片地址/留空)</td></tr><tr><td>comments</td><td>【可选】显示文章评论模块(默认 true)</td></tr><tr><td>toc</td><td>【可选】显示文章TOC(默认为设置中toc的enable配置)</td></tr><tr><td>toc_number</td><td>【可选】显示toc_number(默认为设置中toc的number配置)</td></tr><tr><td>toc_style_simple</td><td>【可选】显示 toc 简洁模式</td></tr><tr><td>copyright</td><td>【可选】显示文章版权模块(默认为设置中post_copyright的enable配置)</td></tr><tr><td>copyright_author</td><td>【可选】文章版权模块的<code>文章作者</code></td></tr><tr><td>copyright_author_href</td><td>【可选】文章版权模块的<code>文章作者</code>链接</td></tr><tr><td>copyright_url</td><td>【可选】文章版权模块的<code>文章连结</code>链接</td></tr><tr><td>copyright_info</td><td>【可选】文章版权模块的<code>版权声明</code>文字</td></tr><tr><td>mathjax</td><td>【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)</td></tr><tr><td>katex</td><td>【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)</td></tr><tr><td>aplayer</td><td>【可选】在需要的页面加载aplayer的js和css,请参考文章下面的<code>音乐</code> 配置</td></tr><tr><td>highlight_shrink</td><td>【可选】配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)</td></tr><tr><td>aside</td><td>【可选】显示侧边栏 (默认 true)</td></tr></tbody></table><h1>其他链接</h1><ul class="lvl-0"><li class="lvl-2"><p><a href="https://github.com/bennyxguo/hexo-theme-obsidian">A-Obsidian</a></p></li><li class="lvl-2"><p>Butterfly</p></li><li class="lvl-2"><p><a href="https://korilin.github.io/hexo-theme-particle-demo/night/public/">https://korilin.github.io/hexo-theme-particle-demo/night/public/</a></p></li><li class="lvl-2"><p><a href="http://miccall.tech/">http://miccall.tech/</a></p></li><li class="lvl-2"><p><a href="https://volantis.js.org/">https://volantis.js.org/</a></p></li><li class="lvl-2"><p><a href="https://github.com/argvchs/hexo-theme-particlex">ParticleX</a></p></li><li class="lvl-2"><p><a href="https://yelog.org/">https://yelog.org/</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>chatGPT的一些使用</title>
      <link href="/artical/473caace.html"/>
      <url>/artical/473caace.html</url>
      
        <content type="html"><![CDATA[<h1>ChatGPT</h1><ul class="lvl-0"><li class="lvl-2">官网: <a href="https://openai.com/blog/chatgpt/">https://openai.com/blog/chatgpt/</a></li><li class="lvl-2">介绍:</li></ul><p><img src="http://qiniu.yujing.fit/typora_img/image-20221208180949361.png" alt="image-20221208180949361"></p><ul class="lvl-0"><li class="lvl-2"><p>如何使用? B站, 抖音搜索关键词</p></li><li class="lvl-2"><p>使用前提: 可访问Goole</p></li></ul><p><img src="http://qiniu.yujing.fit/typora_img/image-20221208181332562.png" alt="image-20221208181332562"></p><h3 id="部分使用演示">部分使用演示<a class="header-anchor" href="#部分使用演示">#</a></h3><ul class="lvl-0"><li class="lvl-2"><p>解释代码作用</p></li></ul><p><img src="http://qiniu.yujing.fit/typora_img/image-20221208154904020.png" alt="image-20221208154904020"></p><p><img src="http://qiniu.yujing.fit/typora_img/image-20221208154916194.png" alt="image-20221208154916194"></p><ul class="lvl-0"><li class="lvl-2"><p>整合搜索引擎,</p></li></ul><p><img src="http://qiniu.yujing.fit/typora_img/image-20221208155039634.png" alt="image-20221208155039634"></p><ul class="lvl-0"><li class="lvl-2"><p>解LeetCode的题</p></li></ul><p><img src="http://qiniu.yujing.fit/typora_img/image-20221208155221247.png" alt="image-20221208155221247"></p><ul class="lvl-0"><li class="lvl-2"><p>面试问题</p></li></ul><p><img src="http://qiniu.yujing.fit/typora_img/image-20221208155254473.png" alt="image-20221208155254473"></p><ul class="lvl-0"><li class="lvl-2"><p>工具使用</p></li></ul><p><img src="http://qiniu.yujing.fit/typora_img/image-20221208155320897.png" alt="image-20221208155320897"></p><ul class="lvl-0"><li class="lvl-2"><p>找资源</p></li></ul><p><img src="http://qiniu.yujing.fit/typora_img/image-20221208155359549.png" alt="image-20221208155359549"></p><ul class="lvl-0"><li class="lvl-2"><p>搜题</p></li></ul><p><img src="http://qiniu.yujing.fit/typora_img/image-20221208155430505.png" alt="image-20221208155430505"></p><ul class="lvl-0"><li class="lvl-2"><p>写邮件</p></li></ul><p><img src="http://qiniu.yujing.fit/typora_img/image-20221208155519915.png" alt="image-20221208155519915"></p><ul class="lvl-0"><li class="lvl-2"><h6 id="做题-写英语作文">做题, 写英语作文<a class="header-anchor" href="#做题-写英语作文">#</a></h6></li></ul><p><img src="http://qiniu.yujing.fit/typora_img/image-20221208155558348.png" alt="image-20221208155558348"></p><ul class="lvl-0"><li class="lvl-2"><p>写代码</p></li></ul><p><img src="http://qiniu.yujing.fit/typora_img/image-20221208155624350.png" alt="image-20221208155624350"></p><ul class="lvl-0"><li class="lvl-2"><p>写诗</p></li></ul><p><img src="http://qiniu.yujing.fit/typora_img/image-20221208162456464.png" alt="image-20221208162456464"></p><ul class="lvl-0"><li class="lvl-2"><p>写博客</p></li></ul><p><img src="http://qiniu.yujing.fit/typora_img/image-20221208162610959.png" alt="image-20221208162610959"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python笔记</title>
      <link href="/artical/d83aff49.html"/>
      <url>/artical/d83aff49.html</url>
      
        <content type="html"><![CDATA[<h1>Python</h1><p>2021.9.9</p><h2 id="Turtle官方文档"><a href="https://docs.python.org/zh-cn/3/library/turtle.html?highlight=reset#turtle.reset">Turtle官方文档</a><a class="header-anchor" href="#Turtle官方文档">#</a></h2><h3 id="货币兑换">货币兑换<a class="header-anchor" href="#货币兑换">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">money=<span class="built_in">input</span>(<span class="string">&quot;请输入货币符号($/￥)和金额：&quot;</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>+<span class="number">1</span>==<span class="number">2</span>:</span><br><span class="line">    <span class="keyword">if</span> money[<span class="number">0</span>] <span class="keyword">in</span> [<span class="string">&#x27;￥&#x27;</span>]:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;可兑换的美元为:$%.4f&quot;</span>%(<span class="built_in">eval</span>(money[<span class="number">1</span>:<span class="built_in">len</span>(money)])*<span class="number">0.1452</span>))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">elif</span> money[<span class="number">0</span>] <span class="keyword">in</span> [<span class="string">&#x27;$&#x27;</span>]:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;可兑换的人民币为:￥%.4f&quot;</span> % (<span class="built_in">eval</span>(money[<span class="number">1</span>:<span class="built_in">len</span>(money)])*<span class="number">6.8833</span>))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span> :</span><br><span class="line">        money = <span class="built_in">input</span>(<span class="string">&quot;输入格式有误，例:$100。请重新输入：&quot;</span>)</span><br></pre></td></tr></table></figure><p>1、input()函数只能返回字符串,所以应用eval()函数将字符串转换为可计算的数值.</p><p>2、1+1=2  表示无限循环，只有输入了正确的格式，输出了结果才会跳出循环。否则将一直循环输入语句。</p><p>3、关键字 in  表示money[0]是否存在于数组[‘￥’]中，[‘￥’]表示一个数组，不过只有一个元素。</p><p>4、%.4f   为格式符，表示输出为保留小数点后4的浮点数。</p><p>5、money[0]  索引  索引编号为0的字符，即第一个字符。</p><p>6、len()函数获取字符串长度，money[1:len(money)]  表示切片除了第一个字符（索引编号为0）外的所有字符。</p><h4 id="Version-1-0">Version 1.0<a class="header-anchor" href="#Version-1-0">#</a></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    money = <span class="built_in">input</span>(<span class="string">&quot;请输入货币符号($/￥)和金额：&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> money[<span class="number">0</span>] <span class="keyword">in</span> [<span class="string">&#x27;￥&#x27;</span>]:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;可兑换的美元为:$%.4f&quot;</span>%(<span class="built_in">eval</span>(money[<span class="number">1</span>:<span class="built_in">len</span>(money)])*<span class="number">0.1452</span>))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">elif</span> money[<span class="number">0</span>] <span class="keyword">in</span> [<span class="string">&#x27;$&#x27;</span>]:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;可兑换的人民币为:￥%.4f&quot;</span> % (<span class="built_in">eval</span>(money[<span class="number">1</span>:<span class="built_in">len</span>(money)])*<span class="number">6.8833</span>))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span> :</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;输入格式有误，例:$100。请重新输入.&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="Version-2-0-调用函数">Version 2.0(调用函数)<a class="header-anchor" href="#Version-2-0-调用函数">#</a></h4><p>文件名    <a href="http://curExchange.py">curExchange.py</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">exchange</span>(<span class="params">money</span>): <span class="comment">#定义函数</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">if</span> money[<span class="number">0</span>] <span class="keyword">in</span> [<span class="string">&#x27;￥&#x27;</span>]:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;可兑换的美元为:$%.4f&quot;</span> % (<span class="built_in">eval</span>(money[<span class="number">1</span>:<span class="built_in">len</span>(money)]) * <span class="number">0.1452</span>))</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> money[<span class="number">0</span>] <span class="keyword">in</span> [<span class="string">&#x27;$&#x27;</span>]:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;可兑换的人民币为:￥%.4f&quot;</span> % (<span class="built_in">eval</span>(money[<span class="number">1</span>:<span class="built_in">len</span>(money)]) * <span class="number">6.8833</span>))</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            money = <span class="built_in">input</span>(<span class="string">&quot;输入格式有误，例:$100。请重新输入:&quot;</span>)</span><br><span class="line">money = <span class="built_in">input</span>(<span class="string">&quot;请输入货币符号($/￥)和金额：&quot;</span>)</span><br><span class="line">exchange(money)  <span class="comment">#调用函数</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Version-3-0-调用模块">Version 3.0(调用模块)<a class="header-anchor" href="#Version-3-0-调用模块">#</a></h4><p>将前一个文件封装为一个模块，创建一个新文件，调用模块。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> curExchange <span class="comment">#导入模块 文件名 curExchange.py</span></span><br><span class="line">m= curExchange.money</span><br><span class="line"><span class="keyword">if</span> __name__== <span class="string">&#x27;main&#x27;</span>:  <span class="comment">#判断执行的文件是否为当前文件,若是则执行该分支,否者不执行。</span></span><br><span class="line">    curExchange.exchange(m)  <span class="comment">#前有空格</span></span><br></pre></td></tr></table></figure><p>1、  if <strong>name</strong>== ‘main’:     没有此句将会执行两次打印输出语句，原模块执行一次，调用后执行一次。</p><h3 id="等边三角">等边三角<a class="header-anchor" href="#等边三角">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle <span class="keyword">as</span> t <span class="comment">#导入turtle模块,取别名为 t</span></span><br><span class="line">t.pencolor(<span class="string">&quot;black&quot;</span>) <span class="comment">#画笔颜色</span></span><br><span class="line">t.fillcolor(<span class="string">&quot;pink&quot;</span>) <span class="comment">#填充颜色</span></span><br><span class="line">t.begin_fill() <span class="comment">#填充开始</span></span><br><span class="line">t.forward(<span class="number">200</span>) <span class="comment">#长度200像素</span></span><br><span class="line">t.seth(<span class="number">240</span>) <span class="comment">#角度240°</span></span><br><span class="line">t.forward(<span class="number">200</span>)</span><br><span class="line">t.seth(<span class="number">120</span>)</span><br><span class="line">t.forward(<span class="number">200</span>)</span><br><span class="line">t.end_fill() <span class="comment">#填充结束</span></span><br></pre></td></tr></table></figure><p><img src="D:%5Cpython%5C%E7%AC%94%E8%AE%B0%5Cimg%5Cimage-20210909211103722.png" alt="image-20210909211103722"></p><h3 id="凌形">凌形<a class="header-anchor" href="#凌形">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle <span class="keyword">as</span> t <span class="comment">#导入turtle模块,取别名为 t</span></span><br><span class="line">t.pencolor(<span class="string">&quot;black&quot;</span>) <span class="comment">#画笔颜色</span></span><br><span class="line">t.fillcolor(<span class="string">&quot;pink&quot;</span>) <span class="comment">#填充颜色</span></span><br><span class="line">t.begin_fill() <span class="comment">#填充开始</span></span><br><span class="line">t.seth(-<span class="number">45</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    t.forward(<span class="number">200</span>)</span><br><span class="line">    t.right(<span class="number">90</span>) <span class="comment">#右902度</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">abs</span>(t.pos())&lt;<span class="number">1</span>:  <span class="comment">#回到原点结束</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">t.end_fill() <span class="comment">#填充结束</span></span><br></pre></td></tr></table></figure><p><img src="D:%5Cpython%5C%E7%AC%94%E8%AE%B0%5Cimg%5Cimage-20210909211006428.png" alt="image-20210909211006428"></p><h3 id="五边形">五边形<a class="header-anchor" href="#五边形">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle <span class="keyword">as</span> t <span class="comment">#导入turtle模块,取别名为 t</span></span><br><span class="line">t.pencolor(<span class="string">&quot;black&quot;</span>) <span class="comment">#画笔颜色</span></span><br><span class="line">t.fillcolor(<span class="string">&quot;pink&quot;</span>) <span class="comment">#填充颜色</span></span><br><span class="line">t.begin_fill() <span class="comment">#填充开始</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    t.forward(<span class="number">200</span>)</span><br><span class="line">    t.right(<span class="number">72</span>) </span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">abs</span>(t.pos())&lt;<span class="number">1</span>:  <span class="comment">#回到原点结束</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">t.end_fill() <span class="comment">#填充结束</span></span><br></pre></td></tr></table></figure><p><img src="D:%5Cpython%5C%E7%AC%94%E8%AE%B0%5Cimg%5Cimage-20210909211415129.png" alt="image-20210909211415129"></p><h3 id="正六边形">正六边形<a class="header-anchor" href="#正六边形">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle <span class="keyword">as</span> t <span class="comment">#导入turtle模块,取别名为 t</span></span><br><span class="line">t.pencolor(<span class="string">&quot;black&quot;</span>) <span class="comment">#画笔颜色</span></span><br><span class="line">t.fillcolor(<span class="string">&quot;pink&quot;</span>) <span class="comment">#填充颜色</span></span><br><span class="line">t.begin_fill() <span class="comment">#填充开始</span></span><br><span class="line">t.seth(-<span class="number">30</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    t.forward(<span class="number">100</span>)</span><br><span class="line">    t.right(<span class="number">60</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">abs</span>(t.pos())&lt;<span class="number">1</span>:  <span class="comment">#回到原点结束</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">t.end_fill() <span class="comment">#填充结束</span></span><br></pre></td></tr></table></figure><p><img src="D:%5Cpython%5C%E7%AC%94%E8%AE%B0%5Cimg%5Cimage-20210909211941106.png" alt="image-20210909211941106"></p><h3 id="circle-函数">circle()函数<a class="header-anchor" href="#circle-函数">#</a></h3><h4 id="圆形">圆形<a class="header-anchor" href="#圆形">#</a></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle <span class="keyword">as</span> t <span class="comment">#导入turtle模块,取别名为 t</span></span><br><span class="line">t.pencolor(<span class="string">&quot;black&quot;</span>) <span class="comment">#画笔颜色</span></span><br><span class="line">t.fillcolor(<span class="string">&quot;pink&quot;</span>) <span class="comment">#填充颜色</span></span><br><span class="line">t.begin_fill() <span class="comment">#填充开始</span></span><br><span class="line">t.circle(<span class="number">100</span>)</span><br><span class="line">t.end_fill() <span class="comment">#填充结束</span></span><br></pre></td></tr></table></figure><p>1、circle() 函数的三个参数，</p><p>第一个：radius 设置半径，不可省。</p><p>第二个：extent 设置弧度，默认为360度，可省</p><p>第三个：steps 设置步长，默认为无限次，即一个圆，可用于画正多边形。也可省。</p><p>2、所以前面所有的都可以用circle()函数画出</p><h4 id="正N边形">正N边形<a class="header-anchor" href="#正N边形">#</a></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle <span class="keyword">as</span> t <span class="comment">#导入turtle模块,取别名为 t</span></span><br><span class="line">t.pencolor(<span class="string">&quot;black&quot;</span>) <span class="comment">#画笔颜色</span></span><br><span class="line">t.fillcolor(<span class="string">&quot;pink&quot;</span>) <span class="comment">#填充颜色</span></span><br><span class="line">t.begin_fill() <span class="comment">#填充开始</span></span><br><span class="line">t.circle(<span class="number">100</span>,<span class="literal">None</span>,N) <span class="comment">#将N改为数值,则变为正N边形.</span></span><br><span class="line">t.end_fill() <span class="comment">#填充结束</span></span><br><span class="line">t.exitonclick() <span class="comment">#点击才关闭窗口(不自动关闭)</span></span><br></pre></td></tr></table></figure><p><strong>例:t.circle(100,None,3)</strong></p><p>结果如图:</p><p><img src="D:%5Cpython%5C%E7%AC%94%E8%AE%B0%5Cimg%5Cimage-20210909214038302.png" alt="image-20210909214038302"></p><h3 id="数学模块math">数学模块math<a class="header-anchor" href="#数学模块math">#</a></h3><h4 id="先来一口鸡汤">先来一口鸡汤<a class="header-anchor" href="#先来一口鸡汤">#</a></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;如果每天努力一点，那么一年后后的成果将有(1+0.01)^365=%.6f&quot;</span>%(<span class="number">1</span>+<span class="number">0.01</span>)**<span class="number">365</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;如果每天再努力一点，那么一年后后的成果将达到(1+0.02)^365=%.6f&quot;</span>%(<span class="number">1</span>+<span class="number">0.02</span>)**<span class="number">365</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;如果每天退步一点，那么一年后后的成果将只有(1-0.01)^365=%.6f&quot;</span>%(<span class="number">1</span>-<span class="number">0.01</span>)**<span class="number">365</span>)</span><br></pre></td></tr></table></figure><p><strong>输出结果:</strong></p><p><em>如果每天努力一点，那么一年后后的成果将有(1+0.01)^365=37.783434</em><br><em>如果每天再努力一点，那么一年后后的成果将达到(1+0.02)^365=1377.408292</em><br><em>如果每天退步一点，那么一年后后的成果将只有(1-0.01)^365=0.025518</em></p><h4 id="格式化输出">格式化输出<a class="header-anchor" href="#格式化输出">#</a></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math <span class="keyword">as</span> m</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;圆周率为 &#123;:.20f&#125;&quot;</span>.<span class="built_in">format</span>(m.pi)) <span class="comment">#浮点数小数点后20位</span></span><br><span class="line">a=m.floor(m.pi*<span class="number">10</span>**<span class="number">8</span>)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;以科学计数法显示:&#123;:e&#125;&quot;</span>.<span class="built_in">format</span>(a))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;千位分隔符显示:&#123;0:,&#125;&quot;</span>.<span class="built_in">format</span>(a))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;以小数点后两位百分比显示:&#123;:.2%&#125;&quot;</span>.<span class="built_in">format</span>(a))</span><br></pre></td></tr></table></figure><p><strong>输出结果:</strong></p><p>圆周率为 3.14159265358979311600<br>314159265<br>以科学计数法显示:3.141593e+08<br>千位分隔符显示:314,159,265<br>千位分隔符显示:31415926500.00%</p><h3 id="循环输出图形">循环输出图形<a class="header-anchor" href="#循环输出图形">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">11</span>): <span class="comment">#循环11次</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;___*&quot;</span>,end=<span class="string">&#x27;&#x27;</span>)  <span class="comment">#不换行</span></span><br></pre></td></tr></table></figure><p><strong>输出结果</strong></p><p><img src="D:%5Cpython%5C%E7%AC%94%E8%AE%B0%5Cimg%5Cimage-20210909235213539.png" alt="image-20210909235213539"></p><h3 id="九九乘法表">九九乘法表<a class="header-anchor" href="#九九乘法表">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,i+<span class="number">1</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;%d*%d=%-3d&quot;</span>%(j,i,i*j),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>) <span class="comment">#换行</span></span><br></pre></td></tr></table></figure><p><strong>输出结果:</strong></p><figure class="highlight v"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>*<span class="number">1</span>=<span class="number">1</span>  </span><br><span class="line"><span class="number">1</span>*<span class="number">2</span>=<span class="number">2</span>  <span class="number">2</span>*<span class="number">2</span>=<span class="number">4</span>  </span><br><span class="line"><span class="number">1</span>*<span class="number">3</span>=<span class="number">3</span>  <span class="number">2</span>*<span class="number">3</span>=<span class="number">6</span>  <span class="number">3</span>*<span class="number">3</span>=<span class="number">9</span>  </span><br><span class="line"><span class="number">1</span>*<span class="number">4</span>=<span class="number">4</span>  <span class="number">2</span>*<span class="number">4</span>=<span class="number">8</span>  <span class="number">3</span>*<span class="number">4</span>=<span class="number">12</span> <span class="number">4</span>*<span class="number">4</span>=<span class="number">16</span> </span><br><span class="line"><span class="number">1</span>*<span class="number">5</span>=<span class="number">5</span>  <span class="number">2</span>*<span class="number">5</span>=<span class="number">10</span> <span class="number">3</span>*<span class="number">5</span>=<span class="number">15</span> <span class="number">4</span>*<span class="number">5</span>=<span class="number">20</span> <span class="number">5</span>*<span class="number">5</span>=<span class="number">25</span> </span><br><span class="line"><span class="number">1</span>*<span class="number">6</span>=<span class="number">6</span>  <span class="number">2</span>*<span class="number">6</span>=<span class="number">12</span> <span class="number">3</span>*<span class="number">6</span>=<span class="number">18</span> <span class="number">4</span>*<span class="number">6</span>=<span class="number">24</span> <span class="number">5</span>*<span class="number">6</span>=<span class="number">30</span> <span class="number">6</span>*<span class="number">6</span>=<span class="number">36</span> </span><br><span class="line"><span class="number">1</span>*<span class="number">7</span>=<span class="number">7</span>  <span class="number">2</span>*<span class="number">7</span>=<span class="number">14</span> <span class="number">3</span>*<span class="number">7</span>=<span class="number">21</span> <span class="number">4</span>*<span class="number">7</span>=<span class="number">28</span> <span class="number">5</span>*<span class="number">7</span>=<span class="number">35</span> <span class="number">6</span>*<span class="number">7</span>=<span class="number">42</span> <span class="number">7</span>*<span class="number">7</span>=<span class="number">49</span> </span><br><span class="line"><span class="number">1</span>*<span class="number">8</span>=<span class="number">8</span>  <span class="number">2</span>*<span class="number">8</span>=<span class="number">16</span> <span class="number">3</span>*<span class="number">8</span>=<span class="number">24</span> <span class="number">4</span>*<span class="number">8</span>=<span class="number">32</span> <span class="number">5</span>*<span class="number">8</span>=<span class="number">40</span> <span class="number">6</span>*<span class="number">8</span>=<span class="number">48</span> <span class="number">7</span>*<span class="number">8</span>=<span class="number">56</span> <span class="number">8</span>*<span class="number">8</span>=<span class="number">64</span> </span><br><span class="line"><span class="number">1</span>*<span class="number">9</span>=<span class="number">9</span>  <span class="number">2</span>*<span class="number">9</span>=<span class="number">18</span> <span class="number">3</span>*<span class="number">9</span>=<span class="number">27</span> <span class="number">4</span>*<span class="number">9</span>=<span class="number">36</span> <span class="number">5</span>*<span class="number">9</span>=<span class="number">45</span> <span class="number">6</span>*<span class="number">9</span>=<span class="number">54</span> <span class="number">7</span>*<span class="number">9</span>=<span class="number">63</span> <span class="number">8</span>*<span class="number">9</span>=<span class="number">72</span> <span class="number">9</span>*<span class="number">9</span>=<span class="number">81</span> </span><br></pre></td></tr></table></figure><h3 id="百鸡百钱-问题">&quot;百鸡百钱&quot;问题<a class="header-anchor" href="#百鸡百钱-问题">#</a></h3><p>问：公鸡每只值五文钱，母鸡每只值三文钱，小鸡每三只值一文钱。现在用一百文钱买一百只鸡。问：这一百只鸡中，公鸡、母鸡、小鸡各有多少只？</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">count=<span class="number">0</span> <span class="comment">#计数</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>): <span class="comment">#公鸡数</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>): <span class="comment">#母鸡数</span></span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">300</span>): <span class="comment">#小鸡数</span></span><br><span class="line">            <span class="keyword">if</span> <span class="number">5</span>*i+<span class="number">3</span>*j+<span class="number">1</span>/<span class="number">3</span>*k==<span class="number">100</span> <span class="keyword">and</span> i+j+k==<span class="number">100</span> :</span><br><span class="line">                count+=<span class="number">1</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;第&#123;&#125;种情况:公鸡数为&#123;&#125;,母鸡数为&#123;&#125;,小鸡数为&#123;&#125;&quot;</span>.<span class="built_in">format</span>(count,i,j,k))</span><br><span class="line">                <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p><strong>输出结果:</strong></p><p>第1种情况:公鸡数为0,母鸡数为25,小鸡数为75<br>第2种情况:公鸡数为4,母鸡数为18,小鸡数为78<br>第3种情况:公鸡数为8,母鸡数为11,小鸡数为81<br>第4种情况:公鸡数为12,母鸡数为4,小鸡数为84</p><p><strong>思路：</strong></p><p>1、列出方程：设数量分别为i，j，k。</p><p>2、根据数量 ：i+j+k==100</p><p>3、根据总金额： 5<em>i+3</em>j+1/3*k==100</p><p>4、循环遍历出所有满足条件的值。</p><p>5、可以先粗略判断循环范围：公鸡5钱一只，20只就将满100钱，所以数量必定不超出20；其他类似。</p><h3 id="扔骰子游戏-P102-7">扔骰子游戏(P102.7)<a class="header-anchor" href="#扔骰子游戏-P102-7">#</a></h3><p>呆逼</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">winA = <span class="number">0</span> <span class="comment">#选手A获胜次数</span></span><br><span class="line">winB = <span class="number">0</span> <span class="comment">#选手B获胜次数</span></span><br><span class="line">win = <span class="number">0</span> <span class="comment">#平局次数</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">50</span>):</span><br><span class="line">    sumA = <span class="number">0</span> </span><br><span class="line">sumB = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">        <span class="keyword">if</span> j % <span class="number">2</span> == <span class="number">0</span>:  <span class="comment">#轮流扔</span></span><br><span class="line">            A = random.randint(<span class="number">1</span>, <span class="number">6</span>)</span><br><span class="line">            sumA += A <span class="comment">#统计5次总和</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            B = random.randint(<span class="number">1</span>, <span class="number">6</span>)</span><br><span class="line">            sumB += B</span><br><span class="line">    <span class="keyword">if</span> sumA &gt; sumB:</span><br><span class="line">        winA += <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> sumB &gt; sumA:</span><br><span class="line">        winB += <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        win += <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> winA &gt; winB:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;恭喜选手A以&#123;&#125;的胜利次数获胜!&quot;</span>.<span class="built_in">format</span>(winA))</span><br><span class="line"><span class="keyword">elif</span> winB &gt; winA:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;恭喜选手B以&#123;&#125;的胜利次数获胜!&quot;</span>.<span class="built_in">format</span>(winB))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;双方平局!&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;统计:选手A获胜次数为&#123;&#125;次,选手B获胜次数为&#123;&#125;次,平局次数为&#123;&#125;&quot;</span>.<span class="built_in">format</span>(winA, winB, win))</span><br></pre></td></tr></table></figure><h3 id="回文素数">回文素数<a class="header-anchor" href="#回文素数">#</a></h3><p>输出2-1000内所有的回文素数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="number">1001</span>):</span><br><span class="line">    count=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, i):</span><br><span class="line">        <span class="keyword">if</span> i % j != <span class="number">0</span>:</span><br><span class="line">            count+=<span class="number">1</span> <span class="comment">#计数不能整除的次数</span></span><br><span class="line">    <span class="keyword">if</span> count ==(i-<span class="number">2</span>) : <span class="comment">#当不能整除的次数为当前数减去2(本身整除一次,整除1一次),便为素数.</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">str</span>(i)[<span class="number">0</span>]==<span class="built_in">str</span>(i)[-<span class="number">1</span>]: <span class="comment">#判断是否回文</span></span><br><span class="line">            <span class="built_in">print</span>(i,end=<span class="string">&#x27; &#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong>输出结果</strong></p><p>2 3 5 7 11 101 131 151 181 191 313 353 373 383 727 757 787 797 919 929</p><h4 id="素数">素数<a class="header-anchor" href="#素数">#</a></h4><p><strong>Version 1.0</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="number">1001</span>):</span><br><span class="line">    flag=<span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, i):</span><br><span class="line">        <span class="keyword">if</span> i % j == <span class="number">0</span>:</span><br><span class="line">            flag=<span class="number">0</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> flag==<span class="number">1</span>:</span><br><span class="line">        <span class="built_in">print</span>(i,end=<span class="string">&#x27; &#x27;</span>)</span><br></pre></td></tr></table></figure><p>1、设置一个标志flag，判断2到本身之间，是否有数可被整除，有则将flag赋值为0，表示此数可被当前j整除，且不需再进行之后判断，跳出循环。</p><p>2、如没有可被整除的数，flag将不会被改变，默认为1，则输出素数i。</p><p><strong>Version 2.0</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="number">1001</span>):</span><br><span class="line">    count=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, i):</span><br><span class="line">        <span class="keyword">if</span> i % j != <span class="number">0</span>:</span><br><span class="line">            count+=<span class="number">1</span> <span class="comment">#计数不能整除的次数</span></span><br><span class="line">    <span class="keyword">if</span> count ==(i-<span class="number">2</span>) : <span class="comment">#当不能整除的次数为当前数减去2(本身整除一次,整除1一次),便为素数.</span></span><br><span class="line">        <span class="built_in">print</span>(i,end=<span class="string">&#x27; &#x27;</span>)</span><br></pre></td></tr></table></figure><p>1、根据不可被整除的次数判断，是否为素数。</p><p><strong>Version 3.0</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="number">1001</span>):</span><br><span class="line">    count=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, i):</span><br><span class="line">        <span class="keyword">if</span> i % j == <span class="number">0</span>:</span><br><span class="line">            count+=<span class="number">1</span> </span><br><span class="line">    <span class="keyword">if</span> count == <span class="number">0</span> : </span><br><span class="line">        <span class="built_in">print</span>(i,end=<span class="string">&#x27; &#x27;</span>)</span><br></pre></td></tr></table></figure><p>1、根据可被整除的次数判断，可被整除的次数只有1和本身2次。</p><p>2、但是循环遍历范围除去了1和本身，所以应为0次。</p><p>3、可在count+=1,后加break退出循环，提高效率。只是count计数的不再是可被整除的次数，而是相当于一个flag(标志)了。</p><p><strong>Version 4.0</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        i = <span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入一个整数,判断是否为素数:&quot;</span>))</span><br><span class="line">        flag = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, i):</span><br><span class="line">            <span class="keyword">if</span> i % j == <span class="number">0</span>:</span><br><span class="line">                flag = <span class="number">0</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;%d不是素数&quot;</span> % i)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> flag == <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;%d是素数&quot;</span> % i)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;输入有误，请重新输入！&quot;</span>)</span><br></pre></td></tr></table></figure><p>1、修改功能：输入判断</p><p>2、try ：except ：排除错误的输入情况。</p><p><strong>version 5.0</strong></p><p>使用列表存储展示</p><p>调用函数</p><p>动态输入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">shu</span>(<span class="params">ar=<span class="number">100</span></span>):</span><br><span class="line">    lists = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, ar):</span><br><span class="line">        flag = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, i):</span><br><span class="line">            <span class="keyword">if</span> i % j == <span class="number">0</span>:</span><br><span class="line">                flag = <span class="number">0</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> flag == <span class="number">1</span>:</span><br><span class="line">            lists.append(i)</span><br><span class="line">    <span class="built_in">print</span>(lists)</span><br><span class="line"></span><br><span class="line">c = <span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入你想得到素数的范围:&quot;</span>))</span><br><span class="line">shu(c)</span><br></pre></td></tr></table></figure><h3 id="水仙花数">水仙花数<a class="header-anchor" href="#水仙花数">#</a></h3><p>找出3位数所有的水仙花数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>,<span class="number">1000</span>):</span><br><span class="line">    <span class="keyword">if</span> (i//<span class="number">100</span>%<span class="number">10</span>)**<span class="number">3</span>+(i//<span class="number">10</span>%<span class="number">10</span>)**<span class="number">3</span>+(i%<span class="number">10</span>)**<span class="number">3</span>==i:</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><p>1、      i//100%10     表示 百位</p><p>2、      i//10%10      表示 十位</p><p>3、         i%10           表示 个位</p><p><strong>输出结果：</strong></p><p>153<br>370<br>371<br>407</p><h3 id="销售额提成（P102-10）">销售额提成（P102.10）<a class="header-anchor" href="#销售额提成（P102-10）">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">m = <span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&quot;工资查询__请输入您的销售额:&quot;</span>))</span><br><span class="line">salary = <span class="number">2000</span></span><br><span class="line"><span class="keyword">if</span> m &lt;= <span class="number">3000</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;您的工资为%.2f元&quot;</span> % salary)</span><br><span class="line"><span class="keyword">elif</span> m &gt; <span class="number">3000</span> <span class="keyword">and</span> m &lt;= <span class="number">7000</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;您的工资为%.2f元&quot;</span> % (salary+m*<span class="number">0.1</span>))</span><br><span class="line"><span class="keyword">elif</span> m &gt; <span class="number">7000</span> <span class="keyword">and</span> m &lt;= <span class="number">10000</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;您的工资为%.2f元&quot;</span> % (salary+m*<span class="number">0.15</span>))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;您的工资为%.2f元&quot;</span> % (salary + m * <span class="number">0.2</span>))</span><br></pre></td></tr></table></figure><h3 id="动态时钟">动态时钟<a class="header-anchor" href="#动态时钟">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> turtle <span class="keyword">import</span> *  <span class="comment"># 导入turtle模块</span></span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> *  <span class="comment"># 导入datetime模块</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">skip</span>(<span class="params">step</span>):</span><br><span class="line">    penup()  <span class="comment"># 抬起画笔</span></span><br><span class="line">    forward(step)  <span class="comment"># 跳跃的距离step</span></span><br><span class="line">    pendown()  <span class="comment"># 放下画笔</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 刻画时钟刻度</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">setup_clock</span>(<span class="params">radius</span>):  <span class="comment"># 时钟的大小,即半径radius</span></span><br><span class="line">    reset()</span><br><span class="line">    pensize(<span class="number">7</span>)  <span class="comment"># 画笔粗细</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">60</span>):  <span class="comment"># 刻画时钟刻度</span></span><br><span class="line">        skip(radius)  <span class="comment"># 在距离时钟圆心radius的距离开始落笔</span></span><br><span class="line">        <span class="keyword">if</span> i % <span class="number">5</span> == <span class="number">0</span>:  <span class="comment"># 每隔4个圆点</span></span><br><span class="line">            forward(<span class="number">20</span>)  <span class="comment"># 刻画一条短线</span></span><br><span class="line">            skip(-radius - <span class="number">20</span>)  <span class="comment"># 再次回到圆点</span></span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># 刻画点</span></span><br><span class="line">            dot(<span class="number">5</span>, <span class="string">&quot;pink&quot;</span>)  <span class="comment"># dot()刻画圆点,参数表示大小和颜色</span></span><br><span class="line">            skip(-radius)  <span class="comment"># 再次回到圆点</span></span><br><span class="line">        right(<span class="number">6</span>)  <span class="comment"># 向右转6度,为什么是6度?60个刻度...360/60=6</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">make_hand</span>(<span class="params">name, length</span>):</span><br><span class="line">    reset()</span><br><span class="line">    skip(-<span class="number">0.1</span> * length)  <span class="comment"># 圆点往后退0.1倍length</span></span><br><span class="line"></span><br><span class="line">    begin_poly()</span><br><span class="line">    forward(<span class="number">1.1</span> * length)  <span class="comment"># 再向前1.1倍length,刻画指针圆心前后长度的比例,1:10</span></span><br><span class="line">    end_poly()</span><br><span class="line"></span><br><span class="line">    handForm = get_poly()  <span class="comment"># 返回最后记录的多边形</span></span><br><span class="line">    register_shape(name, handForm)  <span class="comment"># 注册形状,命名为name</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">init</span>():</span><br><span class="line">    <span class="keyword">global</span> secHand, minHand, hurHand, printer  <span class="comment"># 声明全局变量,使函数内部可修改变量的值</span></span><br><span class="line">    mode(<span class="string">&quot;logo&quot;</span>)  <span class="comment"># 重置指针的初始方向,向上.</span></span><br><span class="line">    <span class="comment"># 秒针</span></span><br><span class="line">    secHand = Turtle()  <span class="comment"># 建立Turtle对象</span></span><br><span class="line">    make_hand(<span class="string">&quot;secHand&quot;</span>, <span class="number">130</span>)  <span class="comment"># 参数:名字和长度</span></span><br><span class="line">    secHand.shape(<span class="string">&quot;secHand&quot;</span>)  <span class="comment"># 见下面</span></span><br><span class="line">    <span class="comment"># 分针</span></span><br><span class="line">    minHand = Turtle()</span><br><span class="line">    make_hand(<span class="string">&quot;minHand&quot;</span>, <span class="number">125</span>)</span><br><span class="line">    minHand.shape(<span class="string">&quot;minHand&quot;</span>)</span><br><span class="line">    <span class="comment"># 时针</span></span><br><span class="line">    hurHand = Turtle()</span><br><span class="line">    make_hand(<span class="string">&quot;hurHand&quot;</span>, <span class="number">90</span>)</span><br><span class="line">    hurHand.shape(<span class="string">&quot;hurHand&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> hand <span class="keyword">in</span> secHand, minHand, hurHand:</span><br><span class="line">        hand.shapesize(<span class="number">1</span>, <span class="number">1</span>, <span class="number">3</span>)  <span class="comment"># 调整指针的粗细</span></span><br><span class="line">        hand.speed(<span class="number">0</span>)  <span class="comment"># 调整指针速度</span></span><br><span class="line">    <span class="comment"># 建立输出文字的打印对象</span></span><br><span class="line">    printer = Turtle()</span><br><span class="line">    printer.hideturtle()  <span class="comment"># 使海龟不可见。 当你绘制复杂图形时这是个好主意，因为隐藏海龟可显着加快绘制速度。</span></span><br><span class="line">    printer.penup()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 返回当前的星期</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">week</span>(<span class="params">t</span>):</span><br><span class="line">    week = [<span class="string">&quot;星期一&quot;</span>, <span class="string">&quot;星期二&quot;</span>, <span class="string">&quot;星期三&quot;</span>, <span class="string">&quot;星期四&quot;</span>, <span class="string">&quot;星期五&quot;</span>, <span class="string">&quot;星期六&quot;</span>, <span class="string">&quot;星期日&quot;</span>]  <span class="comment"># 创建一个列表</span></span><br><span class="line">    <span class="keyword">return</span> week[t.weekday()]  <span class="comment"># t.weekday()返回一个0-6的序列,0为周一,6为周日</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 刻画显示的时间格式</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">day</span>(<span class="params">t</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;%s %d %d %d:%d&quot;</span> % (t.year, t.month, t.day, t.hour, t.minute)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tick</span>():</span><br><span class="line">    t = datetime.today()  <span class="comment"># 获取当前本地时间</span></span><br><span class="line">    second = t.second + t.microsecond * <span class="number">0.000001</span>  <span class="comment"># 微秒换算为秒，比例为1:0.000001。</span></span><br><span class="line">    minute = t.minute + t.second / <span class="number">60.0</span>  <span class="comment"># 当前分钟数，例：当前2分12秒，应换算为2.2分</span></span><br><span class="line">    hour = t.hour + t.minute / <span class="number">60</span>  <span class="comment"># 同理</span></span><br><span class="line"></span><br><span class="line">    secHand.setheading(second * <span class="number">6</span>)  <span class="comment"># 为指针设置方向</span></span><br><span class="line">    minHand.setheading(minute * <span class="number">6</span>)  <span class="comment"># 分钟和秒钟刻度一圈都有60个刻度，所以每个度数应为360/60==6度</span></span><br><span class="line">    hurHand.setheading(hour * <span class="number">30</span>)  <span class="comment"># 而时针的刻度是12个,360/12==30度</span></span><br><span class="line">    tracer(<span class="literal">False</span>)  <span class="comment"># 隐藏绘图，直接显示绘画结果</span></span><br><span class="line"></span><br><span class="line">    printer.fd(<span class="number">70</span>)  <span class="comment"># 向前移动指定的距离,插入星期显示</span></span><br><span class="line">    printer.write(week(t), align=<span class="string">&quot;center&quot;</span>, font=(<span class="string">&quot;Courier&quot;</span>, <span class="number">14</span>, <span class="string">&quot;bold&quot;</span>))</span><br><span class="line"></span><br><span class="line">    printer.back(<span class="number">130</span>)  <span class="comment"># 向后移动指定的距离,插入日期显示</span></span><br><span class="line">    printer.write(day(t), align=<span class="string">&quot;center&quot;</span>, font=(<span class="string">&quot;Courier&quot;</span>, <span class="number">14</span>, <span class="string">&quot;bold&quot;</span>))</span><br><span class="line"></span><br><span class="line">    printer.home()  <span class="comment"># 将画笔移动到原点，即坐标(0,0),初始方向与mode()设置的模式不同而不同</span></span><br><span class="line">    tracer(<span class="literal">True</span>)  <span class="comment"># 重新打开绘图过程</span></span><br><span class="line">    ontimer(tick, <span class="number">100</span>)  <span class="comment"># 100毫秒后调用 tick()函数,1秒等于1000毫秒</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 控制逻辑</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    tracer(<span class="literal">False</span>)  <span class="comment"># 关闭画笔动画</span></span><br><span class="line">    init()  <span class="comment"># 初始化各个对象</span></span><br><span class="line">    setup_clock(<span class="number">200</span>)  <span class="comment"># 画时钟表框</span></span><br><span class="line">    tracer(<span class="literal">True</span>)  <span class="comment"># 开启动画</span></span><br><span class="line">    tick()  <span class="comment"># 获取当前本地日期,实时显示</span></span><br><span class="line">    done()  <span class="comment"># 暂停程序，停止画笔绘制，但绘图窗体不关闭，直到用户关闭Python Turtle图形化窗口为止</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用函数</span></span><br><span class="line">main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>所用到的部分函数:</strong></p><h4 id="mode">mode()<a class="header-anchor" href="#mode">#</a></h4><p><img src="http://qiniu.yujing.fit/typora_img/image-20210911213839271.png" alt="image-20210911213839271"></p><h4 id="register-shape">register_shape()<a class="header-anchor" href="#register-shape">#</a></h4><p><img src="http://qiniu.yujing.fit/typora_img/image-20210911214343983.png" alt="image-20210911214343983"></p><h4 id="shape">shape()<a class="header-anchor" href="#shape">#</a></h4><p><img src="http://qiniu.yujing.fit/typora_img/image-20210911214423446.png" alt="image-20210911214423446"></p><h4 id="ploy">_ploy()<a class="header-anchor" href="#ploy">#</a></h4><p><img src="http://qiniu.yujing.fit/typora_img/image-20210911214614373.png" alt="image-20210911214614373"></p><h4 id="reset">reset()<a class="header-anchor" href="#reset">#</a></h4><p><img src="http://qiniu.yujing.fit/typora_img/image-20210911214911381.png" alt="image-20210911214911381"></p><h4 id="write">write()<a class="header-anchor" href="#write">#</a></h4><p><img src="http://qiniu.yujing.fit/typora_img/image-20210911214942734.png" alt="image-20210911214942734"></p><h4 id="class-turtle-Turtle"><em>class</em> turtle.Turtle<a class="header-anchor" href="#class-turtle-Turtle">#</a></h4><p>RawTurtle 的子类，具有相同的接口，但其绘图场所为默认的 <a href="https://docs.python.org/zh-cn/3/library/turtle.html?highlight=turtle#turtle.Screen"><code>Screen</code></a> 类对象，在首次使用时自动创建。</p><p><strong>效果图</strong></p><p><img src="http://qiniu.yujing.fit/typora_img/image-20210910142922093.png" alt="image-20210910142922093"></p><h3 id="随机6位验证码">随机6位验证码<a class="header-anchor" href="#随机6位验证码">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random <span class="keyword">as</span> r</span><br><span class="line"></span><br><span class="line">code = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):  <span class="comment"># 6位验证码</span></span><br><span class="line">    state = r.randint(<span class="number">0</span>, <span class="number">2</span>)  <span class="comment"># 随机大小写字母和数字</span></span><br><span class="line">    <span class="keyword">if</span> state == <span class="number">0</span>:</span><br><span class="line">        code.append(<span class="built_in">chr</span>(r.randint(<span class="number">48</span>, <span class="number">57</span>)))  <span class="comment"># chr()转换为字符</span></span><br><span class="line">    <span class="keyword">elif</span> state == <span class="number">1</span>:</span><br><span class="line">        code.append(<span class="built_in">chr</span>(r.randint(<span class="number">65</span>, <span class="number">90</span>)))</span><br><span class="line">    <span class="keyword">elif</span> state == <span class="number">2</span>:</span><br><span class="line">        code.append(<span class="built_in">chr</span>(r.randint(<span class="number">97</span>, <span class="number">122</span>)))</span><br><span class="line"></span><br><span class="line">s = <span class="string">&quot;&quot;</span>.join(code)  <span class="comment"># 以&quot;&quot;(即空)把字符连接成字符串</span></span><br><span class="line"><span class="built_in">print</span>(s)</span><br></pre></td></tr></table></figure><p>1、需先定义一个空列表</p><p>2、根据随机的state，判断列表是数字、大写字母、小写字母。</p><p>3、append（） 向列表添加元素</p><p>4、chr（） 转换为字符             str（）转换为字符串    不一样</p><p>5、&quot; &quot;.join()    以空连接成字符串</p><h3 id="字符串反转">字符串反转<a class="header-anchor" href="#字符串反转">#</a></h3><p>输入一个字符串,将其反转后输出.</p><p>例:输入     abcde</p><p>输出       edcba</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="built_in">input</span>(<span class="string">&quot;请输入一个字符串:&quot;</span>)</span><br><span class="line">ls = <span class="built_in">list</span>(s)  <span class="comment">#转换为列表</span></span><br><span class="line">ls.reverse()  <span class="comment">#将其反转</span></span><br><span class="line">sr = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s)): <span class="comment">#循环连接成字符串</span></span><br><span class="line">    sr += ls[i]</span><br><span class="line"><span class="built_in">print</span>(sr)</span><br></pre></td></tr></table></figure><p>或者,换一种连接字符串的方式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="built_in">input</span>(<span class="string">&quot;请输入一个字符串:&quot;</span>)</span><br><span class="line">ls = <span class="built_in">list</span>(s)</span><br><span class="line">ls.reverse()</span><br><span class="line">sr = <span class="string">&quot;&quot;</span>.join(ls)</span><br><span class="line"><span class="built_in">print</span>(sr)</span><br></pre></td></tr></table></figure><h4 id="join-连接用法实例">join 连接用法实例<a class="header-anchor" href="#join-连接用法实例">#</a></h4><p>利用字符串的函数 join。这个函数接受一个列表或元组，然后用字符串依次连接列表中每一个元素：</p><p><strong>注意</strong>:列表中含有int类型将报错.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; list1 = [<span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;n&#x27;</span>]</span><br><span class="line">&gt;&gt; <span class="string">&quot;&quot;</span>.join(list1)</span><br><span class="line">&gt;&gt; <span class="string">&#x27;Python&#x27;</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; tuple1 = (<span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;n&#x27;</span>)</span><br><span class="line">&gt;&gt; <span class="string">&quot;&quot;</span>.join(tuple1)</span><br><span class="line">&gt;&gt; <span class="string">&#x27;Python&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>每个字符之间加 “|”</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list1 = [<span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;t&#x27;</span>, <span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;o&#x27;</span>, <span class="string">&#x27;n&#x27;</span>]</span><br><span class="line"><span class="string">&quot;|&quot;</span>.join(list1)</span><br><span class="line"><span class="string">&#x27;P|y|t|h|o|n</span></span><br></pre></td></tr></table></figure><h3 id="进制转换">进制转换<a class="header-anchor" href="#进制转换">#</a></h3><h4 id="输入十进制-输出其二进制-八进制和十六进制">输入十进制,输出其二进制,八进制和十六进制<a class="header-anchor" href="#输入十进制-输出其二进制-八进制和十六进制">#</a></h4><p>以…算出二进制,或用python内置函数bin()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">num = <span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入一个数字:&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;八进制为:%o&quot;</span> % num)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;十六进制为:%X&quot;</span> % num)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;转换为二进制为:%s&quot;</span> % <span class="built_in">bin</span>(num))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;转换为八进制为：&quot;</span>, <span class="built_in">oct</span>(num))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;转换为十六进制为：&quot;</span>, <span class="built_in">hex</span>(num))</span><br><span class="line">b = []  <span class="comment"># 存储余数</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:  <span class="comment"># 一直循环，商为0时利用break退出循环</span></span><br><span class="line">    s = num // <span class="number">2</span>  <span class="comment"># 商</span></span><br><span class="line">    y = num % <span class="number">2</span>  <span class="comment"># 余数</span></span><br><span class="line">    b = b + [y]  <span class="comment"># 每一个余数存储到b中</span></span><br><span class="line">    <span class="keyword">if</span> s == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">break</span>  <span class="comment"># 余数为0时结束循环</span></span><br><span class="line">    num = s</span><br><span class="line">b.reverse()  <span class="comment"># 使b中的元素反向排列</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(b)):  <span class="comment"># 将列表中的元素转为字符类型</span></span><br><span class="line">    b[i] = <span class="built_in">str</span>(b[i])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;二进制为:%s&quot;</span> % <span class="string">&quot;&quot;</span>.join(b))</span><br></pre></td></tr></table></figure><h3 id="获取时间及星期">获取时间及星期<a class="header-anchor" href="#获取时间及星期">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(datetime.today().strftime(<span class="string">&quot;%H:%M:%S %Y-%m-%d&quot;</span>))</span><br><span class="line">week = [<span class="string">&quot;星期一&quot;</span>, <span class="string">&quot;星期二&quot;</span>, <span class="string">&quot;星期三&quot;</span>, <span class="string">&quot;星期四&quot;</span>, <span class="string">&quot;星期五&quot;</span>, <span class="string">&quot;星期六&quot;</span>, <span class="string">&quot;星期日&quot;</span>]</span><br><span class="line"><span class="built_in">print</span>(week[datetime.today().weekday()])</span><br></pre></td></tr></table></figure><p><img src="img/image-20210927225039607.png" alt="image-20210927225039607"></p><h3 id="分类计数输入的字符串">分类计数输入的字符串<a class="header-anchor" href="#分类计数输入的字符串">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span> = <span class="built_in">input</span>(<span class="string">&quot;随便输点吧：&quot;</span>)</span><br><span class="line">ls = <span class="built_in">list</span>(<span class="built_in">str</span>)</span><br><span class="line">nums = <span class="number">0</span></span><br><span class="line">chars = <span class="number">0</span></span><br><span class="line">kong = <span class="number">0</span></span><br><span class="line">tems = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> ls:</span><br><span class="line">    a = <span class="built_in">ord</span>(s)</span><br><span class="line">    <span class="keyword">if</span> a &gt;= <span class="number">48</span> <span class="keyword">and</span> a &lt;= <span class="number">57</span>:</span><br><span class="line">        nums += <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> a &gt;= <span class="number">65</span> <span class="keyword">and</span> a &lt;= <span class="number">90</span> <span class="keyword">or</span> a&gt;=<span class="number">97</span> <span class="keyword">and</span> a &lt;=<span class="number">122</span>:</span><br><span class="line">        chars += <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> a == <span class="number">32</span>:</span><br><span class="line">        kong += <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        tems += <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(ls)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;数字个数：%d，字母个数:%d，空格数：%d，其他字符：%d&quot;</span> % (nums, chars, kong, tems))</span><br></pre></td></tr></table></figure><h3 id="abs-函数">abs()函数<a class="header-anchor" href="#abs-函数">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle <span class="keyword">as</span> t</span><br><span class="line">t.forward(<span class="number">1</span>)</span><br><span class="line">t.lt(<span class="number">90</span>)</span><br><span class="line">t.fd(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(t.pos())</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">abs</span>(t.pos()))</span><br></pre></td></tr></table></figure><p>输出:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(1.00,1.00)</span><br><span class="line">1.4142135623730951</span><br></pre></td></tr></table></figure><h3 id="进步">进步<a class="header-anchor" href="#进步">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">jbtb</span>(<span class="params">j, t</span>):</span><br><span class="line">    <span class="built_in">min</span> = <span class="number">10</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">366</span>):  <span class="comment"># 进步i天</span></span><br><span class="line">        A = fabs(<span class="built_in">pow</span>((<span class="number">1</span> + j), i) * <span class="built_in">pow</span>((<span class="number">1</span> - t), (<span class="number">365</span> - i)) - <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> A &lt; <span class="built_in">min</span>:</span><br><span class="line">            <span class="built_in">min</span> = A</span><br><span class="line">            x = i</span><br><span class="line">            y = <span class="number">365</span> - i</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;当进步%d天,退步%d天时,最接近&quot;</span> % (x, y))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;最接近的值为&#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">pow</span>((<span class="number">1</span> + <span class="number">0.02</span>), x) * <span class="built_in">pow</span>((<span class="number">1</span> - <span class="number">0.01</span>), y)))</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">min</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = <span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入进步加的:&quot;</span>))</span><br><span class="line">b = <span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入退步加的:&quot;</span>))</span><br><span class="line"></span><br><span class="line">jbtb(a, b)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>输出:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">请输入进步加的:0.02</span><br><span class="line">请输入退步加的:0.01</span><br><span class="line">当进步123天,退步242天时,最接近</span><br><span class="line">最接近的值为1.003548160754847</span><br><span class="line">0.003548160754847096</span><br></pre></td></tr></table></figure><h3 id="列表的升序与降序">列表的升序与降序<a class="header-anchor" href="#列表的升序与降序">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s = [<span class="number">5</span>, <span class="number">3</span>, <span class="number">18</span>, <span class="number">9</span>,<span class="number">11</span>]</span><br><span class="line">s.sort()</span><br><span class="line"><span class="built_in">print</span>(s)</span><br><span class="line">s.reverse()</span><br><span class="line"><span class="built_in">print</span>(s)</span><br></pre></td></tr></table></figure><p>输出:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[3, 5, 9, 11, 18]</span><br><span class="line">[18, 11, 9, 5, 3]</span><br></pre></td></tr></table></figure><h3 id="递归与阶乘">递归与阶乘<a class="header-anchor" href="#递归与阶乘">#</a></h3><p>递归：  例：  5！  （5的递归）</p><p>5！=1 * 2 * 3 * 4 * 5</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sums=<span class="number">1</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">computation</span>(<span class="params">degital</span>):</span><br><span class="line">    <span class="keyword">global</span> sums</span><br><span class="line">    sums =sums * degital</span><br><span class="line">    <span class="keyword">if</span> degital == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> sums</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> computation(degital - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">c=<span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入一个数,计算阶乘:&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(computation(c))</span><br></pre></td></tr></table></figure><p><strong>想明白!!!</strong></p><p>当 为 1的时候,return 1。</p><p>当递归到1的时候，返回1于之一乘，得到结果。否则会无限循环下去。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">computation</span>(<span class="params">degital</span>):</span><br><span class="line">    <span class="keyword">if</span> degital == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> computation(degital - <span class="number">1</span>) * degital</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">c = <span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入一个数,计算阶乘:&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(computation(c))</span><br></pre></td></tr></table></figure><h3 id="递归与斐波那契数列">递归与斐波那契数列<a class="header-anchor" href="#递归与斐波那契数列">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">rabbit</span>(<span class="params">month</span>):</span><br><span class="line">    <span class="keyword">if</span> month &lt;= <span class="number">1</span>:  <span class="comment">#1或0时，返回1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> rabbit(month - <span class="number">1</span>) + rabbit(month - <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">lists = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    lists.append(rabbit(i))</span><br><span class="line"><span class="built_in">print</span>(lists)</span><br></pre></td></tr></table></figure><p>输出:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[1, 1, 2, 3, 5, 8, 13, 21, 34, 55]</span><br></pre></td></tr></table></figure><h3 id="验证码生成">验证码生成<a class="header-anchor" href="#验证码生成">#</a></h3><p>增加要求:</p><p>1、首位不能为数字</p><p>2、必须同时含有小写字母、大写字母和数字</p><p>思路:循环生成每位验证码,第一次循环即是首位,让其从大写字母和小写字母中选一.</p><p>同时拥有:可以随机生成出验证码后,给予判断,是否满足条件,满足输出,不满足再重新调用.直到满足为止.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">drawCode</span>():</span><br><span class="line">    count1 = <span class="number">0</span></span><br><span class="line">    count2 = <span class="number">0</span></span><br><span class="line">    count3 = <span class="number">0</span></span><br><span class="line">    codeList = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">            state = randint(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">if</span> state == <span class="number">1</span>:</span><br><span class="line">                count1 += <span class="number">1</span></span><br><span class="line">                f = randint(<span class="number">65</span>, <span class="number">90</span>)</span><br><span class="line">                A = <span class="built_in">chr</span>(f)</span><br><span class="line">                codeList.append(A)</span><br><span class="line">            <span class="keyword">elif</span> state == <span class="number">2</span>:</span><br><span class="line">                count2 += <span class="number">1</span></span><br><span class="line">                s = randint(<span class="number">97</span>, <span class="number">122</span>)</span><br><span class="line">                a = <span class="built_in">chr</span>(s)</span><br><span class="line">                codeList.append(a)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            state = randint(<span class="number">1</span>, <span class="number">3</span>)</span><br><span class="line">            <span class="keyword">if</span> state == <span class="number">1</span>:</span><br><span class="line">                count1 += <span class="number">1</span></span><br><span class="line">                f = randint(<span class="number">65</span>, <span class="number">90</span>)</span><br><span class="line">                A = <span class="built_in">chr</span>(f)</span><br><span class="line">                codeList.append(A)</span><br><span class="line">            <span class="keyword">elif</span> state == <span class="number">2</span>:</span><br><span class="line">                count2 += <span class="number">1</span></span><br><span class="line">                s = randint(<span class="number">97</span>, <span class="number">122</span>)</span><br><span class="line">                a = <span class="built_in">chr</span>(s)</span><br><span class="line">                codeList.append(a)</span><br><span class="line">            <span class="keyword">elif</span> state == <span class="number">3</span>:</span><br><span class="line">                count3 += <span class="number">1</span></span><br><span class="line">                t = randint(<span class="number">0</span>, <span class="number">9</span>)</span><br><span class="line">                num = <span class="built_in">str</span>(t)</span><br><span class="line">                codeList.append(num)</span><br><span class="line">    <span class="keyword">if</span> count1 == <span class="number">0</span> <span class="keyword">or</span> count2 == <span class="number">0</span> <span class="keyword">or</span> count3 == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">list</span>.clear(codeList)</span><br><span class="line">        drawCode()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        CheckCode = <span class="string">&quot;&quot;</span>.join(codeList)</span><br><span class="line">        <span class="built_in">print</span>(CheckCode)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    drawCode()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="读取文件计词-jieba中文模块">读取文件计词(jieba中文模块)<a class="header-anchor" href="#读取文件计词-jieba中文模块">#</a></h3><p><strong>三国演义</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"></span><br><span class="line">txt = <span class="built_in">open</span>(<span class="string">r&quot;C:\Users\Administrator\Desktop\三国演义.txt&quot;</span>, <span class="string">&quot;rb&quot;</span>).read()</span><br><span class="line">excludes = &#123;<span class="string">&quot;却说&quot;</span>, <span class="string">&quot;将军&quot;</span>, <span class="string">&quot;二人&quot;</span>, <span class="string">&quot;商议&quot;</span>, <span class="string">&quot;不可&quot;</span>&#125;</span><br><span class="line">words = jieba.lcut(txt)</span><br><span class="line">counts = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> words:</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(word) == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">elif</span> word == <span class="string">&quot;诸葛亮&quot;</span>:</span><br><span class="line">        rword = <span class="string">&quot;孔明&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> word == <span class="string">&quot;曹贼&quot;</span>:</span><br><span class="line">        rword = <span class="string">&quot;曹操&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        rword = word</span><br><span class="line">    counts[rword] = counts.get(rword, <span class="number">0</span>) + <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> excludes:</span><br><span class="line">    <span class="keyword">del</span> counts[word]</span><br><span class="line"></span><br><span class="line">items = <span class="built_in">list</span>(counts.items())</span><br><span class="line">items.sort(key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>], reverse=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>):</span><br><span class="line">    word, count = items[i]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;&#123;0:5&#125;&#123;1:5&#125;次&quot;</span>.<span class="built_in">format</span>(word, count))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>水浒传</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"></span><br><span class="line">txt = <span class="built_in">open</span>(<span class="string">r&quot;C:\Users\Administrator\Desktop\水浒传.txt&quot;</span>, <span class="string">&quot;rb&quot;</span>).read()</span><br><span class="line">excludes = &#123;<span class="string">&quot;两个&quot;</span>, <span class="string">&quot;一个&quot;</span>, <span class="string">&quot;只见&quot;</span>, <span class="string">&quot;如何&quot;</span>, <span class="string">&quot;那里&quot;</span>, <span class="string">&quot;哥哥&quot;</span>, <span class="string">&quot;说道&quot;</span>, <span class="string">&quot;众人&quot;</span>, <span class="string">&quot;头领&quot;</span>, <span class="string">&quot;这里&quot;</span>, <span class="string">&quot;兄弟&quot;</span>, <span class="string">&quot;出来&quot;</span>, <span class="string">&quot;小人&quot;</span>, <span class="string">&quot;这个&quot;</span>, <span class="string">&quot;今日&quot;</span>&#125;</span><br><span class="line">words = jieba.lcut(txt)</span><br><span class="line">counts = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> words:</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(word) == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">elif</span> word == <span class="string">&quot;黑鬼&quot;</span>:</span><br><span class="line">        rword = <span class="string">&quot;李逵&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        rword = word</span><br><span class="line">    counts[rword] = counts.get(rword, <span class="number">0</span>) + <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> excludes:</span><br><span class="line">    <span class="keyword">del</span> counts[word]</span><br><span class="line"></span><br><span class="line">items = <span class="built_in">list</span>(counts.items())</span><br><span class="line">items.sort(key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>], reverse=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">108</span>):</span><br><span class="line">    word, count = items[i]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;&#123;0:5&#125;&#123;1:5&#125;次&quot;</span>.<span class="built_in">format</span>(word, count))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="字典操作">字典操作<a class="header-anchor" href="#字典操作">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">dict_demo = &#123;<span class="string">&quot;k1&quot;</span>: <span class="string">&quot;v1&quot;</span>, <span class="string">&quot;k2&quot;</span>: <span class="string">&quot;v2&quot;</span>, <span class="string">&quot;k3&quot;</span>: <span class="string">&quot;v3&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(dict_demo.keys())  //获取所有键</span><br><span class="line"><span class="built_in">print</span>(dict_demo.values())  //获取所有值</span><br><span class="line"><span class="built_in">print</span>(dict_demo.items())  //获取所有键值</span><br><span class="line">dict_demo[<span class="string">&quot;k4&quot;</span>] = <span class="string">&quot;v4&quot;</span>  //添加 k4 = v4</span><br><span class="line">dict_demo[<span class="string">&quot;k5&quot;</span>] = <span class="string">&quot;v6&quot;</span></span><br><span class="line"><span class="built_in">print</span>(dict_demo.items())  </span><br><span class="line">dict_demo[<span class="string">&quot;k5&quot;</span>] = <span class="string">&quot;v5&quot;</span>  //将键为k5的值更改为v5</span><br><span class="line"><span class="built_in">print</span>(dict_demo.items())  </span><br><span class="line"><span class="built_in">print</span>(dict_demo.clear())  //清空字典</span><br></pre></td></tr></table></figure><h3 id="删除列表中重复的值">删除列表中重复的值<a class="header-anchor" href="#删除列表中重复的值">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random <span class="keyword">as</span> r</span><br><span class="line"></span><br><span class="line">N_list = []</span><br><span class="line">N = <span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入N(小于1000):&quot;</span>))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(N):</span><br><span class="line">    N_list.append(r.randint(<span class="number">1</span>, <span class="number">1000</span>))</span><br><span class="line">N_list.sort()</span><br><span class="line"><span class="built_in">print</span>(N_list)</span><br><span class="line">L_list = []</span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>):</span><br><span class="line">    <span class="keyword">if</span> n <span class="keyword">in</span> N_list:</span><br><span class="line">        L_list.append(n)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(L_list)</span><br></pre></td></tr></table></figure><h3 id="数字转换为汉字字符">数字转换为汉字字符<a class="header-anchor" href="#数字转换为汉字字符">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">num = <span class="built_in">input</span>(<span class="string">&quot;输入数字：&quot;</span>)</span><br><span class="line"></span><br><span class="line">n_List = <span class="built_in">list</span>(num)</span><br><span class="line">rn_List = []</span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> n_List:</span><br><span class="line">    <span class="keyword">if</span> n == <span class="string">&quot;1&quot;</span>:</span><br><span class="line">        rn = <span class="string">&quot;壹&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> n == <span class="string">&quot;2&quot;</span>:</span><br><span class="line">        rn = <span class="string">&quot;贰&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> n == <span class="string">&quot;3&quot;</span>:</span><br><span class="line">        rn = <span class="string">&quot;三&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> n == <span class="string">&quot;4&quot;</span>:</span><br><span class="line">        rn = <span class="string">&quot;肆&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> n == <span class="string">&quot;5&quot;</span>:</span><br><span class="line">        rn = <span class="string">&quot;伍&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> n == <span class="string">&quot;6&quot;</span>:</span><br><span class="line">        rn = <span class="string">&quot;六&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> n == <span class="string">&quot;7&quot;</span>:</span><br><span class="line">        rn = <span class="string">&quot;七&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> n == <span class="string">&quot;8&quot;</span>:</span><br><span class="line">        rn = <span class="string">&quot;八&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> n == <span class="string">&quot;9&quot;</span>:</span><br><span class="line">        rn = <span class="string">&quot;九&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> n == <span class="string">&quot;.&quot;</span>:</span><br><span class="line">        rn = <span class="string">&quot;点&quot;</span></span><br><span class="line">    rn_List.append(rn)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&quot;</span>.join(rn_List))</span><br><span class="line"></span><br><span class="line">//输入数字：<span class="number">1.23</span></span><br><span class="line">//壹点贰三</span><br></pre></td></tr></table></figure><h3 id="随机生成8个0-10之间不相同的数">随机生成8个0~10之间不相同的数<a class="header-anchor" href="#随机生成8个0-10之间不相同的数">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random <span class="keyword">as</span> r</span><br><span class="line"></span><br><span class="line">N_List = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rom</span>():</span><br><span class="line">    N = r.randint(<span class="number">0</span>, <span class="number">10</span>)</span><br><span class="line">    <span class="keyword">if</span> N <span class="keyword">in</span> N_List:</span><br><span class="line">        rom()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        N_List.append(N)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">    rom()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(N_List)</span><br><span class="line"></span><br><span class="line">//[<span class="number">8</span>, <span class="number">10</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">0</span>]</span><br></pre></td></tr></table></figure><h2 id="游戏模块">游戏模块<a class="header-anchor" href="#游戏模块">#</a></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"></span><br><span class="line"><span class="comment"># 窗口宽高</span></span><br><span class="line">WINWIDTH = <span class="number">640</span></span><br><span class="line">WINHEIGHT = <span class="number">480</span></span><br><span class="line"><span class="comment"># 颜色设置</span></span><br><span class="line">DARKTURQUOISE = (<span class="number">3</span>, <span class="number">54</span>, <span class="number">73</span>)</span><br><span class="line">YELLOW = (<span class="number">255</span>, <span class="number">255</span>, <span class="number">193</span>)</span><br><span class="line">GRAY = (<span class="number">128</span>, <span class="number">128</span>, <span class="number">128</span>)</span><br><span class="line"><span class="comment"># 颜色变量</span></span><br><span class="line">BGCOLOR = DARKTURQUOISE</span><br><span class="line">MSGCOLOR = DARKTURQUOISE</span><br><span class="line">MSGBGCOLOR = YELLOW</span><br><span class="line">BTCOLOR = YELLOW</span><br><span class="line">BTTEXTCOLOR = GRAY</span><br><span class="line"><span class="comment"># 初始化帧率</span></span><br><span class="line">FPS = <span class="number">60</span></span><br><span class="line"><span class="comment"># 定义矩形边长</span></span><br><span class="line">BLOCKSIZE = <span class="number">60</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    pygame.init()  <span class="comment"># 初始化模块</span></span><br><span class="line">    WINSET = pygame.display.set_mode((WINWIDTH, WINHEIGHT))  <span class="comment"># 创建窗体</span></span><br><span class="line">    WINSET.fill(BGCOLOR)  <span class="comment"># 填充颜色</span></span><br><span class="line">    pygame.display.set_caption(<span class="string">&#x27;数字推盘&#x27;</span>)  <span class="comment"># 设置标题</span></span><br><span class="line"></span><br><span class="line">    image = pygame.image.load(<span class="string">&#x27;bg1.jpg&#x27;</span>)  <span class="comment"># 加载图片</span></span><br><span class="line">    WINSET.blit(image, (<span class="number">0</span>, <span class="number">0</span>))  <span class="comment"># 绘制图片</span></span><br><span class="line"></span><br><span class="line">    BASICFONT = pygame.font.Font(<span class="string">&#x27;STKAITI.TTF&#x27;</span>, <span class="number">25</span>)  <span class="comment"># 创建字体对象</span></span><br><span class="line">    msgSurf = BASICFONT.render(<span class="string">&#x27;初始化。。。&#x27;</span>, <span class="literal">True</span>, MSGCOLOR, MSGBGCOLOR)  <span class="comment"># 渲染</span></span><br><span class="line">    WINSET.blit(msgSurf, (<span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">    autoSurf = BASICFONT.render(<span class="string">&#x27;自动&#x27;</span>, <span class="literal">True</span>, BTTEXTCOLOR, BTCOLOR)</span><br><span class="line">    autoRect = autoSurf.get_rect()  <span class="comment"># 获取矩形属性</span></span><br><span class="line">    autoRect.x = WINWIDTH - autoRect.width - <span class="number">10</span>  <span class="comment"># 横坐标</span></span><br><span class="line">    autoRect.y = WINHEIGHT - autoRect.height - <span class="number">10</span>  <span class="comment"># 纵坐标</span></span><br><span class="line">    WINSET.blit(autoSurf, autoRect)  <span class="comment"># 绘制字体</span></span><br><span class="line">    <span class="comment"># 绘制矩形</span></span><br><span class="line">    blockRect = pygame.Rect(<span class="number">0.5</span> * (WINWIDTH - BLOCKSIZE), <span class="number">0.5</span> * (WINHEIGHT - BLOCKSIZE), BLOCKSIZE, BLOCKSIZE)</span><br><span class="line">    pygame.draw.rect(WINSET, BTCOLOR, blockRect)</span><br><span class="line">    <span class="comment"># 绘制数字</span></span><br><span class="line">    numSurf = BASICFONT.render(<span class="string">&#x27;5&#x27;</span>, <span class="literal">True</span>, BTTEXTCOLOR, BTCOLOR)</span><br><span class="line">    numRect = numSurf.get_rect()</span><br><span class="line">    numRect.x = blockRect.x + <span class="number">0.5</span> * (BLOCKSIZE - numRect.width)</span><br><span class="line">    numRect.y = blockRect.y + <span class="number">0.5</span> * (BLOCKSIZE - numRect.height)</span><br><span class="line"></span><br><span class="line">    baseSurf = WINSET.copy()  <span class="comment"># 背景</span></span><br><span class="line">    FPSCLOCK = pygame.time.Clock()  <span class="comment"># 创建Clock对象</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, BLOCKSIZE, <span class="number">2</span>):</span><br><span class="line">        FPSCLOCK.tick(FPS)  <span class="comment"># 设置帧率</span></span><br><span class="line">        pygame.draw.rect(WINSET, BTCOLOR, blockRect)</span><br><span class="line">        WINSET.blit(numSurf, numRect)</span><br><span class="line"></span><br><span class="line">        pygame.display.update()  <span class="comment"># 窗口刷新</span></span><br><span class="line">        blockRect.x += <span class="number">10</span>  <span class="comment"># 修改坐标,让其向右移动</span></span><br><span class="line">        numRect.x += <span class="number">10</span></span><br><span class="line">        WINSET.blit(baseSurf, (<span class="number">0</span>, <span class="number">0</span>))  <span class="comment"># 备份baseSurf覆盖WINSET</span></span><br><span class="line"></span><br><span class="line">    pygame.quit()  <span class="comment"># 模块卸载</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="测试版10-15-23-02">测试版10/15/23/02<a class="header-anchor" href="#测试版10-15-23-02">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame, random, sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pygame.<span class="built_in">locals</span> <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> define <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pygame <span class="keyword">import</span> K_ESCAPE, KEYUP, QUIT, MOUSEBUTTONUP</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化窗口宽高</span></span><br><span class="line">WINWIDTH = <span class="number">640</span></span><br><span class="line">WINHEIGHT = <span class="number">480</span></span><br><span class="line"><span class="comment"># 初始化推盘行列和空格</span></span><br><span class="line">ROW = <span class="number">3</span></span><br><span class="line">COL = <span class="number">3</span></span><br><span class="line">BLANK = <span class="literal">None</span></span><br><span class="line"><span class="comment"># 颜色预设</span></span><br><span class="line">DARKGRAY = (<span class="number">60</span>, <span class="number">60</span>, <span class="number">60</span>)</span><br><span class="line">WHITE = (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>)</span><br><span class="line">YELLOW = (<span class="number">255</span>, <span class="number">255</span>, <span class="number">193</span>)</span><br><span class="line">GRAY = (<span class="number">128</span>, <span class="number">128</span>, <span class="number">128</span>)</span><br><span class="line">BRIGHTBLUE = (<span class="number">138</span>, <span class="number">228</span>, <span class="number">221</span>)</span><br><span class="line"><span class="comment"># 颜色变量</span></span><br><span class="line">BLANKCOLOR = DARKGRAY</span><br><span class="line">MSGCOLOR = WHITE</span><br><span class="line">BTCOLOR = YELLOW</span><br><span class="line">BTTEXTCOLOR = GRAY</span><br><span class="line">BDCOLOR = BRIGHTBLUE</span><br><span class="line"><span class="comment"># 静态常量</span></span><br><span class="line">BLOCKSIZE = <span class="number">80</span></span><br><span class="line">FPS = <span class="number">60</span></span><br><span class="line">UP = <span class="string">&#x27;up&#x27;</span></span><br><span class="line">DOWN = <span class="string">&#x27;down&#x27;</span></span><br><span class="line">LEFT = <span class="string">&#x27;left&#x27;</span></span><br><span class="line">RIGHT = <span class="string">&#x27;right&#x27;</span></span><br><span class="line">NEWGAME = <span class="string">&#x27;newgame&#x27;</span></span><br><span class="line">AUTOMOVE = random.randint(<span class="number">50</span>, <span class="number">100</span>)  <span class="comment"># 随机移动次数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文本对象创建</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">makeText</span>(<span class="params">text, tColor, btColor, top, left</span>):</span><br><span class="line">    textSurf = BASICFONT.render(text, <span class="literal">True</span>, tColor, btColor)</span><br><span class="line">    textRect = textSurf.get_rect()</span><br><span class="line">    textRect.topleft = (top, left)</span><br><span class="line">    <span class="keyword">return</span> textSurf, textRect</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制方块在窗口(tilex,tiley)处</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">drawTile</span>(<span class="params">tilex, tiley, number, adjx=<span class="number">0</span>, adjy=<span class="number">0</span></span>):</span><br><span class="line">    left, top = getLeftTopOfTile(tilex, tiley)</span><br><span class="line">    pygame.draw.rect(WINSET, BTCOLOR, (left + adjx, top + adjy, BLOCKSIZE, BLOCKSIZE))</span><br><span class="line">    textSurf = BASICFONT.render(<span class="built_in">str</span>(number), <span class="literal">True</span>, BTTEXTCOLOR)</span><br><span class="line">    textRect = textSurf.get_rect()</span><br><span class="line">    textRect.center = left + <span class="built_in">int</span>(BLOCKSIZE / <span class="number">2</span>) + adjx, top + <span class="built_in">int</span>(BLOCKSIZE / <span class="number">2</span>) + adjy</span><br><span class="line">    WINSET.blit(textSurf, textRect)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算方块距离窗口原点纵横坐标距离</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getLeftTopOfTile</span>(<span class="params">tilex, tiley</span>):</span><br><span class="line">    xMargin = <span class="built_in">int</span>((WINWIDTH - (BLOCKSIZE * COL + (COL - <span class="number">1</span>))) / <span class="number">2</span>)</span><br><span class="line">    yMargin = <span class="built_in">int</span>((WINWIDTH - (BLOCKSIZE * ROW + (ROW - <span class="number">1</span>))) / <span class="number">2</span>)</span><br><span class="line">    left = xMargin + (tilex * BLOCKSIZE) + (tilex - <span class="number">1</span>)</span><br><span class="line">    top = yMargin + (tiley * BLOCKSIZE) + (tiley - <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> left, top</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 静态界面绘制</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">darwStaticWin</span>():</span><br><span class="line">    winSet = pygame.display.set_mode((WINWIDTH, WINHEIGHT))</span><br><span class="line">    pygame.display.set_caption(<span class="string">&#x27;数字华容道&#x27;</span>)</span><br><span class="line">    image = pygame.image.load(<span class="string">&#x27;bg.jpg&#x27;</span>)</span><br><span class="line">    winSet.blit(image, (<span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">    <span class="comment"># 按钮创建</span></span><br><span class="line">    new_surf, new_rect = makeText(<span class="string">&#x27;新游戏&#x27;</span>, BTTEXTCOLOR, BTCOLOR, WINWIDTH - <span class="number">85</span>, WINHEIGHT - <span class="number">40</span>)</span><br><span class="line">    winSet.blit(new_surf, new_rect)</span><br><span class="line">    <span class="keyword">return</span> winSet, new_surf, new_rect</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 动态界面绘制</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">drawBoard</span>(<span class="params">board, msg</span>):</span><br><span class="line">    WINSET.blit(STATICSURF, (<span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">    <span class="keyword">if</span> msg:</span><br><span class="line">        msgSurf, msgRect = makeText(msg, MSGCOLOR, <span class="literal">None</span>, <span class="number">5</span>, <span class="number">5</span>)</span><br><span class="line">        pygame.image.save(msgSurf, <span class="string">&#x27;msg.png&#x27;</span>)</span><br><span class="line">        imgSurf = pygame.image.load(<span class="string">&#x27;msg.png&#x27;</span>)</span><br><span class="line">        WINSET.blit(imgSurf, msgRect)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(board)):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(board[<span class="number">0</span>])):</span><br><span class="line">            <span class="keyword">if</span> board[i][j]:</span><br><span class="line">                drawTile(i, j, board[i][j])</span><br><span class="line"></span><br><span class="line">    left, top = getLeftTopOfTile(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    width = COL * BLOCKSIZE</span><br><span class="line">    height = ROW * BLOCKSIZE</span><br><span class="line">    pygame.draw.rect(WINSET, BDCOLOR, (left - <span class="number">5</span>, top - <span class="number">5</span>, width + <span class="number">11</span>, height + <span class="number">11</span>), <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成推盘序列</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getStartingBoard</span>():</span><br><span class="line">    initBoard = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(COL):</span><br><span class="line">        i = i + <span class="number">1</span></span><br><span class="line">        colum = []</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(ROW):</span><br><span class="line">            colum.append(i)</span><br><span class="line">            i += COL  <span class="comment"># 按列添加,非顺序添加</span></span><br><span class="line">        initBoard.append(colum)</span><br><span class="line">    initBoard[ROW - <span class="number">1</span>][COL - <span class="number">1</span>] = BLANK</span><br><span class="line">    <span class="keyword">return</span> initBoard</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 移动交换元素位置</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">makeMove</span>(<span class="params">board, move</span>):</span><br><span class="line">    blankx, blanky = getBlankPosition(board)</span><br><span class="line">    <span class="keyword">if</span> move == UP:</span><br><span class="line">        board[blankx][blanky], board[blankx][blanky + <span class="number">1</span>] = board[blankx][blanky + <span class="number">1</span>], board[blankx][blanky]</span><br><span class="line">    <span class="keyword">elif</span> move == DOWN:</span><br><span class="line">        board[blankx][blanky], board[blankx][blanky - <span class="number">1</span>] = board[blankx][blanky - <span class="number">1</span>], board[blankx][blanky]</span><br><span class="line">    <span class="keyword">elif</span> move == LEFT:</span><br><span class="line">        board[blankx][blanky], board[blankx + <span class="number">1</span>][blanky] = board[blankx + <span class="number">1</span>][blanky], board[blankx][blanky]</span><br><span class="line">    <span class="keyword">elif</span> move == RIGHT:</span><br><span class="line">        board[blankx][blanky], board[blankx - <span class="number">1</span>][blanky] = board[blankx - <span class="number">1</span>][blanky], board[blankx][blanky]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 移动的动画效果</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">slideAnimation</span>(<span class="params">board, direction, msg, animationSpeed</span>):</span><br><span class="line">    blankx, blanky = getBlankPosition(board)  <span class="comment"># 获取空格的行列坐标</span></span><br><span class="line">    <span class="comment"># 获取被移动的方块所在的行列</span></span><br><span class="line">    <span class="keyword">if</span> direction == UP:</span><br><span class="line">        movex = blankx</span><br><span class="line">        movey = blanky + <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> direction == DOWN:</span><br><span class="line">        movex = blankx</span><br><span class="line">        movey = blanky - <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> direction == LEFT:</span><br><span class="line">        movex = blankx + <span class="number">1</span></span><br><span class="line">        movey = blanky</span><br><span class="line">    <span class="keyword">elif</span> direction == RIGHT:</span><br><span class="line">        movex = blankx - <span class="number">1</span></span><br><span class="line">        movey = blanky</span><br><span class="line">    drawBoard(board, msg)</span><br><span class="line">    BASESURF = WINSET.copy()  <span class="comment"># 复制此刻背景作为Surface对象</span></span><br><span class="line">    <span class="comment"># 绘制空白快</span></span><br><span class="line">    moveLeft, moveTop = getLeftTopOfTile(movex, movey)</span><br><span class="line">    pygame.draw.rect(BASESURF, BLANKCOLOR, (moveLeft, moveTop, BLOCKSIZE, BLOCKSIZE))</span><br><span class="line">    <span class="comment"># 连续绘制被移动的方块</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, BLOCKSIZE, animationSpeed):</span><br><span class="line">        checkForQuit()</span><br><span class="line">        WINSET.blit(BASESURF, (<span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">        <span class="keyword">if</span> direction == UP:</span><br><span class="line">            drawTile(movex, movey, board[movex][movey], <span class="number">0</span>, -i)</span><br><span class="line">        <span class="keyword">if</span> direction == DOWN:</span><br><span class="line">            drawTile(movex, movey, board[movex][movey], <span class="number">0</span>, i)</span><br><span class="line">        <span class="keyword">if</span> direction == LEFT:</span><br><span class="line">            drawTile(movex, movey, board[movex][movey], -i, <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">if</span> direction == RIGHT:</span><br><span class="line">            drawTile(movex, movey, board[movex][movey], i, <span class="number">0</span>)</span><br><span class="line">        pygame.display.update()  <span class="comment"># 更新界面</span></span><br><span class="line">        FPSCLOCK.tick(FPS)  <span class="comment"># 控制帧率</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断无效移动</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">isValidMove</span>(<span class="params">board, direction</span>):</span><br><span class="line">    blankx, blanky = getBlankPosition(board)</span><br><span class="line">    <span class="keyword">if</span> blankx == <span class="number">1</span> <span class="keyword">and</span> direction == DOWN:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">elif</span> blankx == <span class="number">3</span> <span class="keyword">and</span> direction == UP:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">elif</span> blanky == <span class="number">1</span> <span class="keyword">and</span> direction == RIGHT:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">elif</span> blanky == <span class="number">3</span> <span class="keyword">and</span> direction == LEFT:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取随机移动的方向</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getRandomMove</span>(<span class="params">board, lastMove=<span class="literal">None</span></span>):</span><br><span class="line">    validMoves = [UP, DOWN, LEFT, RIGHT]</span><br><span class="line">    <span class="keyword">if</span> lastMove == UP <span class="keyword">or</span> <span class="keyword">not</span> isValidMove(board, DOWN):</span><br><span class="line">        validMoves.remove(DOWN)</span><br><span class="line">    <span class="keyword">if</span> lastMove == DOWN <span class="keyword">or</span> <span class="keyword">not</span> isValidMove(board, UP):</span><br><span class="line">        validMoves.remove(UP)</span><br><span class="line">    <span class="keyword">if</span> lastMove == LEFT <span class="keyword">or</span> <span class="keyword">not</span> isValidMove(board, RIGHT):</span><br><span class="line">        validMoves.remove(RIGHT)</span><br><span class="line">    <span class="keyword">if</span> lastMove == RIGHT <span class="keyword">or</span> <span class="keyword">not</span> isValidMove(board, LEFT):</span><br><span class="line">        validMoves.remove(LEFT)</span><br><span class="line">    <span class="keyword">return</span> random.choice(validMoves)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化推盘</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generateNewPuzzle</span>(<span class="params">numSlides</span>):</span><br><span class="line">    mianBoard = getStartingBoard()  <span class="comment"># 获取拼图</span></span><br><span class="line">    drawBoard(mianBoard, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    lastMove = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(numSlides):</span><br><span class="line">        move = getRandomMove(mianBoard, lastMove)</span><br><span class="line">        slideAnimation(mianBoard, move, <span class="string">&#x27;初始化...&#x27;</span>, animationSpeed=<span class="built_in">int</span>(BLOCKSIZE / <span class="number">3</span>))</span><br><span class="line">        makeMove(mianBoard, move)</span><br><span class="line">        lastMove = move</span><br><span class="line">    <span class="keyword">return</span> mianBoard</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getBlankPosition</span>(<span class="params">board</span>):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(COL):</span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(ROW):</span><br><span class="line">            <span class="keyword">if</span> board[x][y] == BLANK:</span><br><span class="line">                <span class="keyword">return</span> (x, y)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getSpotClicked</span>(<span class="params">board, x, y</span>):</span><br><span class="line">    <span class="keyword">for</span> tilex <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(board)):</span><br><span class="line">        <span class="keyword">for</span> tiley <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(board[<span class="number">0</span>])):</span><br><span class="line">            left, top = getLeftTopOfTile(tilex, tiley)</span><br><span class="line">            tileRect = pygame.Rect(left, top, BLOCKSIZE, BLOCKSIZE)</span><br><span class="line">            <span class="keyword">if</span> tileRect.collidepoint(x, y):  <span class="comment"># 如果产生碰撞</span></span><br><span class="line">                <span class="keyword">return</span> tilex, tiley  <span class="comment"># 返回行列</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span>, <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取用户输入</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getInput</span>(<span class="params">mainBoard</span>):</span><br><span class="line">    events = pygame.event.get()</span><br><span class="line">    userInput = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> events:</span><br><span class="line">        <span class="keyword">if</span> event.<span class="built_in">type</span> == MOUSEBUTTONUP:</span><br><span class="line">            <span class="comment"># 获取位置关系</span></span><br><span class="line">            spotx, spoty = getSpotClicked(mainBoard, event.pos[<span class="number">0</span>], event.pos[<span class="number">1</span>])</span><br><span class="line">            <span class="comment"># 坐标不在拼图区域,点击的新游戏</span></span><br><span class="line">            <span class="keyword">if</span> (spotx, spoty) == (<span class="literal">None</span>, <span class="literal">None</span>) <span class="keyword">and</span> NEW_RECT.collidepoint(event.pos):</span><br><span class="line">                userInput = NEWGAME</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># 如果已完成,点击非选项时不移动</span></span><br><span class="line">                <span class="keyword">if</span> mainBoard == getStartingBoard():</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="comment"># 点击位置是否在BLANK旁边</span></span><br><span class="line">                blankx, blanky = getBlankPosition(mainBoard)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> spotx == blankx + <span class="number">1</span> <span class="keyword">and</span> spoty == blanky:</span><br><span class="line">                    userInput == LEFT  <span class="comment"># 设置移动方向</span></span><br><span class="line">                <span class="keyword">elif</span> spotx == blankx - <span class="number">1</span> <span class="keyword">and</span> spoty == blanky:</span><br><span class="line">                    userInput = RIGHT</span><br><span class="line">                <span class="keyword">elif</span> spotx == blankx <span class="keyword">and</span> spoty == blanky + <span class="number">1</span>:</span><br><span class="line">                    userInput = UP</span><br><span class="line">                <span class="keyword">elif</span> spotx == blankx <span class="keyword">and</span> spoty == blanky - <span class="number">1</span>:</span><br><span class="line">                    userInput = DOWN</span><br><span class="line">    <span class="keyword">return</span> userInput</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对用户输入进行处理</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">processing</span>(<span class="params">userInput, mainBoard, msg</span>):</span><br><span class="line">    <span class="keyword">if</span> mainBoard == getStartingBoard():</span><br><span class="line">        msg = <span class="string">&#x27;完成&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        msg = <span class="string">&#x27;通过鼠标移动方块&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> userInput:</span><br><span class="line">        <span class="comment"># 功能按钮</span></span><br><span class="line">        <span class="keyword">if</span> userInput == NEWGAME:</span><br><span class="line">            initBoard = getStartingBoard()</span><br><span class="line">            mainBoard = generateNewPuzzle(numSlides)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># 方块移动</span></span><br><span class="line">            slideAnimation(mainBoard, userInput, msg, <span class="number">8</span>)</span><br><span class="line">            makeMove(mainBoard, userInput)</span><br><span class="line">    <span class="keyword">return</span> mainBoard, msg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 资源回收与程序退出</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">terminate</span>():</span><br><span class="line">    pygame.quit()</span><br><span class="line">    sys.exit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出判断</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">checkForQuit</span>():</span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get(QUIT):  <span class="comment"># 获取所有可能会导致退出的事件</span></span><br><span class="line">        terminate()  <span class="comment"># 执行退出</span></span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get(KEYUP):  <span class="comment"># 按下ESC键退出</span></span><br><span class="line">        <span class="keyword">if</span> event.key == K_ESCAPE:</span><br><span class="line">            terminate()</span><br><span class="line">        pygame.event.post(event)  <span class="comment"># 发送事件至消息列队</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># FPSCLOCK Clock对象</span></span><br><span class="line">    <span class="comment"># WINSET 窗体Surface对象</span></span><br><span class="line">    <span class="comment"># STATICSURF 静态窗体Surface对象</span></span><br><span class="line">    <span class="comment"># BASICFONT 字体对象</span></span><br><span class="line">    <span class="comment"># NEW_SURF &quot;新游戏&quot;Surface对象,一张内容为文字的图片  调用字体对象的render()方法,渲染为Surface对象显示</span></span><br><span class="line">    <span class="comment"># NEW_RECT get_rect()方法获取的&quot;新游戏&quot;矩形属性</span></span><br><span class="line">    <span class="keyword">global</span> FPSCLOCK, WINSET, STATICSURF, BASICFONT  <span class="comment"># 定义全局变量</span></span><br><span class="line">    <span class="keyword">global</span> NEW_SURF, NEW_RECT</span><br><span class="line"></span><br><span class="line">    pygame.init()</span><br><span class="line">    FPSCLOCK = pygame.time.Clock()  <span class="comment"># 创建一个Clock对象,并使用变量FPSCLOCK保存</span></span><br><span class="line">    BASICFONT = pygame.font.Font(<span class="string">&#x27;STKAITI.TTF&#x27;</span>, <span class="number">25</span>)  <span class="comment"># 定义返回一个字体对象,并使用变量BASICFONT保存</span></span><br><span class="line">    WINSET, NEW_SURF, NEW_RECT = darwStaticWin()  <span class="comment"># 创建静态窗口</span></span><br><span class="line">    STATICSURF = WINSET.copy()  <span class="comment"># 复制一个静态窗口作为底板</span></span><br><span class="line">    mainBoard = generateNewPuzzle(AUTOMOVE)  <span class="comment"># 初始化</span></span><br><span class="line">    msg = <span class="literal">None</span> </span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        FPSCLOCK.tick(FPS)  <span class="comment"># 设置帧率</span></span><br><span class="line">        drawBoard(mainBoard, msg)  <span class="comment"># 动态界面绘制</span></span><br><span class="line">        pygame.display.update()</span><br><span class="line">        checkForQuit()  <span class="comment"># 判断是否终止</span></span><br><span class="line">        userInput = getInput(mainBoard)  <span class="comment"># 获取输入</span></span><br><span class="line">        mainBoard, msg = processing(userInput, mainBoard, msg)  <span class="comment"># 输入处理</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="测试10-1">测试10/1<a class="header-anchor" href="#测试10-1">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame, random, sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pygame.<span class="built_in">locals</span> <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> define <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化窗口宽高</span></span><br><span class="line">WINWIDTH = <span class="number">640</span></span><br><span class="line">WINHEIGHT = <span class="number">480</span></span><br><span class="line"><span class="comment"># 初始化推盘行列和空格</span></span><br><span class="line">ROW = <span class="number">3</span></span><br><span class="line">COL = <span class="number">3</span></span><br><span class="line">BLANK = <span class="literal">None</span></span><br><span class="line"><span class="comment"># 颜色预设</span></span><br><span class="line">DARKGRAY = (<span class="number">60</span>, <span class="number">60</span>, <span class="number">60</span>)</span><br><span class="line">WHITE = (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>)</span><br><span class="line">YELLOW = (<span class="number">255</span>, <span class="number">255</span>, <span class="number">193</span>)</span><br><span class="line">GRAY = (<span class="number">128</span>, <span class="number">128</span>, <span class="number">128</span>)</span><br><span class="line">BRIGHTBLUE = (<span class="number">138</span>, <span class="number">228</span>, <span class="number">221</span>)</span><br><span class="line"><span class="comment"># 颜色变量</span></span><br><span class="line">BLANKCOLOR = DARKGRAY</span><br><span class="line">MSGCOLOR = WHITE</span><br><span class="line">BTCOLOR = YELLOW</span><br><span class="line">BTTEXTCOLOR = GRAY</span><br><span class="line">BDCOLOR = BRIGHTBLUE</span><br><span class="line"><span class="comment"># 静态常量</span></span><br><span class="line">BLOCKSIZE = <span class="number">80</span>  <span class="comment"># 方块大小</span></span><br><span class="line">FPS = <span class="number">60</span>  <span class="comment"># 帧率</span></span><br><span class="line"><span class="comment"># 按键事件</span></span><br><span class="line">UP = <span class="string">&#x27;up&#x27;</span></span><br><span class="line">DOWN = <span class="string">&#x27;down&#x27;</span></span><br><span class="line">LEFT = <span class="string">&#x27;left&#x27;</span></span><br><span class="line">RIGHT = <span class="string">&#x27;right&#x27;</span></span><br><span class="line">NEWGAME = <span class="string">&#x27;newgame&#x27;</span></span><br><span class="line"><span class="comment"># 随机移动次数</span></span><br><span class="line">AUTOMOVE = random.randint(<span class="number">50</span>, <span class="number">100</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># AUTOMOVE = 80</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文本对象创建</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">makeText</span>(<span class="params">text, tColor, btColor, top, left</span>):</span><br><span class="line">    textSurf = BASICFONT.render(text, <span class="literal">True</span>, tColor, btColor)</span><br><span class="line">    textRect = textSurf.get_rect()</span><br><span class="line">    textRect.topleft = (top, left)</span><br><span class="line">    <span class="keyword">return</span> textSurf, textRect  <span class="comment"># 将字体渲染的Surface对象,Surface对象的矩形属性</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制方块在窗口(tilex,tiley)处,adjx与adjy为偏移量,可选参数默认值为0</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">drawTile</span>(<span class="params">tilex, tiley, number, adjx=<span class="number">0</span>, adjy=<span class="number">0</span></span>):</span><br><span class="line">    left, top = getLeftTopOfTile(tilex, tiley)</span><br><span class="line">    <span class="comment"># 绘制方块</span></span><br><span class="line">    pygame.draw.rect(WINSET, BTCOLOR, (left + adjx, top + adjy, BLOCKSIZE, BLOCKSIZE))</span><br><span class="line">    <span class="comment"># 将数字number渲染到方块上</span></span><br><span class="line">    textSurf = BASICFONT.render(<span class="built_in">str</span>(number), <span class="literal">True</span>, BTTEXTCOLOR)</span><br><span class="line">    <span class="comment"># 获取矩形属性</span></span><br><span class="line">    textRect = textSurf.get_rect()</span><br><span class="line">    <span class="comment"># print(textRect)</span></span><br><span class="line">    textRect.center = left + <span class="built_in">int</span>(BLOCKSIZE / <span class="number">2</span>) + adjx, top + <span class="built_in">int</span>(BLOCKSIZE / <span class="number">2</span>) + adjy</span><br><span class="line">    <span class="comment"># print(textRect.center)</span></span><br><span class="line">    <span class="comment"># print(textRect)</span></span><br><span class="line">    <span class="comment"># 绘制到静态窗口上</span></span><br><span class="line">    WINSET.blit(textSurf, textRect)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算方块左上角 距离窗口原点纵横坐标距离</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getLeftTopOfTile</span>(<span class="params">tilex, tiley</span>):</span><br><span class="line">    <span class="comment"># 先计算左上角方块的距离</span></span><br><span class="line">    xMargin = <span class="built_in">int</span>((WINWIDTH - (BLOCKSIZE * COL + (COL - <span class="number">1</span>))) / <span class="number">2</span>)  <span class="comment"># 199</span></span><br><span class="line">    yMargin = <span class="built_in">int</span>((WINHEIGHT - (BLOCKSIZE * ROW + (ROW - <span class="number">1</span>))) / <span class="number">2</span>)  <span class="comment"># 119</span></span><br><span class="line">    <span class="comment"># print(xMargin,yMargin)</span></span><br><span class="line">    <span class="comment"># print(tilex, tiley) ?</span></span><br><span class="line">    left = xMargin + (tilex * BLOCKSIZE) + (tilex - <span class="number">1</span>)</span><br><span class="line">    top = yMargin + (tiley * BLOCKSIZE) + (tiley - <span class="number">1</span>)</span><br><span class="line">    <span class="comment"># print(left, top)</span></span><br><span class="line">    <span class="keyword">return</span> left, top</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 静态界面绘制</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">darwStaticWin</span>():</span><br><span class="line">    winSet = pygame.display.set_mode((WINWIDTH, WINHEIGHT))</span><br><span class="line">    pygame.display.set_caption(<span class="string">&#x27;数字华容道&#x27;</span>)</span><br><span class="line">    image = pygame.image.load(<span class="string">&#x27;bg.jpg&#x27;</span>)</span><br><span class="line">    winSet.blit(image, (<span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">    <span class="comment"># 按钮创建</span></span><br><span class="line">    new_surf, new_rect = makeText(<span class="string">&#x27;新游戏&#x27;</span>, BTTEXTCOLOR, BTCOLOR, WINWIDTH - <span class="number">85</span>, WINHEIGHT - <span class="number">40</span>)</span><br><span class="line">    winSet.blit(new_surf, new_rect)</span><br><span class="line">    <span class="keyword">return</span> winSet, new_surf, new_rect</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 动态界面绘制</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">drawBoard</span>(<span class="params">board, msg</span>):</span><br><span class="line">    <span class="comment"># board 推盘列表</span></span><br><span class="line">    WINSET.blit(STATICSURF, (<span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">    <span class="keyword">if</span> msg:</span><br><span class="line">        msgSurf, msgRect = makeText(msg, MSGCOLOR, <span class="literal">None</span>, <span class="number">5</span>, <span class="number">5</span>)</span><br><span class="line">        pygame.image.save(msgSurf, <span class="string">&#x27;msg.png&#x27;</span>)  <span class="comment"># 将msgSurf存为名为msg.png的图片</span></span><br><span class="line">        imgSurf = pygame.image.load(<span class="string">&#x27;msg.png&#x27;</span>)  <span class="comment"># 加载图片</span></span><br><span class="line">        <span class="comment"># print(msgRect)  # &lt;rect(5, 5, 87, 28)&gt;  矩形属性</span></span><br><span class="line">        WINSET.blit(imgSurf, msgRect)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(board)):  <span class="comment"># 3</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(board[<span class="number">0</span>])):  <span class="comment"># 3</span></span><br><span class="line">            <span class="keyword">if</span> board[i][j]:  <span class="comment"># 遍历出不为None的</span></span><br><span class="line">                <span class="comment"># print(board[i][j])</span></span><br><span class="line">                drawTile(i, j, board[i][j])  <span class="comment"># 方块上的数字和所在的行列,绘制方块及数字</span></span><br><span class="line">    <span class="comment"># 绘制外边框</span></span><br><span class="line">    left, top = getLeftTopOfTile(<span class="number">0</span>, <span class="number">0</span>)  <span class="comment"># 198 118</span></span><br><span class="line">    width = COL * BLOCKSIZE  <span class="comment"># 240</span></span><br><span class="line">    height = ROW * BLOCKSIZE  <span class="comment"># 240</span></span><br><span class="line">    pygame.draw.rect(WINSET, BDCOLOR, (left - <span class="number">5</span>, top - <span class="number">5</span>, width + <span class="number">11</span>, height + <span class="number">11</span>), <span class="number">4</span>)  <span class="comment"># 外沿厚度4</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成推盘序列</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getStartingBoard</span>():</span><br><span class="line">    initBoard = []  <span class="comment"># 二维列表</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(COL):  <span class="comment"># 列</span></span><br><span class="line">        i = i + <span class="number">1</span></span><br><span class="line">        colum = []</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(ROW):</span><br><span class="line">            colum.append(i)</span><br><span class="line">            i += COL  <span class="comment"># 按列添加,非顺序添加</span></span><br><span class="line">        initBoard.append(colum)</span><br><span class="line">    initBoard[ROW - <span class="number">1</span>][COL - <span class="number">1</span>] = BLANK  <span class="comment"># 最后一位添加None空格</span></span><br><span class="line">    <span class="comment"># print(initBoard)</span></span><br><span class="line">    <span class="keyword">return</span> initBoard</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化推盘,随机移动numSlides(50~100)次</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generateNewPuzzle</span>(<span class="params">numSlides</span>):</span><br><span class="line">    mianBoard = getStartingBoard()  <span class="comment"># 获取拼图列表</span></span><br><span class="line">    drawBoard(mianBoard, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    lastMove = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(numSlides):</span><br><span class="line">        move = getRandomMove(mianBoard, lastMove)  <span class="comment"># 获取随机移动的方向</span></span><br><span class="line">        slideAnimation(mianBoard, move, <span class="string">&#x27;初始化...&#x27;</span>, <span class="built_in">int</span>(BLOCKSIZE / <span class="number">3</span>))</span><br><span class="line">        makeMove(mianBoard, move)</span><br><span class="line">        lastMove = move</span><br><span class="line">    <span class="keyword">return</span> mianBoard</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 移动交换元素位置</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">makeMove</span>(<span class="params">board, move</span>):</span><br><span class="line">    blankx, blanky = getBlankPosition(board)</span><br><span class="line">    <span class="keyword">if</span> move == UP:</span><br><span class="line">        board[blankx][blanky], board[blankx][blanky + <span class="number">1</span>] = board[blankx][blanky + <span class="number">1</span>], board[blankx][blanky]</span><br><span class="line">    <span class="keyword">elif</span> move == DOWN:</span><br><span class="line">        board[blankx][blanky], board[blankx][blanky - <span class="number">1</span>] = board[blankx][blanky - <span class="number">1</span>], board[blankx][blanky]</span><br><span class="line">    <span class="keyword">elif</span> move == LEFT:</span><br><span class="line">        board[blankx][blanky], board[blankx + <span class="number">1</span>][blanky] = board[blankx + <span class="number">1</span>][blanky], board[blankx][blanky]</span><br><span class="line">    <span class="keyword">elif</span> move == RIGHT:</span><br><span class="line">        board[blankx][blanky], board[blankx - <span class="number">1</span>][blanky] = board[blankx - <span class="number">1</span>][blanky], board[blankx][blanky]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 移动的动画效果</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">slideAnimation</span>(<span class="params">board, direction, msg, animationSpeed</span>):</span><br><span class="line">    blankx, blanky = getBlankPosition(board)  <span class="comment"># 获取空格的行列坐标</span></span><br><span class="line">    <span class="comment"># 获取被移动的方块所在的行列</span></span><br><span class="line">    <span class="keyword">if</span> direction == UP:</span><br><span class="line">        movex = blankx</span><br><span class="line">        movey = blanky + <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> direction == DOWN:</span><br><span class="line">        movex = blankx</span><br><span class="line">        movey = blanky - <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> direction == LEFT:</span><br><span class="line">        movex = blankx + <span class="number">1</span></span><br><span class="line">        movey = blanky</span><br><span class="line">    <span class="keyword">elif</span> direction == RIGHT:</span><br><span class="line">        movex = blankx - <span class="number">1</span></span><br><span class="line">        movey = blanky</span><br><span class="line">    drawBoard(board, msg)</span><br><span class="line">    BASESURF = WINSET.copy()  <span class="comment"># 复制此刻背景作为Surface对象</span></span><br><span class="line">    <span class="comment"># 绘制空白块</span></span><br><span class="line">    moveLeft, moveTop = getLeftTopOfTile(movex, movey)</span><br><span class="line">    pygame.draw.rect(BASESURF, BLANKCOLOR, (moveLeft, moveTop, BLOCKSIZE, BLOCKSIZE))</span><br><span class="line">    <span class="comment"># 连续绘制被移动的方块</span></span><br><span class="line">    <span class="comment"># print(animationSpeed)  # 26 方块移动速度</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, BLOCKSIZE, <span class="number">1</span>):</span><br><span class="line">        checkForQuit()</span><br><span class="line">        WINSET.blit(BASESURF, (<span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">        <span class="keyword">if</span> direction == UP:</span><br><span class="line">            drawTile(movex, movey, board[movex][movey], <span class="number">0</span>, -i)</span><br><span class="line">        <span class="keyword">if</span> direction == DOWN:</span><br><span class="line">            drawTile(movex, movey, board[movex][movey], <span class="number">0</span>, i)</span><br><span class="line">        <span class="keyword">if</span> direction == LEFT:</span><br><span class="line">            drawTile(movex, movey, board[movex][movey], -i, <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">if</span> direction == RIGHT:</span><br><span class="line">            drawTile(movex, movey, board[movex][movey], i, <span class="number">0</span>)</span><br><span class="line">        pygame.display.update()  <span class="comment"># 更新界面</span></span><br><span class="line">        FPSCLOCK.tick(FPS)  <span class="comment"># 控制帧率</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断无效移动</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">isValidMove</span>(<span class="params">board, direction</span>):</span><br><span class="line">    blankx, blanky = getBlankPosition(board)</span><br><span class="line">    <span class="keyword">if</span> blankx == <span class="number">1</span> <span class="keyword">and</span> direction == DOWN:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">elif</span> blankx == <span class="number">3</span> <span class="keyword">and</span> direction == UP:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">elif</span> blanky == <span class="number">1</span> <span class="keyword">and</span> direction == RIGHT:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">elif</span> blanky == <span class="number">3</span> <span class="keyword">and</span> direction == LEFT:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取随机移动的方向</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getRandomMove</span>(<span class="params">board, lastMove=<span class="literal">None</span></span>):</span><br><span class="line">    validMoves = [UP, DOWN, LEFT, RIGHT]</span><br><span class="line">    <span class="keyword">if</span> lastMove == UP <span class="keyword">or</span> <span class="keyword">not</span> isValidMove(board, DOWN):</span><br><span class="line">        validMoves.remove(DOWN)</span><br><span class="line">    <span class="keyword">if</span> lastMove == DOWN <span class="keyword">or</span> <span class="keyword">not</span> isValidMove(board, UP):</span><br><span class="line">        validMoves.remove(UP)</span><br><span class="line">    <span class="keyword">if</span> lastMove == LEFT <span class="keyword">or</span> <span class="keyword">not</span> isValidMove(board, RIGHT):</span><br><span class="line">        validMoves.remove(RIGHT)</span><br><span class="line">    <span class="keyword">if</span> lastMove == RIGHT <span class="keyword">or</span> <span class="keyword">not</span> isValidMove(board, LEFT):</span><br><span class="line">        validMoves.remove(LEFT)</span><br><span class="line">    <span class="keyword">return</span> random.choice(validMoves)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getBlankPosition</span>(<span class="params">board</span>):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(COL):</span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(ROW):</span><br><span class="line">            <span class="keyword">if</span> board[x][y] == BLANK:</span><br><span class="line">                <span class="keyword">return</span> (x, y)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getSpotClicked</span>(<span class="params">board, x, y</span>):</span><br><span class="line">    <span class="keyword">for</span> tilex <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(board)):</span><br><span class="line">        <span class="keyword">for</span> tiley <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(board[<span class="number">0</span>])):</span><br><span class="line">            left, top = getLeftTopOfTile(tilex, tiley)</span><br><span class="line">            tileRect = pygame.Rect(left, top, BLOCKSIZE, BLOCKSIZE)</span><br><span class="line">            <span class="keyword">if</span> tileRect.collidepoint(x, y):  <span class="comment"># 如果产生碰撞</span></span><br><span class="line">                <span class="keyword">return</span> tilex, tiley  <span class="comment"># 返回行列</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span>, <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取用户输入</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getInput</span>(<span class="params">mainBoard</span>):</span><br><span class="line">    events = pygame.event.get()</span><br><span class="line">    userInput = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> events:</span><br><span class="line">        <span class="keyword">if</span> event.<span class="built_in">type</span> == MOUSEBUTTONUP:</span><br><span class="line">            <span class="comment"># 获取位置关系</span></span><br><span class="line">            spotx, spoty = getSpotClicked(mainBoard, event.pos[<span class="number">0</span>], event.pos[<span class="number">1</span>])</span><br><span class="line">            <span class="comment"># 坐标不在拼图区域,点击的新游戏</span></span><br><span class="line">            <span class="keyword">if</span> (spotx, spoty) == (<span class="literal">None</span>, <span class="literal">None</span>) <span class="keyword">and</span> NEW_RECT.collidepoint(event.pos):</span><br><span class="line">                userInput = NEWGAME</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># 如果已完成,点击非选项时不移动</span></span><br><span class="line">                <span class="keyword">if</span> mainBoard == getStartingBoard():</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="comment"># 点击位置是否在BLANK旁边</span></span><br><span class="line">                blankx, blanky = getBlankPosition(mainBoard)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> spotx == blankx + <span class="number">1</span> <span class="keyword">and</span> spoty == blanky:</span><br><span class="line">                    userInput = LEFT  <span class="comment"># 设置移动方向</span></span><br><span class="line">                <span class="keyword">elif</span> spotx == blankx - <span class="number">1</span> <span class="keyword">and</span> spoty == blanky:</span><br><span class="line">                    userInput = RIGHT</span><br><span class="line">                <span class="keyword">elif</span> spotx == blankx <span class="keyword">and</span> spoty == blanky + <span class="number">1</span>:</span><br><span class="line">                    userInput = UP</span><br><span class="line">                <span class="keyword">elif</span> spotx == blankx <span class="keyword">and</span> spoty == blanky - <span class="number">1</span>:</span><br><span class="line">                    userInput = DOWN</span><br><span class="line">    <span class="keyword">return</span> userInput</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对用户输入进行处理</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">processing</span>(<span class="params">userInput, mainBoard, msg</span>):</span><br><span class="line">    <span class="keyword">if</span> mainBoard == getStartingBoard():</span><br><span class="line">        msg = <span class="string">&#x27;完成&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        msg = <span class="string">&#x27;通过鼠标移动方块&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> userInput:</span><br><span class="line">        <span class="comment"># 功能按钮</span></span><br><span class="line">        <span class="keyword">if</span> userInput == NEWGAME:</span><br><span class="line">            initBoard = getStartingBoard()</span><br><span class="line">            mainBoard = generateNewPuzzle(AUTOMOVE)</span><br><span class="line"></span><br><span class="line">            drawBoard(initBoard, msg)  <span class="comment"># 动态界面绘制</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># 方块移动</span></span><br><span class="line">            slideAnimation(mainBoard, userInput, msg, <span class="number">8</span>)</span><br><span class="line">            makeMove(mainBoard, userInput)</span><br><span class="line">    <span class="keyword">return</span> mainBoard, msg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 资源回收与程序退出</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">terminate</span>():</span><br><span class="line">    pygame.quit()  <span class="comment"># 模块卸载</span></span><br><span class="line">    sys.exit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出判断</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">checkForQuit</span>():</span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get(QUIT):  <span class="comment"># 获取所有可能会导致退出的事件,存在就执行退出</span></span><br><span class="line">        terminate()  <span class="comment"># 执行退出</span></span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get(KEYUP):  <span class="comment"># 按下ESC键退出</span></span><br><span class="line">        <span class="keyword">if</span> event.key == K_ESCAPE:</span><br><span class="line">            terminate()</span><br><span class="line">        pygame.event.post(event)  <span class="comment"># 发送事件至消息列队</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># FPSCLOCK Clock对象</span></span><br><span class="line">    <span class="comment"># WINSET 窗体Surface对象</span></span><br><span class="line">    <span class="comment"># STATICSURF 静态窗体Surface对象</span></span><br><span class="line">    <span class="comment"># BASICFONT 字体对象</span></span><br><span class="line">    <span class="comment"># NEW_SURF &quot;新游戏&quot;Surface对象,一张内容为文字的图片  调用字体对象的render()方法,渲染为Surface对象显示</span></span><br><span class="line">    <span class="comment"># NEW_RECT get_rect()方法获取的&quot;新游戏&quot;矩形属性</span></span><br><span class="line">    <span class="keyword">global</span> FPSCLOCK, WINSET, STATICSURF, BASICFONT  <span class="comment"># 定义全局变量</span></span><br><span class="line">    <span class="keyword">global</span> NEW_SURF, NEW_RECT</span><br><span class="line"></span><br><span class="line">    pygame.init()</span><br><span class="line">    FPSCLOCK = pygame.time.Clock()  <span class="comment"># 创建一个Clock对象,并使用变量FPSCLOCK保存</span></span><br><span class="line">    BASICFONT = pygame.font.Font(<span class="string">&#x27;STKAITI.TTF&#x27;</span>, <span class="number">25</span>)  <span class="comment"># 定义返回一个字体对象,并使用变量BASICFONT保存</span></span><br><span class="line">    WINSET, NEW_SURF, NEW_RECT = darwStaticWin()  <span class="comment"># 创建静态窗口</span></span><br><span class="line">    STATICSURF = WINSET.copy()  <span class="comment"># 复制一个静态窗口作为底板</span></span><br><span class="line">    mainBoard = generateNewPuzzle(AUTOMOVE)  <span class="comment"># 初始化列表</span></span><br><span class="line">    msg = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        FPSCLOCK.tick(FPS)  <span class="comment"># 设置帧率</span></span><br><span class="line">        drawBoard(mainBoard, msg)  <span class="comment"># 动态界面绘制</span></span><br><span class="line">        pygame.display.update()  <span class="comment"># 刷新</span></span><br><span class="line">        checkForQuit()  <span class="comment"># 判断是否终止</span></span><br><span class="line">        userInput = getInput(mainBoard)  <span class="comment"># 获取输入</span></span><br><span class="line">        mainBoard, msg = processing(userInput, mainBoard, msg)  <span class="comment"># 输入处理</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="完整版">完整版<a class="header-anchor" href="#完整版">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame, random, sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pygame.<span class="built_in">locals</span> <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> define <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化窗口宽高</span></span><br><span class="line">WINWIDTH = <span class="number">640</span></span><br><span class="line">WINHEIGHT = <span class="number">480</span></span><br><span class="line"><span class="comment"># 初始化推盘行列和空格</span></span><br><span class="line">ROW = <span class="number">3</span></span><br><span class="line">COL = <span class="number">3</span></span><br><span class="line">BLANK = <span class="literal">None</span></span><br><span class="line"><span class="comment"># 颜色预设</span></span><br><span class="line">DARKGRAY = (<span class="number">60</span>, <span class="number">60</span>, <span class="number">60</span>)</span><br><span class="line">WHITE = (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>)</span><br><span class="line">YELLOW = (<span class="number">255</span>, <span class="number">255</span>, <span class="number">193</span>)</span><br><span class="line">GRAY = (<span class="number">128</span>, <span class="number">128</span>, <span class="number">128</span>)</span><br><span class="line">BRIGHTBLUE = (<span class="number">138</span>, <span class="number">228</span>, <span class="number">221</span>)</span><br><span class="line"><span class="comment"># 颜色变量</span></span><br><span class="line">BLANKCOLOR = DARKGRAY</span><br><span class="line">MSGCOLOR = WHITE</span><br><span class="line">BTCOLOR = YELLOW</span><br><span class="line">BTTEXTCOLOR = GRAY</span><br><span class="line">BDCOLOR = BRIGHTBLUE</span><br><span class="line"><span class="comment"># 静态常量</span></span><br><span class="line">BLOCKSIZE = <span class="number">80</span>  <span class="comment"># 方块大小</span></span><br><span class="line">FPS = <span class="number">60</span>  <span class="comment"># 帧率</span></span><br><span class="line"><span class="comment"># 按键事件</span></span><br><span class="line">UP = <span class="string">&#x27;up&#x27;</span></span><br><span class="line">DOWN = <span class="string">&#x27;down&#x27;</span></span><br><span class="line">LEFT = <span class="string">&#x27;left&#x27;</span></span><br><span class="line">RIGHT = <span class="string">&#x27;right&#x27;</span></span><br><span class="line">NEWGAME = <span class="string">&#x27;newgame&#x27;</span></span><br><span class="line"><span class="comment"># 随机移动次数</span></span><br><span class="line">AUTOMOVE = random.randint(<span class="number">50</span>, <span class="number">100</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文本对象创建</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">makeText</span>(<span class="params">text, tColor, btColor, top, left</span>):</span><br><span class="line">    textSurf = BASICFONT.render(text, <span class="literal">True</span>, tColor, btColor)</span><br><span class="line">    textRect = textSurf.get_rect()</span><br><span class="line">    textRect.topleft = (top, left)</span><br><span class="line">    <span class="keyword">return</span> textSurf, textRect  <span class="comment"># 将字体渲染的Surface对象,Surface对象的矩形属性</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制方块在窗口(tilex,tiley)处,adjx与adjy为偏移量,可选参数默认值为0</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">drawTile</span>(<span class="params">tilex, tiley, number, adjx=<span class="number">0</span>, adjy=<span class="number">0</span></span>):</span><br><span class="line">    left, top = getLeftTopOfTile(tilex, tiley)</span><br><span class="line">    <span class="comment"># 绘制方块</span></span><br><span class="line">    pygame.draw.rect(WINSET, BTCOLOR, (left + adjx, top + adjy, BLOCKSIZE, BLOCKSIZE))</span><br><span class="line">    <span class="comment"># 将数字number渲染到方块上</span></span><br><span class="line">    textSurf = BASICFONT.render(<span class="built_in">str</span>(number), <span class="literal">True</span>, BTTEXTCOLOR)</span><br><span class="line">    <span class="comment"># 获取矩形属性</span></span><br><span class="line">    textRect = textSurf.get_rect()</span><br><span class="line">    <span class="comment"># print(textRect)</span></span><br><span class="line">    textRect.center = left + <span class="built_in">int</span>(BLOCKSIZE / <span class="number">2</span>) + adjx, top + <span class="built_in">int</span>(BLOCKSIZE / <span class="number">2</span>) + adjy</span><br><span class="line">    <span class="comment"># print(textRect.center)</span></span><br><span class="line">    <span class="comment"># print(textRect)</span></span><br><span class="line">    <span class="comment"># 绘制到静态窗口上</span></span><br><span class="line">    WINSET.blit(textSurf, textRect)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算方块左上角 距离窗口原点纵横坐标距离</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getLeftTopOfTile</span>(<span class="params">tilex, tiley</span>):</span><br><span class="line">    <span class="comment"># 先计算左上角方块的距离</span></span><br><span class="line">    xMargin = <span class="built_in">int</span>((WINWIDTH - (BLOCKSIZE * COL + (COL - <span class="number">1</span>))) / <span class="number">2</span>)  <span class="comment"># 199</span></span><br><span class="line">    yMargin = <span class="built_in">int</span>((WINHEIGHT - (BLOCKSIZE * ROW + (ROW - <span class="number">1</span>))) / <span class="number">2</span>)  <span class="comment"># 119</span></span><br><span class="line">    <span class="comment"># print(xMargin,yMargin)</span></span><br><span class="line">    <span class="comment"># print(tilex, tiley) ?</span></span><br><span class="line">    left = xMargin + (tilex * BLOCKSIZE) + (tilex - <span class="number">1</span>)</span><br><span class="line">    top = yMargin + (tiley * BLOCKSIZE) + (tiley - <span class="number">1</span>)</span><br><span class="line">    <span class="comment"># print(left, top)</span></span><br><span class="line">    <span class="keyword">return</span> left, top</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 静态界面绘制</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">darwStaticWin</span>():</span><br><span class="line">    winSet = pygame.display.set_mode((WINWIDTH, WINHEIGHT))</span><br><span class="line">    pygame.display.set_caption(<span class="string">&#x27;数字华容道&#x27;</span>)</span><br><span class="line">    image = pygame.image.load(<span class="string">&#x27;bg.jpg&#x27;</span>)</span><br><span class="line">    winSet.blit(image, (<span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">    <span class="comment"># 按钮创建</span></span><br><span class="line">    new_surf, new_rect = makeText(<span class="string">&#x27;新游戏&#x27;</span>, BTTEXTCOLOR, BTCOLOR, WINWIDTH - <span class="number">85</span>, WINHEIGHT - <span class="number">40</span>)</span><br><span class="line">    winSet.blit(new_surf, new_rect)</span><br><span class="line">    <span class="keyword">return</span> winSet, new_surf, new_rect</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 动态界面绘制</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">drawBoard</span>(<span class="params">board, msg</span>):</span><br><span class="line">    <span class="comment"># board 推盘列表</span></span><br><span class="line">    WINSET.blit(STATICSURF, (<span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">    <span class="comment"># 如果消息不为空</span></span><br><span class="line">    <span class="keyword">if</span> msg:</span><br><span class="line">        msgSurf, msgRect = makeText(msg, MSGCOLOR, <span class="literal">None</span>, <span class="number">5</span>, <span class="number">5</span>)</span><br><span class="line">        pygame.image.save(msgSurf, <span class="string">&#x27;msg.png&#x27;</span>)  <span class="comment"># 将msgSurf存为名为msg.png的图片</span></span><br><span class="line">        imgSurf = pygame.image.load(<span class="string">&#x27;msg.png&#x27;</span>)  <span class="comment"># 加载图片</span></span><br><span class="line">        <span class="comment"># print(msgRect)  # &lt;rect(5, 5, 87, 28)&gt;  矩形属性</span></span><br><span class="line">        WINSET.blit(imgSurf, msgRect)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(board)):  <span class="comment"># 3</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(board[<span class="number">0</span>])):  <span class="comment"># 3</span></span><br><span class="line">            <span class="keyword">if</span> board[i][j]:  <span class="comment"># 遍历出不为None的</span></span><br><span class="line">                <span class="comment"># print(board[i][j])</span></span><br><span class="line">                drawTile(i, j, board[i][j])  <span class="comment"># 方块上的数字和所在的行列,绘制方块及数字</span></span><br><span class="line">    <span class="comment"># 绘制外边框</span></span><br><span class="line">    left, top = getLeftTopOfTile(<span class="number">0</span>, <span class="number">0</span>)  <span class="comment"># 198 118</span></span><br><span class="line">    width = COL * BLOCKSIZE  <span class="comment"># 240</span></span><br><span class="line">    height = ROW * BLOCKSIZE  <span class="comment"># 240</span></span><br><span class="line">    pygame.draw.rect(WINSET, BDCOLOR, (left - <span class="number">5</span>, top - <span class="number">5</span>, width + <span class="number">11</span>, height + <span class="number">11</span>), <span class="number">4</span>)  <span class="comment"># 外沿厚度4</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成推盘序列</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getStartingBoard</span>():</span><br><span class="line">    initBoard = []  <span class="comment"># 二维列表</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(COL):  <span class="comment"># 列</span></span><br><span class="line">        i = i + <span class="number">1</span></span><br><span class="line">        column = []</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(ROW):</span><br><span class="line">            column.append(i)</span><br><span class="line">            i += COL  <span class="comment"># 按列添加,非顺序添加</span></span><br><span class="line">        initBoard.append(column)</span><br><span class="line">    initBoard[ROW - <span class="number">1</span>][COL - <span class="number">1</span>] = BLANK  <span class="comment"># 最后一位添加None空格</span></span><br><span class="line">    <span class="comment"># print(initBoard)</span></span><br><span class="line">    <span class="keyword">return</span> initBoard</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化推盘,随机移动numSlides(50~100)次</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generateNewPuzzle</span>(<span class="params">numSlides</span>):</span><br><span class="line">    mianBoard = getStartingBoard()  <span class="comment"># 获取拼图列表</span></span><br><span class="line">    drawBoard(mianBoard, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    lastMove = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(numSlides):</span><br><span class="line">        move = getRandomMove(mianBoard, lastMove)  <span class="comment"># 获取随机移动的方向</span></span><br><span class="line">        slideAnimation(mianBoard, move, <span class="string">&#x27;初始化...&#x27;</span>, <span class="built_in">int</span>(BLOCKSIZE / <span class="number">3</span>))</span><br><span class="line">        makeMove(mianBoard, move)</span><br><span class="line">        lastMove = move</span><br><span class="line">    <span class="keyword">return</span> mianBoard</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 移动交换元素位置</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">makeMove</span>(<span class="params">board, move</span>):</span><br><span class="line">    blankx, blanky = getBlankPosition(board)</span><br><span class="line">    <span class="keyword">if</span> move == UP:</span><br><span class="line">        board[blankx][blanky], board[blankx][blanky + <span class="number">1</span>] = board[blankx][blanky + <span class="number">1</span>], board[blankx][blanky]</span><br><span class="line">    <span class="keyword">elif</span> move == DOWN:</span><br><span class="line">        board[blankx][blanky], board[blankx][blanky - <span class="number">1</span>] = board[blankx][blanky - <span class="number">1</span>], board[blankx][blanky]</span><br><span class="line">    <span class="keyword">elif</span> move == LEFT:</span><br><span class="line">        board[blankx][blanky], board[blankx + <span class="number">1</span>][blanky] = board[blankx + <span class="number">1</span>][blanky], board[blankx][blanky]</span><br><span class="line">    <span class="keyword">elif</span> move == RIGHT:</span><br><span class="line">        board[blankx][blanky], board[blankx - <span class="number">1</span>][blanky] = board[blankx - <span class="number">1</span>][blanky], board[blankx][blanky]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 移动的动画效果</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">slideAnimation</span>(<span class="params">board, direction, msg, animationSpeed</span>):</span><br><span class="line">    blankx, blanky = getBlankPosition(board)  <span class="comment"># 获取空格的行列坐标</span></span><br><span class="line">    <span class="comment"># 获取被移动的方块所在的行列</span></span><br><span class="line">    <span class="keyword">if</span> direction == UP:</span><br><span class="line">        movex = blankx</span><br><span class="line">        movey = blanky + <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> direction == DOWN:</span><br><span class="line">        movex = blankx</span><br><span class="line">        movey = blanky - <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> direction == LEFT:</span><br><span class="line">        movex = blankx + <span class="number">1</span></span><br><span class="line">        movey = blanky</span><br><span class="line">    <span class="keyword">elif</span> direction == RIGHT:</span><br><span class="line">        movex = blankx - <span class="number">1</span></span><br><span class="line">        movey = blanky</span><br><span class="line">    drawBoard(board, msg)</span><br><span class="line">    BASESURF = WINSET.copy()  <span class="comment"># 复制此刻背景作为Surface对象</span></span><br><span class="line">    <span class="comment"># 绘制空白块</span></span><br><span class="line">    moveLeft, moveTop = getLeftTopOfTile(movex, movey)</span><br><span class="line">    pygame.draw.rect(BASESURF, BLANKCOLOR, (moveLeft, moveTop, BLOCKSIZE, BLOCKSIZE))</span><br><span class="line">    <span class="comment"># 连续绘制被移动的方块</span></span><br><span class="line">    <span class="comment"># print(animationSpeed)  # 26 方块移动速度</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, BLOCKSIZE, animationSpeed):</span><br><span class="line">        checkForQuit()</span><br><span class="line">        WINSET.blit(BASESURF, (<span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">        <span class="keyword">if</span> direction == UP:</span><br><span class="line">            drawTile(movex, movey, board[movex][movey], <span class="number">0</span>, -i)</span><br><span class="line">        <span class="keyword">if</span> direction == DOWN:</span><br><span class="line">            drawTile(movex, movey, board[movex][movey], <span class="number">0</span>, i)</span><br><span class="line">        <span class="keyword">if</span> direction == LEFT:</span><br><span class="line">            drawTile(movex, movey, board[movex][movey], -i, <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">if</span> direction == RIGHT:</span><br><span class="line">            drawTile(movex, movey, board[movex][movey], i, <span class="number">0</span>)</span><br><span class="line">        pygame.display.update()  <span class="comment"># 更新界面</span></span><br><span class="line">        FPSCLOCK.tick(FPS)  <span class="comment"># 控制帧率</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断无效移动</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">isValidMove</span>(<span class="params">board, direction</span>):</span><br><span class="line">    blankx, blanky = getBlankPosition(board)</span><br><span class="line">    <span class="keyword">if</span> blankx == <span class="number">0</span> <span class="keyword">and</span> direction == RIGHT:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">elif</span> blankx == <span class="number">2</span> <span class="keyword">and</span> direction == LEFT:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">elif</span> blanky == <span class="number">0</span> <span class="keyword">and</span> direction == DOWN:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">elif</span> blanky == <span class="number">2</span> <span class="keyword">and</span> direction == UP:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取随机移动的方向</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getRandomMove</span>(<span class="params">board, lastMove=<span class="literal">None</span></span>):</span><br><span class="line">    validMoves = [UP, DOWN, LEFT, RIGHT]</span><br><span class="line">    <span class="keyword">if</span> lastMove == UP <span class="keyword">or</span> <span class="keyword">not</span> isValidMove(board, DOWN):</span><br><span class="line">        validMoves.remove(DOWN)</span><br><span class="line">    <span class="keyword">if</span> lastMove == DOWN <span class="keyword">or</span> <span class="keyword">not</span> isValidMove(board, UP):</span><br><span class="line">        validMoves.remove(UP)</span><br><span class="line">    <span class="keyword">if</span> lastMove == LEFT <span class="keyword">or</span> <span class="keyword">not</span> isValidMove(board, RIGHT):</span><br><span class="line">        validMoves.remove(RIGHT)</span><br><span class="line">    <span class="keyword">if</span> lastMove == RIGHT <span class="keyword">or</span> <span class="keyword">not</span> isValidMove(board, LEFT):</span><br><span class="line">        validMoves.remove(LEFT)</span><br><span class="line">    <span class="keyword">return</span> random.choice(validMoves)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getBlankPosition</span>(<span class="params">board</span>):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(COL):</span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(ROW):</span><br><span class="line">            <span class="keyword">if</span> board[x][y] == BLANK:</span><br><span class="line">                <span class="keyword">return</span> (x, y)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getSpotClicked</span>(<span class="params">board, x, y</span>):</span><br><span class="line">    <span class="keyword">for</span> tilex <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(board)):</span><br><span class="line">        <span class="keyword">for</span> tiley <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(board[<span class="number">0</span>])):</span><br><span class="line">            left, top = getLeftTopOfTile(tilex, tiley)</span><br><span class="line">            tileRect = pygame.Rect(left, top, BLOCKSIZE, BLOCKSIZE)</span><br><span class="line">            <span class="keyword">if</span> tileRect.collidepoint(x, y):  <span class="comment"># 如果产生碰撞</span></span><br><span class="line">                <span class="keyword">return</span> tilex, tiley  <span class="comment"># 返回行列</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span>, <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取用户输入</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getInput</span>(<span class="params">mainBoard</span>):</span><br><span class="line">    events = pygame.event.get()</span><br><span class="line">    userInput = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> events:</span><br><span class="line">        <span class="keyword">if</span> event.<span class="built_in">type</span> == MOUSEBUTTONUP:</span><br><span class="line">            <span class="comment"># 获取位置关系</span></span><br><span class="line">            spotx, spoty = getSpotClicked(mainBoard, event.pos[<span class="number">0</span>], event.pos[<span class="number">1</span>])</span><br><span class="line">            <span class="comment"># 坐标不在拼图区域,点击的新游戏</span></span><br><span class="line">            <span class="keyword">if</span> (spotx, spoty) == (<span class="literal">None</span>, <span class="literal">None</span>) <span class="keyword">and</span> NEW_RECT.collidepoint(event.pos):</span><br><span class="line">                userInput = NEWGAME</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment"># 如果已完成,点击非选项时不移动</span></span><br><span class="line">                <span class="keyword">if</span> mainBoard == getStartingBoard():</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="comment"># 点击位置是否在BLANK旁边</span></span><br><span class="line">                blankx, blanky = getBlankPosition(mainBoard)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> spotx == blankx + <span class="number">1</span> <span class="keyword">and</span> spoty == blanky:</span><br><span class="line">                    userInput = LEFT  <span class="comment"># 设置移动方向</span></span><br><span class="line">                <span class="keyword">elif</span> spotx == blankx - <span class="number">1</span> <span class="keyword">and</span> spoty == blanky:</span><br><span class="line">                    userInput = RIGHT</span><br><span class="line">                <span class="keyword">elif</span> spotx == blankx <span class="keyword">and</span> spoty == blanky + <span class="number">1</span>:</span><br><span class="line">                    userInput = UP</span><br><span class="line">                <span class="keyword">elif</span> spotx == blankx <span class="keyword">and</span> spoty == blanky - <span class="number">1</span>:</span><br><span class="line">                    userInput = DOWN</span><br><span class="line">    <span class="keyword">return</span> userInput</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对用户输入进行处理</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">processing</span>(<span class="params">userInput, mainBoard, msg</span>):</span><br><span class="line">    <span class="keyword">if</span> mainBoard == getStartingBoard():</span><br><span class="line">        msg = <span class="string">&#x27;完成&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        msg = <span class="string">&#x27;通过鼠标移动方块&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> userInput:</span><br><span class="line">        <span class="comment"># 功能按钮  新游戏处理:</span></span><br><span class="line">        <span class="keyword">if</span> userInput == NEWGAME:</span><br><span class="line">            getStartingBoard()  <span class="comment"># 初始化推盘列表</span></span><br><span class="line">            mainBoard = generateNewPuzzle(AUTOMOVE)  <span class="comment"># 随机次数移动打乱</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># 方块移动</span></span><br><span class="line">            slideAnimation(mainBoard, userInput, msg, <span class="number">8</span>)</span><br><span class="line">            makeMove(mainBoard, userInput)</span><br><span class="line">    <span class="keyword">return</span> mainBoard, msg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 资源回收与程序退出</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">terminate</span>():</span><br><span class="line">    pygame.quit()  <span class="comment"># 模块卸载</span></span><br><span class="line">    sys.exit()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出判断</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">checkForQuit</span>():</span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get(QUIT):  <span class="comment"># 获取所有可能会导致退出的事件,存在就执行退出</span></span><br><span class="line">        terminate()  <span class="comment"># 执行退出</span></span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get(KEYUP):  <span class="comment"># 按下ESC键退出</span></span><br><span class="line">        <span class="keyword">if</span> event.key == K_ESCAPE:</span><br><span class="line">            terminate()</span><br><span class="line">        pygame.event.post(event)  <span class="comment"># 发送事件至消息列队</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># FPSCLOCK Clock对象</span></span><br><span class="line">    <span class="comment"># WINSET 窗体Surface对象</span></span><br><span class="line">    <span class="comment"># STATICSURF 静态窗体Surface对象</span></span><br><span class="line">    <span class="comment"># BASICFONT 字体对象</span></span><br><span class="line">    <span class="comment"># NEW_SURF &quot;新游戏&quot;Surface对象,一张内容为文字的图片  调用字体对象的render()方法,渲染为Surface对象显示</span></span><br><span class="line">    <span class="comment"># NEW_RECT get_rect()方法获取的&quot;新游戏&quot;矩形属性</span></span><br><span class="line">    <span class="keyword">global</span> FPSCLOCK, WINSET, STATICSURF, BASICFONT  <span class="comment"># 定义全局变量</span></span><br><span class="line">    <span class="keyword">global</span> NEW_SURF, NEW_RECT</span><br><span class="line"></span><br><span class="line">    pygame.init()</span><br><span class="line">    FPSCLOCK = pygame.time.Clock()  <span class="comment"># 创建一个Clock对象,并使用变量FPSCLOCK保存</span></span><br><span class="line">    BASICFONT = pygame.font.Font(<span class="string">&#x27;STKAITI.TTF&#x27;</span>, <span class="number">25</span>)  <span class="comment"># 定义返回一个字体对象,并使用变量BASICFONT保存</span></span><br><span class="line">    WINSET, NEW_SURF, NEW_RECT = darwStaticWin()  <span class="comment"># 创建静态窗口</span></span><br><span class="line">    STATICSURF = WINSET.copy()  <span class="comment"># 复制一个静态窗口作为底板</span></span><br><span class="line">    mainBoard = generateNewPuzzle(AUTOMOVE)  <span class="comment"># 初始化列表</span></span><br><span class="line">    msg = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        FPSCLOCK.tick(FPS)  <span class="comment"># 设置帧率</span></span><br><span class="line">        drawBoard(mainBoard, msg)  <span class="comment"># 动态界面绘制</span></span><br><span class="line">        pygame.display.update()  <span class="comment"># 刷新</span></span><br><span class="line">        checkForQuit()  <span class="comment"># 判断是否终止</span></span><br><span class="line">        userInput = getInput(mainBoard)  <span class="comment"># 获取输入</span></span><br><span class="line">        mainBoard, msg = processing(userInput, mainBoard, msg)  <span class="comment"># 输入处理</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="http://qiniu.yujing.fit/typora_img/%E6%9C%AA%E5%91%BD%E5%90%8D%E6%96%87%E4%BB%B6.png" alt="未命名文件"></p><h3 id="总结">总结<a class="header-anchor" href="#总结">#</a></h3><p>只一个函数没给出,作用是判断无效移动</p><p><strong>错误原因:</strong></p><p>错误判断了行与列,blankx代表列,blanky代表行;且0为第一行,2为最后一行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 判断无效移动</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">isValidMove</span>(<span class="params">board, direction</span>):</span><br><span class="line">    blankx, blanky = getBlankPosition(board)</span><br><span class="line">    <span class="keyword">if</span> blankx == <span class="number">0</span> <span class="keyword">and</span> direction == RIGHT:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">elif</span> blankx == <span class="number">2</span> <span class="keyword">and</span> direction == LEFT:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">elif</span> blanky == <span class="number">0</span> <span class="keyword">and</span> direction == DOWN:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">elif</span> blanky == <span class="number">2</span> <span class="keyword">and</span> direction == UP:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure><h3 id="错误排查">错误排查<a class="header-anchor" href="#错误排查">#</a></h3><p>1、TypeError：darwStaticWin()缺少两个必需的位置参数：“BTTEXTCOLOR”和“BTCOLOR”</p><p>2、(&lt;class‘TypeError’&gt;，TypeError(‘isValidMove()接受0个位置参数，但给出了2个’)，&lt;位于0x000002312E0D7740的回溯对象‘)。</p><p>3、(&lt;class‘IndexError’&gt;，IndexError(‘列出索引超出范围’)，&lt;traceback object at 0x000001478DB88800&gt;)。</p><p>4、TypeError：DrawBoard()缺少1个必需的位置参数：‘msg’</p><p>5、Unbound LocalError：赋值前引用的局部变量‘event’</p><p>6、IndexError: list index out of range</p><h3 id="实现思路">实现思路<a class="header-anchor" href="#实现思路">#</a></h3><h4 id="1、">1、<a class="header-anchor" href="#1、">#</a></h4><p>整个游戏以MVC的设计模式进行设计，采用自顶向下的方式，将总问题逐渐向下分层，直到分为一个一个能被解决的小问题，实现整个游戏。</p><p>将游戏分为Model（模型层）-View（视图层）-Controller（控制层），分层级一层一层去实现，将大问题分割为小问题。</p><h4 id="2、Model">2、Model<a class="header-anchor" href="#2、Model">#</a></h4><p>model部分应实现的推盘序列的生成与存储，</p><ul class="lvl-0"><li class="lvl-2"><p><strong>getStartingBoard</strong>函数，根据行列生成一个二级列表，返回 initBoard ，表示的是初始的二级列表顺序，可用于判断游戏是否完成。</p></li><li class="lvl-2"><p><strong>makeMove</strong>函数，接收列表和移动方向两个参数，将交换位置后的序列存储，不返回结果。一般与移动的动画效果函数<strong>slideAnimation</strong> 一起使用，每次移动之后将序列存储一次。应该可以写在一起，待尝试。</p></li></ul><h4 id="3、View">3、View<a class="header-anchor" href="#3、View">#</a></h4><p>view部分负责视图的显示，包括有提示信息msg、推盘方块、外边框、按钮等。</p><ul class="lvl-0"><li class="lvl-2"><p>首先是 <strong>darwStaticWin</strong> 函数，用于创建窗口以及设置窗口标题、背景、图片、文字显示等。由于经常会使用到绘制文字显示，为了代码复用，精简代码，将其封装为一个函数<strong>makeText</strong>，提供要绘制的文本、文字颜色、背景色、绘制位置等参数，返回一个Surface对象与其矩形属性&lt;rect(555, 440, 75, 28)&gt;，分别表示距离y轴的距离、距离x轴的距离、矩形的长和高。共有两处使用，体会其使用。</p></li><li class="lvl-2"><p>按钮的实质，其实就是一个带背景色的文字显示。</p></li><li class="lvl-2"><ol><li class="lvl-5"></li></ol>   <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">new_surf, new_rect = makeText(<span class="string">&#x27;新游戏&#x27;</span>, BTTEXTCOLOR, BTCOLOR, WINWIDTH - <span class="number">85</span>, WINHEIGHT - <span class="number">40</span>)</span><br><span class="line">winSet.blit(new_surf, new_rect)</span><br></pre></td></tr></table></figure><ol start="2"><li class="lvl-5"><pre><code class="language-py">    if msg:        msgSurf, msgRect = makeText(msg, MSGCOLOR, None, 5, 5)        pygame.image.save(msgSurf, 'msg.png')  # 将msgSurf存为名为msg.png的图片        imgSurf = pygame.image.load('msg.png')  # 加载图片        WINSET.blit(imgSurf, msgRect)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">     可直接绘制msgSurf，不必存为图片加载图片。</span><br><span class="line"></span><br><span class="line">- **drawBoard**函数，用于绘制动态界面，负责了绘制消息、绘制序列列表方块和游戏整个方块的外边框。</span><br><span class="line"></span><br><span class="line">  利用一个双层循环，循环序列列表，调用**drawTile**函数，，绘制方块及数字。而**drawTile **函数调用了**getLeftTopOfTile**函数，</span><br><span class="line"></span><br><span class="line">  输入参数行列，根据行列,计算方块左上角 距离窗口原点 纵横坐标距离，并返回距离y轴、x轴的距离，用于确定绘制的方块位置。</span><br><span class="line"></span><br><span class="line">  **getLeftTopOfTile**先把整个拼盘当作一个整体，计算出相对于窗口的中心位置，但是并不绘制一整个方块，而是根据行列，进行一定的偏移，绘制出全部方块及渲染数字到方块上。</span><br><span class="line">  </span><br><span class="line">  最后传入行列（0，0），即最左上角的方块的行列，确定其距离x，y轴的距离，绘制整个拼盘的外边框。  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  至此，消息、方块、按钮等都以绘制完成，视图层呈现出来了。</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">#### 4、Controller</span><br><span class="line"></span><br><span class="line">controller负责控制整个游戏的逻辑运行，包括推盘序列初始化、接收用户输入、对用户输入进行处理、以及退出游戏。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;1. 视图呈现之后，但是推盘序列最初始还是顺序排列的，我们需要将它打乱才可以进行游戏，通过移动将推盘完成顺序排列。</span><br><span class="line">&gt;   - **generateNewPuzzle**通过形参numSlides，获取随机移动的次数，目的是打乱推盘序列。numSlides的实参就是AUTOMOVE全局变量，通过rondom模块，随机获取的一个50-100之间的整数。</span><br><span class="line">&gt;   - 首先通过调用getStartingBoard函数，获取初始的推盘序列，drawBoard传入序列 绘制界面。</span><br><span class="line">&gt;   - 定义初始移动方向为None，**getRandomMove**传入序列以及方向，获取随机移动方向，移动方向有4个，但是当空格在推盘第一行时，它是不可以向上移动的，所以应从4个移动方向中，移除无效的移动方向。其他类似判断。random.choice将从列表中随机获取一个移动方向。**isValidMove**用于判断无效的移动方向。</span><br><span class="line">&gt;   - **getInput**获取用户输入，先定义变量userInput初始值为None，根据获取的点击位置，通过**getSpotClicked**函数，返回点击的方块所在行列，如与方块未产生碰撞，则返回（None，None），表示点击的空白区域。</span><br><span class="line">&gt;   - 如果序列与初始序列相同，表示已完成，不予点击，直接跳出。</span><br><span class="line">&gt;   - 但是点击方块，也并不能让所有方块生效移动，只有当点击方块的位置在空格旁边的时候，判断被点击方块与空格的位置关系，如果点击方块在空格右边，设置移动方向向左，其他类似。函数返回用户输入userInput。</span><br><span class="line">&gt;   - **processing**函数接收getInput的返回值，序列，以及应设置的消息，对用户的输入进行处理，判断推盘状态，是待完成还是已完成，设置对应的提示msg。再对用户输入判断，点击的新按钮还是移动方向。做出对应的相应。</span><br><span class="line">&gt;   - 在**checkForQuit**判断用户是否退出。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 随机生成乱序二维列表</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line">import random</span><br><span class="line"></span><br><span class="line">COL = 4</span><br><span class="line">ROW = COL</span><br><span class="line"></span><br><span class="line">x = list(range(1, COL * ROW))</span><br><span class="line">x.append(None)</span><br><span class="line">print(x)</span><br><span class="line">random.shuffle(x)</span><br><span class="line">print(x)</span><br><span class="line"></span><br><span class="line">init = []</span><br><span class="line"></span><br><span class="line">for i in range(COL):</span><br><span class="line">    clunm = []</span><br><span class="line">    for j in range(ROW):</span><br><span class="line">        clunm.append(x[COL*i+j])</span><br><span class="line">    init.append(clunm)</span><br><span class="line"></span><br><span class="line">print(init)</span><br></pre></td></tr></table></figure></code></pre></li></ol></li></ul><h3 id="二维元祖与列表相互转换">二维元祖与列表相互转换<a class="header-anchor" href="#二维元祖与列表相互转换">#</a></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 列表转换元祖</span><br><span class="line">mianBoard = [[6, 7, 1], [None, 3, 2], [8, 4, 5]]</span><br><span class="line">RESETBoard = tuple(tuple(tuple(items)) for items in tuple(mianBoard))</span><br><span class="line">print(RESETBoard)</span><br><span class="line">&gt;&gt;&gt;((6, 7, 1), (None, 3, 2), (8, 4, 5))</span><br><span class="line"></span><br><span class="line"># 元祖转换列表</span><br><span class="line">RESETBoard = ((6, 7, 1), (None, 3, 2), (8, 4, 5))</span><br><span class="line">mianBoard = list(list(list(items)) for items in list(RESETBoard))</span><br><span class="line">print(mianBoard)</span><br><span class="line">&gt;&gt;&gt;[[6, 7, 1], [None, 3, 2], [8, 4, 5]]</span><br></pre></td></tr></table></figure><h2 id="算法相关">算法相关<a class="header-anchor" href="#算法相关">#</a></h2><h3 id="深度优先搜索DFS">深度优先搜索DFS<a class="header-anchor" href="#深度优先搜索DFS">#</a></h3><p><strong>深度优先搜索算法</strong>（英语：Depth-First-Search，DFS）是一种用于遍历或搜索<a href="https://zh.wikipedia.org/wiki/%E6%A0%91_(%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84)">树</a>或<a href="https://zh.wikipedia.org/wiki/%E5%9B%BE_(%E6%95%B0%E5%AD%A6)">图</a>的<a href="https://zh.wikipedia.org/wiki/%E7%AE%97%E6%B3%95">算法</a>。这个算法会尽可能深的搜索树的分支。当节点v的所在边都己被探寻过，搜索将回溯到发现节点v的那条边的起始节点。这一过程一直进行到已发现从源节点可达的所有节点为止。如果还存在未被发现的节点，则选择其中一个作为源节点并重复以上过程，整个进程反复进行直到所有节点都被访问为止。[<a href="https://zh.wikipedia.org/wiki/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2#cite_note-ItoA-1">1]</a>（p. 603）这种算法不会根据图的结构等信息调整执行策略[<a href="https://zh.wikipedia.org/wiki/Wikipedia:%E5%88%97%E6%98%8E%E6%9D%A5%E6%BA%90">来源请求]</a>。</p><p>深度优先搜索是图论中的经典算法，利用深度优先搜索算法可以产生目标图的<a href="https://zh.wikipedia.org/wiki/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F">拓扑排序</a>表[<a href="https://zh.wikipedia.org/wiki/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2#cite_note-ItoA-1">1]</a>（p. 612），利用拓扑排序表可以方便的解决很多相关的<a href="https://zh.wikipedia.org/wiki/%E5%9B%BE%E8%AE%BA">图论</a>问题，如无权最长路径问题等等。</p><h3 id="广度优先搜索BFS">广度优先搜索BFS<a class="header-anchor" href="#广度优先搜索BFS">#</a></h3><p>宽度优先<a href="https://baike.baidu.com/item/%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/2988274">搜索算法</a>（又称广度优先搜索）是最简便的图的搜索算法之一，这一算法也是很多重要的图的算法的原型。Dijkstra<a href="https://baike.baidu.com/item/%E5%8D%95%E6%BA%90%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84/6975204">单源最短路径</a>算法和Prim<a href="https://baike.baidu.com/item/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91">最小生成树</a>算法都采用了和宽度优先搜索类似的思想。其别名又叫BFS，属于一种盲目搜寻法，目的是系统地展开并检查图中的所有节点，以找寻结果。换句话说，它并不考虑结果的可能位置，彻底地搜索整张图，直到找到结果为止。</p><p><strong>广度优先搜索算法</strong>（英语：Breadth-First Search，缩写为BFS），又译作<strong>宽度优先搜索</strong>，或<strong>横向优先搜索</strong>，是一种<a href="https://zh.wikipedia.org/wiki/%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95">图形搜索算法</a>。简单的说，BFS是从<a href="https://zh.wikipedia.org/wiki/%E6%A0%91_(%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84)#%E6%9C%AF%E8%AF%AD">根节点</a>开始，沿着树的宽度遍历树的<a href="https://zh.wikipedia.org/wiki/%E8%8A%82%E7%82%B9">节点</a>。如果所有节点均被访问，则算法中止。广度优先搜索的实现一般采用open-closed表.</p><p>BFS是一种<a href="https://zh.wikipedia.org/wiki/%E6%9A%B4%E5%8A%9B%E6%90%9C%E7%B4%A2">暴力搜索</a>算法，目的是系统地展开并检查<a href="https://zh.wikipedia.org/wiki/%E5%9B%BE">图</a>中的所有节点，以找寻结果。换句话说，它并不考虑结果的可能地址，彻底地搜索整张图，直到找到结果为止。BFS并不使用<a href="https://zh.wikipedia.org/w/index.php?title=%E5%95%9F%E7%99%BC%E5%BC%8F%E6%90%9C%E7%B4%A2&amp;action=edit&amp;redlink=1">经验法则算法</a>。</p><h3 id="贪心算法">贪心算法<a class="header-anchor" href="#贪心算法">#</a></h3><p><strong>贪心算法</strong>（英语：greedy algorithm），又称<strong>贪婪算法</strong>，是一种在每一步选择中都采取在当前状态下最好或最优（即最有利）的选择，从而希望导致结果是最好或最优的<a href="https://zh.wikipedia.org/wiki/%E7%AE%97%E6%B3%95">算法</a>。[<a href="https://zh.wikipedia.org/wiki/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95#cite_note-paike-1">1]</a>比如在<a href="https://zh.wikipedia.org/wiki/%E6%97%85%E8%A1%8C%E6%8E%A8%E9%94%80%E5%91%98%E9%97%AE%E9%A2%98">旅行推销员问题</a>中，如果旅行员每次都选择最近的城市，那这就是一种贪心算法。</p><p>贪心算法在有最优子结构的问题中尤为有效。最优子结构的意思是局部最优解能决定全局最优解。简单地说，问题能够分解成子问题来解决，子问题的最优解能递推到最终问题的最优解。</p><p>贪心算法与<a href="https://zh.wikipedia.org/wiki/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92">动态规划</a>的不同在于它对每个子问题的解决方案都做出选择，不能回退。动态规划则会保存以前的运算结果，并根据以前的结果对当前进行选择，有回退功能。</p><p>贪心法可以解决一些<a href="https://zh.wikipedia.org/wiki/%E6%9C%80%E4%BC%98%E5%8C%96">最优化</a>问题，如：求<a href="https://zh.wikipedia.org/wiki/%E5%9B%BE">图</a>中的<a href="https://zh.wikipedia.org/wiki/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91">最小生成树</a>、求<a href="https://zh.wikipedia.org/wiki/%E5%93%88%E5%A4%AB%E6%9B%BC%E7%BC%96%E7%A0%81">哈夫曼编码</a>……对于其他问题，贪心法一般不能得到我们所要求的答案。一旦一个问题可以通过贪心法来解决，那么贪心法一般是解决这个问题的最好办法。由于贪心法的高效性以及其所求得的答案比较接近最优结果，贪心法也可以用作辅助算法或者直接解决一些要求结果不特别精确的问题。在不同情况，选择最优的解，可能会导致辛普森悖论（Simpson’s Paradox），不一定出现最优的解。</p><p>贪心算法在数据科学领域被广泛应用，特别是金融工程。其中一个贪心算法例子就是Ensemble method。</p><ol><li class="lvl-3"><p>创建数学模型来描述问题。</p></li><li class="lvl-3"><p>把求解的问题分成若干个<strong>子问题</strong>。</p></li><li class="lvl-3"><p>对每一子问题求解，得到子问题的局部最优解。</p></li><li class="lvl-3"><p>把子问题的解局部最优解合成原来解问题的一个解。</p></li></ol><p>实现该算法的过程：从问题的某一初始解出发；while 能朝给定总目标前进一步 do，求出可行解的一个解元素；最后，由所有解元素组合成问题的一个可行解。</p><h3 id="A-算法">A*算法<a class="header-anchor" href="#A-算法">#</a></h3><p><strong>A*搜索算法</strong>（A* search algorithm）是一种在图形平面上，有多个<a href="https://zh.wikipedia.org/wiki/%E7%AF%80%E9%BB%9E">节点</a>的<a href="https://zh.wikipedia.org/wiki/%E8%B7%AF%E5%BE%84">路径</a>，求出最低通过<a href="https://zh.wikipedia.org/wiki/%E6%88%90%E6%9C%AC">成本</a>的<a href="https://zh.wikipedia.org/wiki/%E7%AE%97%E6%B3%95">算法</a>。常用于游戏中的NPC的移动计算，或<a href="https://zh.wikipedia.org/wiki/%E7%BD%91%E7%BB%9C%E6%B8%B8%E6%88%8F">网络游戏</a>的BOT的移动计算上。</p><p>该算法综合了<a href="https://zh.wikipedia.org/w/index.php?title=%E6%9C%80%E8%89%AF%E5%84%AA%E5%85%88%E6%90%9C%E7%B4%A2&amp;action=edit&amp;redlink=1">最良优先搜索</a>和<a href="https://zh.wikipedia.org/wiki/Dijkstra%E7%AE%97%E6%B3%95">Dijkstra算法</a>的优点：在进行启发式搜索提高算法效率的同时，可以保证找到一条最优路径（基于评估函数）。</p><p>在此算法中，如果以{\displaystyle g(n)}<img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/d4ad18070e494503403daf39398e711c1378348e" alt="g(n)">表示从起点到任意顶点{\displaystyle n}<img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/a601995d55609f2d9f5e233e36fbe9ea26011b3b" alt="n">的实际距离，{\displaystyle h(n)}<img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/125976c5970a395422e1baf572a26f31ae5e0b7d" alt="h(n)">表示任意顶点{\displaystyle n}<img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/a601995d55609f2d9f5e233e36fbe9ea26011b3b" alt="n">到目标顶点的估算距离（根据所采用的评估函数的不同而变化），那么A*算法的估算函数为：</p><p>这个公式遵循以下特性：</p><ul class="lvl-0"><li class="lvl-2"><p>如果{\displaystyle g(n)}<img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/d4ad18070e494503403daf39398e711c1378348e" alt="g(n)">为0，即只计算任意顶点{\displaystyle n}<img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/a601995d55609f2d9f5e233e36fbe9ea26011b3b" alt="n">到目标的评估函数{\displaystyle h(n)}<img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/125976c5970a395422e1baf572a26f31ae5e0b7d" alt="h(n)">，而不计算起点到顶点{\displaystyle n}<img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/a601995d55609f2d9f5e233e36fbe9ea26011b3b" alt="n">的距离，则算法转化为使用贪心策略的<a href="https://zh.wikipedia.org/w/index.php?title=%E6%9C%80%E8%89%AF%E5%84%AA%E5%85%88%E6%90%9C%E7%B4%A2&amp;action=edit&amp;redlink=1">最良优先搜索</a>，速度最快，但可能得不出最优解；</p></li><li class="lvl-2"><p>如果{\displaystyle h(n)}<img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/125976c5970a395422e1baf572a26f31ae5e0b7d" alt="h(n)">不大于顶点{\displaystyle n}<img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/a601995d55609f2d9f5e233e36fbe9ea26011b3b" alt="n">到目标<a href="https://zh.wikipedia.org/wiki/%E9%A1%B6%E7%82%B9_(%E5%9B%BE%E8%AE%BA)">顶点</a>的实际距离，则一定可以求出最优解，而且{\displaystyle h(n)}<img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/125976c5970a395422e1baf572a26f31ae5e0b7d" alt="h(n)">越小，需要计算的节点越多，算法效率越低，常见的评估函数有——<a href="https://zh.wikipedia.org/wiki/%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97%E8%B7%9D%E7%A6%BB">欧几里得距离</a>、<a href="https://zh.wikipedia.org/wiki/%E6%9B%BC%E5%93%88%E9%A0%93%E8%B7%9D%E9%9B%A2">曼哈顿距离</a>、<a href="https://zh.wikipedia.org/wiki/%E5%88%87%E6%AF%94%E9%9B%AA%E5%A4%AB%E8%B7%9D%E7%A6%BB">切比雪夫距离</a>；</p></li><li class="lvl-2"><p>如果{\displaystyle h(n)}<img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/125976c5970a395422e1baf572a26f31ae5e0b7d" alt="h(n)">为0，即只需求出起点到任意顶点{\displaystyle n}<img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/a601995d55609f2d9f5e233e36fbe9ea26011b3b" alt="n">的最短路径{\displaystyle g(n)}<img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/d4ad18070e494503403daf39398e711c1378348e" alt="g(n)">，而不计算任何评估函数{\displaystyle h(n)}<img src="https://wikimedia.org/api/rest_v1/media/math/render/svg/125976c5970a395422e1baf572a26f31ae5e0b7d" alt="h(n)">，则转化为<a href="https://zh.wikipedia.org/w/index.php?title=%E5%8D%95%E6%BA%90%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84&amp;action=edit&amp;redlink=1">单源最短路径</a>问题，即<a href="https://zh.wikipedia.org/wiki/Dijkstra%E7%AE%97%E6%B3%95">Dijkstra算法</a>，此时需要计算最多的顶点；</p></li></ul><h2 id="文件的使用">文件的使用<a class="header-anchor" href="#文件的使用">#</a></h2><h3 id="–用户登录">–用户登录<a class="header-anchor" href="#–用户登录">#</a></h3><p>先创建一个目录falg</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">c_flag</span>():</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;flag&quot;</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        file.write(<span class="string">&quot;1&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">init</span>():</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;u_root&quot;</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        root = &#123;<span class="string">&quot;username&quot;</span>: <span class="string">&quot;root&quot;</span>, <span class="string">&quot;password&quot;</span>: <span class="string">&quot;123456&quot;</span>&#125;</span><br><span class="line">        file.write(<span class="built_in">str</span>(root))</span><br><span class="line">    os.mkdir(<span class="string">&quot;users&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">user_login</span>():</span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;********用户登录*********&quot;</span>)</span><br><span class="line">        user_name = <span class="built_in">input</span>(<span class="string">&quot;请输入账户名：&quot;</span>)</span><br><span class="line">        user_psw = <span class="built_in">input</span>(<span class="string">&quot;请输入密码：&quot;</span>)</span><br><span class="line">        user_list = os.listdir(<span class="string">&quot;./users&quot;</span>)</span><br><span class="line"></span><br><span class="line">        flag = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> user <span class="keyword">in</span> user_list:</span><br><span class="line">            <span class="keyword">if</span> user == user_name:</span><br><span class="line">                flag = <span class="number">1</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;登录中。。。。。&quot;</span>)</span><br><span class="line">                file = <span class="string">&quot;./users/&quot;</span> + user_name</span><br><span class="line">                file_user = <span class="built_in">open</span>(file)</span><br><span class="line">                user_info = <span class="built_in">eval</span>(file_user.read())</span><br><span class="line">                <span class="keyword">if</span> user_psw == user_info[<span class="string">&quot;u_psw&quot;</span>]:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;登录成功&quot;</span>)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;-----------------&quot;</span>)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;密码错误&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> flag == <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> flag == <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;没有此用户，请先注册&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;参数有误&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">user_register</span>():</span><br><span class="line">    user_username = <span class="built_in">input</span>(<span class="string">&quot;请输入账户名：&quot;</span>)</span><br><span class="line">    user_psw = <span class="built_in">input</span>(<span class="string">&quot;请输入密码：&quot;</span>)</span><br><span class="line">    user_name = <span class="built_in">input</span>(<span class="string">&quot;请输入昵称：&quot;</span>)</span><br><span class="line">    user = &#123;<span class="string">&quot;u_username&quot;</span>: user_username, <span class="string">&quot;u_psw&quot;</span>: user_psw, <span class="string">&quot;u_name&quot;</span>: user_name&#125;</span><br><span class="line">    user_path = <span class="string">&quot;./users/&quot;</span> + user_username</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(user_path, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> file_user:</span><br><span class="line">        file_user.write(<span class="built_in">str</span>(user))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">root_login</span>():</span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;*******管理员登录*******&quot;</span>)</span><br><span class="line">        root_name = <span class="built_in">input</span>(<span class="string">&quot;请输入账户名：&quot;</span>)</span><br><span class="line">        root_psw = <span class="built_in">input</span>(<span class="string">&quot;请输入密码：&quot;</span>)</span><br><span class="line">        file_root = <span class="built_in">open</span>(<span class="string">&quot;u_root&quot;</span>)</span><br><span class="line">        root = <span class="built_in">eval</span>(file_root.read())</span><br><span class="line">        <span class="keyword">if</span> root_name == root[<span class="string">&quot;username&quot;</span>] <span class="keyword">and</span> root_psw == root[<span class="string">&quot;password&quot;</span>]:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;登录成功&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;账号或密码有误&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">user_select</span>():</span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        user_type_select = <span class="built_in">input</span>(<span class="string">&quot;请选择用户类型:&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> user_type_select == <span class="string">&quot;1&quot;</span>:</span><br><span class="line">            root_login()</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> user_type_select == <span class="string">&quot;2&quot;</span>:</span><br><span class="line">            <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">                select = <span class="built_in">input</span>(<span class="string">&quot;是否需要注册？(y/n)&quot;</span>)</span><br><span class="line">                <span class="keyword">if</span> select == <span class="string">&quot;y&quot;</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;------用户注册------&quot;</span>)</span><br><span class="line">                    user_register()</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">elif</span> select == <span class="string">&quot;n&quot;</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;------用户登录------&quot;</span>)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;输入有误，请重新输入！(y/n)&quot;</span>)</span><br><span class="line">            user_login()</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;输入有误，请重新输入！(1/2)&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">print_login_menu</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;-----用户选择-----&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;1-管理员登录&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;2-用户登录&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;------------------&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    flag = <span class="built_in">open</span>(<span class="string">&quot;flag&quot;</span>)</span><br><span class="line">    word = flag.read()</span><br><span class="line">    <span class="keyword">if</span> word == <span class="string">&quot;0&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;首次启动&quot;</span>)</span><br><span class="line">        flag.close()</span><br><span class="line">        c_flag()</span><br><span class="line">        init()</span><br><span class="line">        print_login_menu()</span><br><span class="line">        user_select()</span><br><span class="line">    <span class="keyword">elif</span> word == <span class="string">&quot;1&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;欢迎回来&quot;</span>)</span><br><span class="line">        print_login_menu()</span><br><span class="line">        user_select()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;初始化参数错误&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="对文件中的数字排序">对文件中的数字排序<a class="header-anchor" href="#对文件中的数字排序">#</a></h3><p>应有一个名为 number 的文件,里面存入以空格分隔的数字,例:</p><p>21 34 4 5 45 5 45 45 2 3  76 542 542</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;number&quot;</span>, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    <span class="keyword">for</span> fil <span class="keyword">in</span> file:</span><br><span class="line">        numberList = []</span><br><span class="line">        dlist = []</span><br><span class="line">        <span class="comment"># 分割存入列表</span></span><br><span class="line">        <span class="keyword">for</span> f <span class="keyword">in</span> <span class="built_in">list</span>(fil):</span><br><span class="line">            <span class="keyword">if</span> f == <span class="string">&quot;\40&quot;</span>:  <span class="comment"># 以空格分割</span></span><br><span class="line">                num = <span class="string">&quot;&quot;</span>.join(dlist)</span><br><span class="line">                dlist.clear()</span><br><span class="line">                numberList.append(<span class="built_in">int</span>(num))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                dlist.append(f)</span><br><span class="line">        numberList.sort()</span><br><span class="line">        <span class="built_in">print</span>(numberList)</span><br></pre></td></tr></table></figure><p>或 直接 使用split函数 分割</p><p>但是分割后的数字为字符串类型,需转型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;number&quot;</span>, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    <span class="keyword">for</span> fil <span class="keyword">in</span> file:</span><br><span class="line">        numberList = fil.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">        l = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> numberList:</span><br><span class="line">            l.append(<span class="built_in">int</span>(i))</span><br><span class="line">        l.sort()</span><br><span class="line">        <span class="built_in">print</span>(l)</span><br></pre></td></tr></table></figure><p>或 直接使用</p><p>numberList = [int(x) for x in numberList]</p><p>转型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;number&quot;</span>, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    <span class="keyword">for</span> fil <span class="keyword">in</span> file:</span><br><span class="line">        numberList = fil.split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">        numberList = [<span class="built_in">int</span>(x) <span class="keyword">for</span> x <span class="keyword">in</span> numberList]</span><br><span class="line">        numberList.sort()</span><br><span class="line">        <span class="built_in">print</span>(numberList)</span><br></pre></td></tr></table></figure><h3 id="注释实现">注释实现<a class="header-anchor" href="#注释实现">#</a></h3><p>实现类似python注释的功能,读取&quot;u_root1&quot;文件,但是不读取&quot;#&quot;后的内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">strs = []</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;u_root1&quot;</span>, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> file:</span><br><span class="line">        <span class="keyword">for</span> jing <span class="keyword">in</span> <span class="built_in">list</span>(s):</span><br><span class="line">            <span class="keyword">if</span> jing == <span class="string">&quot;#&quot;</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            strs.append(jing)</span><br><span class="line">            <span class="comment"># print(jing, end=&quot;&quot;)</span></span><br><span class="line">        strs.append(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">zz = <span class="string">&quot;&quot;</span>.join(strs)</span><br><span class="line"><span class="built_in">print</span>(zz)</span><br></pre></td></tr></table></figure><h3 id="格式">格式<a class="header-anchor" href="#格式">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;我的名字是：%s，年龄为：%d&quot;</span> % (<span class="string">&#x27;小强&#x27;</span>, <span class="number">13</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;我的名字是：&#123;&#125;，年龄为：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="string">&#x27;小强&#x27;</span>, <span class="number">13</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;我的名字是：&#123;1&#125;，年龄为：&#123;0&#125;&quot;</span>.<span class="built_in">format</span>(<span class="number">13</span>, <span class="string">&#x27;小强&#x27;</span>))</span><br><span class="line"><span class="comment"># print(&quot;我的名字是：%s，年龄为：%d&quot; % (13, &#x27;小强&#x27;))  报错</span></span><br><span class="line"></span><br><span class="line">a = <span class="string">&quot;q_&quot;</span></span><br><span class="line"><span class="comment"># 如果字符串至少有一个字符并且所有字符都是字母则返回 True，否则返回 False。</span></span><br><span class="line"><span class="built_in">print</span>(a.isalpha()) </span><br></pre></td></tr></table></figure><h3 id="绘制直方图">绘制直方图<a class="header-anchor" href="#绘制直方图">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(np.random.rand(<span class="number">10</span>, <span class="number">4</span>))  <span class="comment"># 4行10列 的二维列表</span></span><br><span class="line">df = pd.DataFrame(np.random.rand(<span class="number">10</span>, <span class="number">4</span>), columns=[<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>, <span class="string">&#x27;c&#x27;</span>, <span class="string">&#x27;d&#x27;</span>])</span><br><span class="line">df.plot(stacked=<span class="literal">True</span>, kind=<span class="string">&quot;bar&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h3 id="爬虫">爬虫<a class="header-anchor" href="#爬虫">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">baidu_url = <span class="string">&#x27;https://www.baidu.com/&#x27;</span></span><br><span class="line">res = requests.get(baidu_url)</span><br><span class="line"><span class="built_in">print</span>(res.status_code)</span><br><span class="line"><span class="built_in">print</span>(res.encoding)</span><br><span class="line">res.encoding = <span class="string">&#x27;utf-8&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;网页源码：\n&#123;&#125;&quot;</span>.<span class="built_in">format</span>(res.text))</span><br></pre></td></tr></table></figure><h3 id="曲线图">曲线图<a class="header-anchor" href="#曲线图">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = [<span class="string">&#x27;Simhei&#x27;</span>]  <span class="comment"># 中文</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="literal">False</span>  <span class="comment"># 符号</span></span><br><span class="line"></span><br><span class="line">data = np.arange(<span class="number">0</span>, <span class="number">1.1</span>, <span class="number">0.01</span>)</span><br><span class="line">plt.title(<span class="string">&quot;曲线&quot;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&quot;x&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;y&quot;</span>)</span><br><span class="line"></span><br><span class="line">plt.xticks([<span class="number">0</span>, <span class="number">0.5</span>, <span class="number">1</span>])</span><br><span class="line">plt.yticks([<span class="number">0</span>, <span class="number">0.5</span>, <span class="number">1.0</span>])</span><br><span class="line">plt.plot(data, data ** <span class="number">2</span>)</span><br><span class="line">plt.plot(data, data ** <span class="number">3</span>)</span><br><span class="line">plt.legend([<span class="string">&quot;y=x^2&quot;</span>, <span class="string">&quot;y=x^3&quot;</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mport numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = [<span class="string">&#x27;Simhei&#x27;</span>]  <span class="comment"># 中文</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="literal">False</span>  <span class="comment"># 符号</span></span><br><span class="line"><span class="comment"># plt.figure(figsize=(10, 6), facecolor=&#x27;gray&#x27;)</span></span><br><span class="line"><span class="comment"># # plt.axes([0.1, 0.5, 0.7, 0.3])</span></span><br><span class="line"><span class="comment"># # plt.subplot(323)</span></span><br><span class="line"><span class="comment"># plt.subplots(2, 2)</span></span><br><span class="line"><span class="comment"># plt.show()  # 绘图区域</span></span><br><span class="line">x = np.linspace(-np.pi, np.pi, <span class="number">256</span>, endpoint=<span class="literal">True</span>)</span><br><span class="line">c, s = np.cos(x), np.sin(x)</span><br><span class="line">plt.plot(x, s, <span class="string">&#x27;m:&#x27;</span>)</span><br><span class="line">plt.plot(x, c, <span class="string">&#x27;c--&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h3 id="雷达图">雷达图<a class="header-anchor" href="#雷达图">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = [<span class="string">&#x27;Simhei&#x27;</span>]  <span class="comment"># 中文</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>] = <span class="literal">False</span>  <span class="comment"># 符号</span></span><br><span class="line"></span><br><span class="line">courses = np.array([<span class="string">&#x27;Java&#x27;</span>, <span class="string">&#x27;Python&#x27;</span>, <span class="string">&#x27;C,&#x27;</span>, <span class="string">&#x27;SpringBoot&#x27;</span>, <span class="string">&#x27;Vue&#x27;</span>, <span class="string">&#x27;JavaScript&#x27;</span>])</span><br><span class="line">scores = np.array([[<span class="number">95</span>, <span class="number">75</span>, <span class="number">74</span>],</span><br><span class="line">                   [<span class="number">95</span>, <span class="number">23</span>, <span class="number">86</span>],</span><br><span class="line">                   [<span class="number">65</span>, <span class="number">75</span>, <span class="number">86</span>],</span><br><span class="line">                   [<span class="number">95</span>, <span class="number">75</span>, <span class="number">98</span>],</span><br><span class="line">                   [<span class="number">56</span>, <span class="number">75</span>, <span class="number">86</span>],</span><br><span class="line">                   [<span class="number">95</span>, <span class="number">87</span>, <span class="number">49</span>]])</span><br><span class="line"></span><br><span class="line">data_length = <span class="built_in">len</span>(scores)  <span class="comment"># 6</span></span><br><span class="line">angles = np.linspace(<span class="number">0</span>, <span class="number">2</span> * np.pi, data_length, endpoint=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">scores = np.concatenate((scores, [scores[<span class="number">0</span>]]))  <span class="comment"># 7</span></span><br><span class="line">angles1 = np.concatenate((angles, [angles[<span class="number">0</span>]]))  <span class="comment"># 7</span></span><br><span class="line">plt.polar(angles1, scores, <span class="string">&#x27;o-&#x27;</span>, linewidth=<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">plt.thetagrids(angles * <span class="number">180</span> / np.pi, courses, fontproperties=<span class="string">&#x27;simhei&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.title(<span class="string">&quot;成绩评估&quot;</span>)</span><br><span class="line">plt.legend([<span class="string">&#x27;软件1909&#x27;</span>, <span class="string">&#x27;软件1909&#x27;</span>, <span class="string">&#x27;软件1909&#x27;</span>], loc=(<span class="number">0.94</span>, <span class="number">0.80</span>), labelspacing=<span class="number">0.1</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h3 id="pandas模块">pandas模块<a class="header-anchor" href="#pandas模块">#</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">df_obj = pd.DataFrame([[<span class="number">11.0</span>, np.nan, <span class="number">5.0</span>, <span class="number">6.0</span>], [<span class="number">1.0</span>, np.nan, np.nan, <span class="number">8.0</span>]])</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df_obj)</span><br><span class="line"></span><br><span class="line">df_obj.isnull()</span><br><span class="line"><span class="comment">#        0     1      2      3</span></span><br><span class="line"><span class="comment"># 0  False  True  False  False</span></span><br><span class="line"><span class="comment"># 1  False  True   True  False</span></span><br><span class="line">df_obj.dropna(axis=<span class="number">1</span>)</span><br><span class="line"><span class="comment">#       0    3</span></span><br><span class="line"><span class="comment"># 0  11.0  6.0</span></span><br><span class="line"><span class="comment"># 1   1.0  8.0</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES6语法新特性</title>
      <link href="/artical/c2850c04.html"/>
      <url>/artical/c2850c04.html</url>
      
        <content type="html"><![CDATA[<h1>ES6</h1><p>参考文章:</p><blockquote><ul class="lvl-1"><li class="lvl-2"><p><a href="https://zhuanlan.zhihu.com/p/30400262">https://zhuanlan.zhihu.com/p/30400262</a></p></li><li class="lvl-2"><p><a href="http://caibaojian.com/es6/class.html">http://caibaojian.com/es6/class.html</a></p></li><li class="lvl-2"><p><a href="https://www.jianshu.com/p/d23a506cdca2">https://www.jianshu.com/p/d23a506cdca2</a></p></li></ul></blockquote><h2 id="查看对es6语法的支持">查看对es6语法的支持<a class="header-anchor" href="#查看对es6语法的支持">#</a></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">D</span>:\desktop\<span class="title class_">Vue</span>&gt; npm install -g es-checker</span><br><span class="line"></span><br><span class="line">added <span class="number">13</span> packages <span class="keyword">in</span> 4s</span><br><span class="line"><span class="variable constant_">PS</span> <span class="attr">D</span>:\desktop\<span class="title class_">Vue</span>&gt; es-checker</span><br><span class="line"></span><br><span class="line"><span class="title class_">ECMAScript</span> <span class="number">6</span> <span class="title class_">Feature</span> <span class="title class_">Detection</span> (v1<span class="number">.4</span><span class="number">.2</span>)</span><br><span class="line"></span><br><span class="line"><span class="title class_">Variables</span></span><br><span class="line">  √ <span class="keyword">let</span> and <span class="keyword">const</span></span><br><span class="line">  √ <span class="variable constant_">TDZ</span> error <span class="keyword">for</span> too-early access <span class="keyword">of</span> <span class="keyword">let</span> or <span class="keyword">const</span> declarations  </span><br><span class="line">  √ <span class="title class_">Redefinition</span> <span class="keyword">of</span> <span class="keyword">const</span> declarations not allowed</span><br><span class="line">  √ destructuring assignments/declarations <span class="keyword">for</span> arrays and objects</span><br><span class="line">  √ ... operator</span><br><span class="line"></span><br><span class="line"><span class="title class_">Data</span> <span class="title class_">Types</span></span><br><span class="line">  √ <span class="title class_">For</span>...<span class="keyword">of</span> loop</span><br><span class="line">  √ <span class="title class_">Map</span>, <span class="title class_">Set</span>, <span class="title class_">WeakMap</span>, <span class="title class_">WeakSet</span></span><br><span class="line">  √ <span class="title class_">Symbol</span></span><br><span class="line">  √ <span class="title class_">Symbols</span> cannot be implicitly coerced</span><br><span class="line"></span><br><span class="line"><span class="title class_">Number</span></span><br><span class="line">  √ <span class="title class_">Octal</span> (e.<span class="property">g</span>. <span class="number">0o1</span> ) and binary (e.<span class="property">g</span>. <span class="number">0b10</span> ) literal forms</span><br><span class="line">  √ <span class="title class_">Old</span> octal literal invalid now (e.<span class="property">g</span>. <span class="number">01</span> )</span><br><span class="line">  √ <span class="title class_">Static</span> functions added to <span class="title class_">Math</span> (e.<span class="property">g</span>. <span class="title class_">Math</span>.<span class="title function_">hypot</span>(), <span class="title class_">Math</span>.<span class="title function_">acosh</span>(), <span class="title class_">Math</span>.<span class="title function_">imul</span>() )</span><br><span class="line">  √ <span class="title class_">Static</span> functions added to <span class="title class_">Number</span> (<span class="title class_">Number</span>.<span class="built_in">isNaN</span>(), <span class="title class_">Number</span>.<span class="title function_">isInteger</span>() )</span><br><span class="line"></span><br><span class="line"><span class="title class_">String</span></span><br><span class="line">  √ <span class="title class_">Methods</span> added to <span class="title class_">String</span>.<span class="property"><span class="keyword">prototype</span></span> (<span class="title class_">String</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="title function_">includes</span>(), <span class="title class_">String</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="title function_">repeat</span>() )</span><br><span class="line">  √ <span class="title class_">Unicode</span> code-point <span class="built_in">escape</span> form <span class="keyword">in</span> string literals (e.<span class="property">g</span>. \u&#123;20BB7&#125; )</span><br><span class="line">  √ <span class="title class_">Unicode</span> code-point <span class="built_in">escape</span> form <span class="keyword">in</span> identifier names (e.<span class="property">g</span>. <span class="keyword">var</span> \u&#123;20BB7&#125; = <span class="number">42</span>; )</span><br><span class="line">  √ <span class="title class_">Unicode</span> code-point <span class="built_in">escape</span> form <span class="keyword">in</span> regular expressions (e.<span class="property">g</span>. <span class="keyword">var</span> regexp = <span class="regexp">/\u&#123;20BB7&#125;/u</span>; )</span><br><span class="line">  √ y flag <span class="keyword">for</span> sticky regular expressions (e.<span class="property">g</span>. /b/y )</span><br><span class="line">  √ <span class="title class_">Template</span> <span class="title class_">String</span> <span class="title class_">Literals</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Function</span></span><br><span class="line">  √ arrow <span class="keyword">function</span></span><br><span class="line">  √ <span class="keyword">default</span> <span class="keyword">function</span> parameter values</span><br><span class="line">  √ destructuring <span class="keyword">for</span> <span class="keyword">function</span> parameters</span><br><span class="line">  √ <span class="title class_">Inferences</span> <span class="keyword">for</span> <span class="keyword">function</span> name property <span class="keyword">for</span> anonymous functions</span><br><span class="line">  × <span class="title class_">Tail</span>-call optimization <span class="keyword">for</span> <span class="keyword">function</span> calls and recursion</span><br><span class="line"></span><br><span class="line"><span class="title class_">Array</span></span><br><span class="line">  √ <span class="title class_">Methods</span> added to <span class="title class_">Array</span>.<span class="property"><span class="keyword">prototype</span></span> ([].<span class="title function_">fill</span>(), [].<span class="title function_">find</span>(), [].<span class="title function_">findIndex</span>(), [].<span class="title function_">entries</span>(), [].<span class="title function_">keys</span>(), [].<span class="title function_">values</span>() )</span><br><span class="line">  √ <span class="title class_">Static</span> functions added to <span class="title class_">Array</span> (<span class="title class_">Array</span>.<span class="title function_">from</span>(), <span class="title class_">Array</span>.<span class="title function_">of</span>() )</span><br><span class="line">  √ <span class="title class_">TypedArrays</span> like <span class="title class_">Uint8Array</span>, <span class="title class_">ArrayBuffer</span>, <span class="title class_">Int8Array</span>(), <span class="title class_">Int32Array</span>(), <span class="title class_">Float64Array</span>()</span><br><span class="line">  √ <span class="title class_">Some</span> <span class="title class_">Array</span> methods (e.<span class="property">g</span>. <span class="title class_">Int8Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="title function_">slice</span>(), <span class="title class_">Int8Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="title function_">join</span>(), <span class="title class_">Int8Array</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="title function_">forEach</span>() ) added to the <span class="title class_">TypedArray</span> prototypes    </span><br><span class="line">  √ <span class="title class_">Some</span> <span class="title class_">Array</span> statics (e.<span class="property">g</span>. <span class="title class_">Uint32Array</span>.<span class="title function_">from</span>(), <span class="title class_">Uint32Array</span>.<span class="title function_">of</span>() ) added to the <span class="title class_">TypedArray</span> constructors</span><br><span class="line"></span><br><span class="line"><span class="title class_">Object</span></span><br><span class="line">  √ __proto__ <span class="keyword">in</span> object literal definition sets [[<span class="title class_">Prototype</span>]] link</span><br><span class="line">  √ <span class="title class_">Static</span> functions added to <span class="title class_">Object</span> (<span class="title class_">Object</span>.<span class="title function_">getOwnPropertySymbols</span>(), <span class="title class_">Object</span>.<span class="title function_">assign</span>() )</span><br><span class="line">  √ <span class="title class_">Object</span> <span class="title class_">Literal</span> <span class="title class_">Computed</span> <span class="title class_">Property</span></span><br><span class="line">  √ <span class="title class_">Object</span> <span class="title class_">Literal</span> <span class="title class_">Property</span> <span class="title class_">Shorthands</span></span><br><span class="line">  √ <span class="title class_">Proxies</span></span><br><span class="line">  √ <span class="title class_">Reflect</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Generator</span> and <span class="title class_">Promise</span></span><br><span class="line">  √ <span class="title class_">Generator</span> <span class="keyword">function</span></span><br><span class="line">  √ <span class="title class_">Promises</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Class</span></span><br><span class="line">  √ <span class="title class_">Class</span></span><br><span class="line">  √ <span class="variable language_">super</span> allowed <span class="keyword">in</span> object methods</span><br><span class="line">  √ <span class="keyword">class</span> <span class="title class_">ABC</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Array</span> &#123; .. &#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Module</span></span><br><span class="line">  × <span class="title class_">Module</span> <span class="keyword">export</span> command</span><br><span class="line">  × <span class="title class_">Module</span> <span class="keyword">import</span> command</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">=========================================</span><br><span class="line"><span class="title class_">Passes</span> <span class="number">39</span> feature <span class="title class_">Detections</span></span><br><span class="line"><span class="title class_">Your</span> runtime supports <span class="number">92</span>% <span class="keyword">of</span> <span class="title class_">ECMAScript</span> <span class="number">6</span></span><br><span class="line">=========================================</span><br></pre></td></tr></table></figure><h2 id="基础语法">基础语法<a class="header-anchor" href="#基础语法">#</a></h2><h3 id="var-let-const">var,let,const<a class="header-anchor" href="#var-let-const">#</a></h3><p>在能实现相同的功能情况下,  使用优先级: const &gt; let &gt; var</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> str1 = <span class="string">&quot;const定义&quot;</span>;</span><br><span class="line"><span class="comment">// const定义常量, 不可改变 Assignment to constant variable.</span></span><br><span class="line"><span class="comment">// str1 = &quot;change&quot;;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str1);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 但是常量定义的对象中的 </span></span><br><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;Tiam&quot;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span></span><br><span class="line">&#125;</span><br><span class="line">obj.<span class="property">name</span> = <span class="string">&quot;字节跳动&quot;</span>;</span><br><span class="line">obj.<span class="property">age</span> = <span class="number">9</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj); <span class="comment">// &#123; name: &#x27;字节跳动&#x27;, age: 9 &#125;</span></span><br></pre></td></tr></table></figure><h3 id="模板字符串-字符串遍历">模板字符串 | 字符串遍历<a class="header-anchor" href="#模板字符串-字符串遍历">#</a></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ES6 模板字符串语法</span></span><br><span class="line"><span class="keyword">let</span> str = <span class="string">&quot;妖怪&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;str&#125;</span>看打`</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历字符串</span></span><br><span class="line"><span class="keyword">let</span> string = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印0~25</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> c <span class="keyword">in</span> string) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 打印a~z</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> c <span class="keyword">of</span> string) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(c);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解构赋值</span></span><br><span class="line"><span class="keyword">const</span> str2 = <span class="string">&quot;PUA&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> [a, b, c] = str2;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a, b, c);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str2[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 字符串方法</span></span><br><span class="line"><span class="comment">// 判断是否包含某个字符</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str2.<span class="title function_">includes</span>(<span class="string">&quot;A&quot;</span>));</span><br><span class="line"><span class="comment">// 重复拼接自身</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str2.<span class="title function_">repeat</span>(<span class="number">2</span>));</span><br></pre></td></tr></table></figure><h3 id="set-map-object">set, map, object<a class="header-anchor" href="#set-map-object">#</a></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 对象</span></span><br><span class="line"><span class="keyword">let</span> obj_name, obj_age;</span><br><span class="line"><span class="keyword">let</span> obj1 = &#123;</span><br><span class="line">    obj_name,</span><br><span class="line">    obj_age,</span><br><span class="line">    <span class="title function_">obj_func</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">obj_name</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">obj1.<span class="property">obj_name</span> = <span class="string">&quot;对象名&quot;</span></span><br><span class="line">obj1.<span class="title function_">obj_func</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Set结构, 不存储重复值</span></span><br><span class="line"><span class="keyword">let</span> set = <span class="keyword">new</span> <span class="title class_">Set</span>();</span><br><span class="line">set.<span class="title function_">add</span>(<span class="string">&quot;one&quot;</span>);</span><br><span class="line">set.<span class="title function_">add</span>(<span class="string">&quot;two&quot;</span>);</span><br><span class="line">set.<span class="title function_">add</span>(<span class="string">&quot;one&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(set);  <span class="comment">// Set(2) &#123; &#x27;one&#x27;, &#x27;two&#x27; &#125;</span></span><br><span class="line">set.<span class="title function_">forEach</span>(<span class="function"><span class="params">i</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(i))</span><br><span class="line"></span><br><span class="line"><span class="comment">// Map结构</span></span><br><span class="line"><span class="keyword">let</span> map = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">map.<span class="title function_">set</span>(<span class="string">&quot;邓紫棋&quot;</span>, <span class="string">&quot;《多远都要在一起》&quot;</span>).<span class="title function_">set</span>(<span class="string">&quot;周杰伦&quot;</span>, <span class="string">&quot;《明明就》&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(map);</span><br></pre></td></tr></table></figure><h3 id="rest参数-函数参数默认值-箭头函数-扩展运算符">rest参数 | 函数参数默认值 | 箭头函数 | 扩展<a href="https://so.csdn.net/so/search?q=%E8%BF%90%E7%AE%97%E7%AC%A6&amp;spm=1001.2101.3001.7020">运算符</a><a class="header-anchor" href="#rest参数-函数参数默认值-箭头函数-扩展运算符">#</a></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义函数参数带默认值</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params">name = <span class="string">&quot;Tiam&quot;</span>, age = <span class="number">18</span></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;name&#125;</span>, <span class="subst">$&#123;age&#125;</span>`</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fun</span>();</span><br><span class="line"><span class="title function_">fun</span>(<span class="string">&quot;字节&quot;</span>, <span class="number">102</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 箭头函数 | 接收不定数的参数</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">fun1</span> = (<span class="params">...songs</span>) =&gt; <span class="variable language_">console</span>.<span class="title function_">log</span>(songs);</span><br><span class="line"><span class="title function_">fun1</span>(<span class="string">&quot;泡沫&quot;</span>, <span class="string">&quot;再见&quot;</span>, <span class="string">&quot;A.N.I.Y&quot;</span>, <span class="string">&quot;光年之外&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fun2</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">arguments</span>);  <span class="comment">// [Arguments] &#123; &#x27;0&#x27;: 1, &#x27;1&#x27;: 2, &#x27;2&#x27;: 3, &#x27;3&#x27;: 4, &#x27;4&#x27;: 5 &#125;</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">arguments</span>.<span class="property">length</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(...<span class="variable language_">arguments</span>);  <span class="comment">// 1 2 3 4 5</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">fun2</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 扩展运算符 =&gt; 可迭代对象包括常用的集合对象（数组、Set、Map集合）和字符串都是可迭代对象. =&gt; 展开数组</span></span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">    <span class="string">&quot;壹&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">&quot;贰&quot;</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="string">&quot;叁&quot;</span>: <span class="number">3</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(&#123;...obj&#125;);  <span class="comment">// &#123; &#x27;壹&#x27;: 1, &#x27;贰&#x27;: 2, &#x27;叁&#x27;: 3 &#125;</span></span><br></pre></td></tr></table></figure><h3 id="Class类">Class类<a class="header-anchor" href="#Class类">#</a></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="comment">// 无构造方法时, 自动创建一个无参构造方法</span></span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name, age</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_">getName</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">getAge</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">age</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">setName</span>(<span class="params">name</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">setAge</span>(<span class="params">age</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">toString</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">name</span> + <span class="string">&#x27;(&#x27;</span> + <span class="variable language_">this</span>.<span class="property">age</span> + <span class="string">&#x27;)&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">run</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Just run!<span class="subst">$&#123;<span class="variable language_">this</span>.name&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">cry</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;so sad, so cry!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 类的本质就是 函数</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> <span class="title class_">Person</span>);  <span class="comment">// function</span></span><br><span class="line"><span class="title class_">Person</span>.<span class="title function_">cry</span>();</span><br><span class="line"><span class="keyword">let</span> scientist = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;爱因斯坦&quot;</span>, <span class="number">77</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(scientist);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(scientist.<span class="title function_">toString</span>());</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> mathematician = <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">mathematician.<span class="title function_">setName</span>(<span class="string">&quot;Oula&quot;</span>);</span><br><span class="line">mathematician.<span class="title function_">setAge</span>(<span class="number">98</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(mathematician.<span class="title function_">getName</span>());</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(mathematician.<span class="title function_">getAge</span>());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 类的继承</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Person</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name, age, college</span>) &#123;</span><br><span class="line">        <span class="variable language_">super</span>(name, age);</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">college</span> = college;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">getCollege</span>(<span class="params"></span>) &#123; <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">college</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> linux_father = <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;林纳斯&quot;</span>, <span class="number">21</span>, <span class="string">&quot;芬兰大学&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(linux_father.<span class="property">getCollege</span>); <span class="comment">// [Function: getCollege]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(linux_father.<span class="title function_">getCollege</span>()); <span class="comment">// 芬兰大学</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(linux_father);  <span class="comment">// Student &#123; name: &#x27;林纳斯&#x27;, age: 21, college: &#x27;芬兰大学&#x27; &#125;</span></span><br><span class="line"><span class="title class_">Student</span>.<span class="title function_">cry</span>();</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="let、const、var-的区别">let、const、var 的区别<a class="header-anchor" href="#let、const、var-的区别">#</a></h3><blockquote><ul class="lvl-1"><li class="lvl-2"><p>var:使用 var 声明的变量，其作用域为该语句所在的函数内，且存在变量提升现象</p></li><li class="lvl-2"><p>let:使用 let 声明的变量，其作用域为该语句所在的代码块内，不存在变量提升。</p></li><li class="lvl-2"><p>const:使用 const 声明的是常量，在后面出现的代码中不能再修改该常量的值。</p></li></ul></blockquote><table><thead><tr><th>var</th><th>let</th><th>const</th></tr></thead><tbody><tr><td>函数级作用域</td><td>块级作用域</td><td>块级作用域</td></tr><tr><td>变量提升</td><td>不存在变量提升</td><td>不存在变量提升</td></tr><tr><td>值可以改变</td><td>值可以改变</td><td>值不可以改变</td></tr></tbody></table><h6 id="1-关于let">1.关于let<a class="header-anchor" href="#1-关于let">#</a></h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span><br><span class="line">    arr[i] = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(i); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">arr[<span class="number">0</span>]();</span><br><span class="line">arr[<span class="number">1</span>]();</span><br></pre></td></tr></table></figure><h6 id="2-关于const">2.关于const<a class="header-anchor" href="#2-关于const">#</a></h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//常量赋值后，值不能修改。</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PI</span> = <span class="number">3.14</span>;</span><br><span class="line"> <span class="variable constant_">PI</span> = <span class="number">100</span>; <span class="comment">// 报错Assignment to constant variable. </span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> ary = [<span class="number">100</span>, <span class="number">200</span>];</span><br><span class="line">ary[<span class="number">0</span>] = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">ary[<span class="number">1</span>] = <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">console.<span class="built_in">log</span>(ary); <span class="comment">// [&#x27;a&#x27;, &#x27;b&#x27;]; </span></span><br><span class="line">ary = [<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>]; <span class="comment">// 报错Assignment to constant variable.</span></span><br></pre></td></tr></table></figure><h6 id="3-关于var">3.关于var<a class="header-anchor" href="#3-关于var">#</a></h6><p>var关键字声明的变量，无论实际声明的位置在哪，都会被视为声明在函数的顶部、如果声明不在任意函数内，则视为在全局作用域的顶部</p><h3 id="ES模块导入规则">ES模块导入规则<a class="header-anchor" href="#ES模块导入规则">#</a></h3><p>*<strong>容易出错的地方*</strong></p><ol><li class="lvl-3"><p>页面不基于服务器运行，会出现跨域的错误<br><em>origin ‘null’ has been blocked by CORS policy: Cross origin requests are only</em></p></li><li class="lvl-3"><p>使用模块化时，页面不加type = “module” 会出现语法错误<br><em>app.js:1 Uncaught SyntaxError: Unexpected token {</em></p></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;./module/app.js&quot;</span> type=<span class="string">&quot;module&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li class="lvl-3"><p>import导入模块时不添加 .js 的后缀名会报找不到module错误<br><em>GET xxx net::ERR_ABORTED 404 (Not Found)</em></p></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Student</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;./Student.js&#x27;</span>;</span><br></pre></td></tr></table></figure><p><strong>导入导出方式</strong></p><ol><li class="lvl-3"><p>导出方式</p></li></ol><blockquote><ul class="lvl-1"><li class="lvl-2"><p>定义时导出</p></li><li class="lvl-2"><p>批量导出</p></li><li class="lvl-2"><p>导出重命名（不建议）</p></li><li class="lvl-2"><p>默认导出</p></li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.定义时导出</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">let</span> uname = <span class="string">&#x27;李四&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">showStudentName</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(uname);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">SomeAnimalInfo</span>&#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">type,age</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">type</span> = type;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">showInfo</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`物种:<span class="subst">$&#123;<span class="variable language_">this</span>.type&#125;</span>,年龄：<span class="subst">$&#123;<span class="variable language_">this</span>.age&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.批量导出</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PI</span> = <span class="number">3.1415926</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">DBNAME</span> = <span class="string">&#x27;Local&#x27;</span>;</span><br><span class="line">... ...</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; <span class="variable constant_">PI</span>, <span class="variable constant_">DBNAME</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.默认导出 - 工具类</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">class</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">log</span>(<span class="params">msg</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;now.toLocaleString()&#125;</span>    <span class="subst">$&#123;msg&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">setCookie</span>(<span class="params"></span>)&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    ... ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>导入方式</p><blockquote><ul class="lvl-1"><li class="lvl-2"><p>导入重命名</p></li><li class="lvl-2"><p>导入整个模块</p></li><li class="lvl-2"><p>导入默认模块</p></li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.导入重命名  as语法</span></span><br><span class="line"><span class="keyword">import</span> &#123;num, showStudentName <span class="keyword">as</span> showName&#125; <span class="keyword">from</span> <span class="string">&#x27;./all.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.导入整个模块   需要使用as重命名，接收的是一个对象</span></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> cons <span class="keyword">from</span> <span class="string">&#x27;./const.js&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.导入默认模块   需要起名，名字包含导出内容</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Tool</span> <span class="keyword">from</span> <span class="string">&#x27;./tools.js&#x27;</span>;</span><br></pre></td></tr></table></figure><h3 id="Symbol">Symbol<a class="header-anchor" href="#Symbol">#</a></h3><p>ES6引入了一种新的原始数据类型Symbol，表示独一无二的值。它是JavaScript语言的第七种数据类型，前六种是：Undefined、Null、布尔值（Boolean）、字符串（String）、数值（Number）、对象（Object）</p><blockquote><ul class="lvl-1"><li class="lvl-2"><p>Symbol</p></li><li class="lvl-2"><p>null</p></li><li class="lvl-2"><p>undefined</p></li><li class="lvl-2"><p>boolean</p></li><li class="lvl-2"><p>string</p></li><li class="lvl-2"><p>number</p></li><li class="lvl-2"><p>object</p></li></ul></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str1 = <span class="string">&quot;邓紫棋&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> str2 = <span class="string">&quot;邓紫棋&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str1); <span class="comment">// 邓紫棋</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> str1); <span class="comment">//string</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str1 == str2);  <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> str3 = <span class="title class_">Symbol</span>(<span class="string">&quot;邓紫棋&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> str4 = <span class="title class_">Symbol</span>(<span class="string">&quot;邓紫棋&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str3); <span class="comment">//Symbol(邓紫棋)</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> str3); <span class="comment">//symbol</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str3 == str4);  <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h3 id="Promise对象">Promise对象<a class="header-anchor" href="#Promise对象">#</a></h3><ul class="lvl-0"><li class="lvl-2"><p>Promise是异步编程的一种解决方案</p></li><li class="lvl-2"><p>简单说就是一个容器，里面保存着某个未来才会结束的事件（通常是一个异步操作）的结果。</p></li><li class="lvl-2"><p>从语法上说，Promise是一个对象，从它可以获取异步操作的消息。</p></li><li class="lvl-2"><p>Promise提供统一的API，各种异步操作都可以用同样的方法进行处理。</p></li><li class="lvl-2"><p>ES6规定，Promise对象是一个构造函数，用来生成Promise实例。</p></li><li class="lvl-2"><p><a href="http://caibaojian.com/es6/promise.html">http://caibaojian.com/es6/promise.html</a></p></li></ul><h3 id="进制表示">进制表示<a class="header-anchor" href="#进制表示">#</a></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 二进制</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">0B101</span> == <span class="number">5</span>);  <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 八进制</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">0O777</span>);  <span class="comment">// 511</span></span><br></pre></td></tr></table></figure><h3 id="Array-from">Array.from<a class="header-anchor" href="#Array-from">#</a></h3><ul class="lvl-0"><li class="lvl-2"><p>只要是部署了Iterator接口的数据结构，<code>Array.from</code>都能将其转为数组</p></li><li class="lvl-2"><p>类似数组的对象（array-like object）和可遍历（iterable）的对象（包括ES6新增的数据结构Set和Map)</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Array.from</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> map = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">map.<span class="title function_">set</span>(<span class="string">&quot;邓紫棋&quot;</span>, <span class="string">&quot;《多远都要在一起》&quot;</span>).<span class="title function_">set</span>(<span class="string">&quot;周杰伦&quot;</span>, <span class="string">&quot;《明明就》&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr1 = <span class="title class_">Array</span>.<span class="title function_">from</span>(map);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr1);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> set = <span class="keyword">new</span> <span class="title class_">Set</span>();</span><br><span class="line">set.<span class="title function_">add</span>(<span class="string">&quot;one&quot;</span>).<span class="title function_">add</span>(<span class="string">&quot;two&quot;</span>).<span class="title function_">add</span>(<span class="string">&quot;three&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr2 = <span class="title class_">Array</span>.<span class="title function_">from</span>(set);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr2);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> arrayLike = &#123;</span><br><span class="line">    <span class="number">0</span>: <span class="string">&quot;Tiam&quot;</span>,</span><br><span class="line">    <span class="number">1</span>: <span class="number">18</span>,</span><br><span class="line">    <span class="number">2</span>: <span class="string">&quot;hbnu&quot;</span>,</span><br><span class="line">    <span class="attr">length</span>: <span class="number">3</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> arr3 = <span class="title class_">Array</span>.<span class="title function_">from</span>(arrayLike);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr3);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Array.of 方法用于将一组值，转换为数组。</span></span><br><span class="line"><span class="comment">// 只有当参数个数不少于2个时，Array()才会返回由参数组成的新数组。参数个数只有一个时，实际上是指定数组的长度</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arr4 = <span class="title class_">Array</span>.<span class="title function_">of</span>(<span class="number">1</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="literal">true</span>, set, map);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr4);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数的name属性</span></span><br><span class="line"><span class="keyword">let</span> fun = <span class="keyword">function</span> (<span class="params"></span>) &#123; &#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(fun.<span class="property">name</span>);</span><br></pre></td></tr></table></figure><h3 id="严格模式">严格模式<a class="header-anchor" href="#严格模式">#</a></h3><ul class="lvl-0"><li class="lvl-2"><p>ES6 =&gt; 只要函数参数使用了默认值、解构赋值、或者扩展运算符，那么函数内部就不能显式设定为严格模式</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">doSomething</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">   <span class="comment">// 声明为严格模式</span></span><br><span class="line">  <span class="string">&#x27;use strict&#x27;</span>;</span><br><span class="line">  <span class="comment">// code</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="箭头函数">箭头函数<a class="header-anchor" href="#箭头函数">#</a></h3><p>箭头函数有几个使用注意点。</p><p>（1）函数体内的<code>this</code>对象，就是定义时所在的对象，而不是使用时所在的对象。</p><p>（2）不可以当作构造函数，也就是说，不可以使用<code>new</code>命令，否则会抛出一个错误。</p><p>（3）不可以使用<code>arguments</code>对象，该对象在函数体内不存在。如果要用，可以用Rest参数代替。</p><p>（4）不可以使用<code>yield</code>命令，因此箭头函数不能用作Generator函数。</p><p>上面四点中，第一点尤其值得注意。<em><code>this</code>对象的指向是可变的，但是在箭头函数中，它是固定的</em>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 箭头函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 一个参数时, 不需要写括号; 函数体只有一条语句时, 且为返回语句时, 可省大括号</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">pow2</span> = param =&gt; param * param;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">pow2</span>(<span class="number">9</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 无参</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">fun1</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;操作系统&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;数据结构&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fun1</span>();</span><br><span class="line"><span class="comment">// 多个参数</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">fun2</span> = (<span class="params">song1,song2</span>)=&gt;&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;song1&#125;</span>很好听`</span>);</span><br><span class="line">    <span class="keyword">return</span> song2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">fun2</span>(<span class="string">&quot;where are you&quot;</span>, <span class="string">&quot;kiss the rain&quot;</span>));</span><br></pre></td></tr></table></figure><h3 id="Generator-函数">Generator 函数<a class="header-anchor" href="#Generator-函数">#</a></h3><ul class="lvl-0"><li class="lvl-2"><p>Generator函数是分段执行的，<code>yield</code>语句是暂停执行的标记，而<code>next</code>方法可以恢复执行。</p></li><li class="lvl-2"><p>Generator函数是一个状态机，封装了多个内部状态。</p></li><li class="lvl-2"><p>执行Generator函数会返回一个遍历器对象，也就是说，Generator函数除了状态机，还是一个遍历器对象生成函数</p></li><li class="lvl-2"><p><code>function</code>关键字与函数名之间有一个星号；</p></li><li class="lvl-2"><p>函数体内部使用<code>yield</code>语句，定义不同的内部状态</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Generator 函数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span>* <span class="title function_">hwg</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">yield</span> <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">    <span class="keyword">yield</span> <span class="string">&quot;World&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;end&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> generatorFun = <span class="title function_">hwg</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(generatorFun.<span class="title function_">next</span>());</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">&#123; value: &#x27;Hello&#x27;, done: false &#125;</span></span><br><span class="line"><span class="comment">&#123; value: &#x27;World&#x27;, done: false &#125;</span></span><br><span class="line"><span class="comment">&#123; value: &#x27;end&#x27;, done: true &#125;</span></span><br><span class="line"><span class="comment">&#123; value: undefined, done: true &#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h2 id=""><a class="header-anchor" href="#">#</a></h2>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C常见编程题</title>
      <link href="/artical/4b4998f0.html"/>
      <url>/artical/4b4998f0.html</url>
      
        <content type="html"><![CDATA[<h1>2022 06 13</h1><h2 id="1-累计和">1. 累计和<a class="header-anchor" href="#1-累计和">#</a></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i=<span class="number">1</span>,sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (i&lt;=<span class="number">100</span>)</span><br><span class="line">sum+=i++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-兔子数列第10项">2. 兔子数列第10项<a class="header-anchor" href="#2-兔子数列第10项">#</a></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">fun</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n&lt;<span class="number">3</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> fun(n<span class="number">-1</span>)+fun(n<span class="number">-2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,fun(<span class="number">10</span>));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-前10项和">3. 前10项和<a class="header-anchor" href="#3-前10项和">#</a></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> sum= <span class="number">2</span>,m1=<span class="number">1</span>,m2=<span class="number">1</span>,m,i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">m=m1+m2;</span><br><span class="line">sum+=m;</span><br><span class="line">m1=m2;</span><br><span class="line">m2=m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-公约公倍">4. 公约公倍<a class="header-anchor" href="#4-公约公倍">#</a></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">gongyue</span><span class="params">(<span class="type">int</span> m,<span class="type">int</span> n)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(m%n==<span class="number">0</span>) <span class="keyword">return</span> n;</span><br><span class="line"><span class="keyword">return</span> gongyue(n,m%n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">gongbei</span><span class="params">(<span class="type">int</span> m,<span class="type">int</span> n)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> m*n/gongyue(m,n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> m=<span class="number">36</span>,n=<span class="number">16</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d,%d&quot;</span>,gongyue(m,n),gongbei(m,n));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-水仙花">5. 水仙花<a class="header-anchor" href="#5-水仙花">#</a></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">fun</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> n*n*n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">100</span>;i&lt;<span class="number">1000</span>;i++)</span><br><span class="line"><span class="keyword">if</span>(i==fun(i%<span class="number">10</span>)+fun(i/<span class="number">10</span>%<span class="number">10</span>)+fun(i/<span class="number">100</span>))</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-完数">6. 完数<a class="header-anchor" href="#6-完数">#</a></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">fun</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line"><span class="type">int</span> i,sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line"><span class="keyword">if</span>(n%i==<span class="number">0</span>) sum+=i;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;<span class="number">10000</span>;i++)</span><br><span class="line"><span class="keyword">if</span>(i==fun(i))</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-阶乘前N项和">7. 阶乘前N项和<a class="header-anchor" href="#7-阶乘前N项和">#</a></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">fun</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> fun(n<span class="number">-1</span>)*n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i,sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++)</span><br><span class="line">sum+=fun(i);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-素数">8. 素数<a class="header-anchor" href="#8-素数">#</a></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">fun</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;n/<span class="number">2</span>;i++)</span><br><span class="line"><span class="keyword">if</span>(n%i==<span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;=<span class="number">100</span>;i++)</span><br><span class="line"><span class="keyword">if</span>(fun(i))</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="9-杨辉三角">9. 杨辉三角<a class="header-anchor" href="#9-杨辉三角">#</a></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">fun</span><span class="params">(<span class="type">int</span> m,<span class="type">int</span> n)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(m==n || n==<span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> fun(m<span class="number">-1</span>,n)+fun(m<span class="number">-1</span>,n<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n=<span class="number">10</span>,i,j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;=i;j++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,fun(i,j));</span><br><span class="line"><span class="built_in">putchar</span>(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10-回文数">10. 回文数<a class="header-anchor" href="#10-回文数">#</a></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="comment">//利用math.h中的函数，参数类型易错。</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">fun</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line"><span class="type">int</span> rev=<span class="number">0</span>,len = (<span class="type">int</span>)<span class="built_in">log10</span>(n*<span class="number">1.0</span>);</span><br><span class="line"><span class="keyword">for</span>(;n;len--,n/=<span class="number">10</span>)</span><br><span class="line">rev+=(<span class="type">int</span>)<span class="built_in">pow</span>(<span class="number">10.0</span>,len)*(n%<span class="number">10</span>);</span><br><span class="line"><span class="keyword">return</span> rev;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,fun(n));</span><br><span class="line"><span class="built_in">printf</span>(n==fun(n)?<span class="string">&quot;Yes&quot;</span>:<span class="string">&quot;No&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//反转 n</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">fun</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line"><span class="type">int</span> i=n,m=<span class="number">1</span>,res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(i/=<span class="number">10</span>)</span><br><span class="line">m*=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">for</span>(i=n;i;m/=<span class="number">10</span>,i/=<span class="number">10</span>)</span><br><span class="line">res+=i%<span class="number">10</span>*m;</span><br><span class="line"><span class="keyword">return</span> res==n?<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="built_in">printf</span>(fun(n)?<span class="string">&quot;Yes&quot;</span>:<span class="string">&quot;No&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//从开始与结尾一一对比</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">fun</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line"><span class="type">int</span> i=n,p=<span class="number">1</span>,q=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(i/=<span class="number">10</span>)</span><br><span class="line">p*=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">for</span>(;p&gt;q;p/=<span class="number">10</span>,q*=<span class="number">10</span>)</span><br><span class="line"><span class="keyword">if</span>(n/p%<span class="number">10</span>!=n/q%<span class="number">10</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="built_in">printf</span>(fun(n)?<span class="string">&quot;Yes&quot;</span>:<span class="string">&quot;No&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="11-冒泡排序">11. 冒泡排序<a class="header-anchor" href="#11-冒泡排序">#</a></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">sort</span><span class="params">(<span class="type">int</span> *a,<span class="type">int</span> n)</span>&#123;</span><br><span class="line"><span class="type">int</span> i,j,temp;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;n<span class="number">-1</span>-i;j++)</span><br><span class="line"><span class="keyword">if</span>(a[j]&gt;a[j+<span class="number">1</span>])&#123;</span><br><span class="line">temp=a[j];</span><br><span class="line">a[j]=a[j+<span class="number">1</span>];</span><br><span class="line">a[j+<span class="number">1</span>]=temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="12-选择排序">12. 选择排序<a class="header-anchor" href="#12-选择排序">#</a></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">sort</span><span class="params">(<span class="type">int</span> *a,<span class="type">int</span> n)</span>&#123;</span><br><span class="line"><span class="type">int</span> i,j,temp;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line"><span class="keyword">for</span>(j=i+<span class="number">1</span>;j&lt;n;j++)</span><br><span class="line"><span class="keyword">if</span>(a[i]&gt;a[j])&#123;</span><br><span class="line">temp=a[i];</span><br><span class="line">a[i]=a[j];</span><br><span class="line">a[j]=temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="13-插入排序">13. 插入排序<a class="header-anchor" href="#13-插入排序">#</a></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">sort</span><span class="params">(<span class="type">int</span> *a,<span class="type">int</span> n)</span>&#123;</span><br><span class="line"><span class="type">int</span> i,j,temp;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line"><span class="keyword">for</span>(j=i;j&gt;<span class="number">0</span>;j--)</span><br><span class="line"><span class="keyword">if</span>(a[j<span class="number">-1</span>]&gt;a[j])&#123;</span><br><span class="line">temp=a[j];</span><br><span class="line">a[j]=a[j<span class="number">-1</span>];</span><br><span class="line">a[j<span class="number">-1</span>]=temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="14-反转数组">14. 反转数组<a class="header-anchor" href="#14-反转数组">#</a></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">reverse</span><span class="params">(<span class="type">int</span> *a,<span class="type">int</span> n)</span>&#123;</span><br><span class="line"><span class="type">int</span> *p=a+n<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(;a&lt;p;a++,p--)&#123;</span><br><span class="line">*a=*a^*p;</span><br><span class="line">*p=*a^*p;</span><br><span class="line">*a=*a^*p;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="15-反转字符串">15. 反转字符串<a class="header-anchor" href="#15-反转字符串">#</a></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">reverse</span><span class="params">(<span class="type">char</span> *a)</span>&#123;</span><br><span class="line"><span class="type">char</span> *p=a,temp;</span><br><span class="line"><span class="keyword">while</span>(*(p+<span class="number">1</span>)) p++;</span><br><span class="line"><span class="keyword">for</span>(;a&lt;p;a++,p--)&#123;</span><br><span class="line">temp=*a;</span><br><span class="line">*a = *p;</span><br><span class="line">*p = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">20</span>];</span><br><span class="line">gets(str);</span><br><span class="line">reverse(str);</span><br><span class="line"><span class="built_in">puts</span>(str);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="16-连接字符串">16. 连接字符串<a class="header-anchor" href="#16-连接字符串">#</a></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">strcat_</span><span class="params">(<span class="type">char</span> *a,<span class="type">char</span> *b)</span>&#123;</span><br><span class="line"><span class="keyword">while</span>(*a) a++;</span><br><span class="line"><span class="keyword">while</span>(*b)</span><br><span class="line">*a++=*b++;</span><br><span class="line">    *b=<span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">20</span>];</span><br><span class="line">gets(str);</span><br><span class="line">strcat_(str,<span class="string">&quot;babico&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(str);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="17-比较字符串">17. 比较字符串<a class="header-anchor" href="#17-比较字符串">#</a></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">strcmp_</span><span class="params">(<span class="type">char</span> *a,<span class="type">char</span> *b)</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(;*a==*b;a++,b++)</span><br><span class="line"><span class="keyword">if</span>(*a==<span class="string">&#x27;\0&#x27;</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> *a-*b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">20</span>];</span><br><span class="line">gets(str);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,strcmp_(str,<span class="string">&quot;babico&quot;</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="18-复制字符串">18. 复制字符串<a class="header-anchor" href="#18-复制字符串">#</a></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">strcpy_</span><span class="params">(<span class="type">char</span> *a,<span class="type">char</span> *b)</span>&#123;</span><br><span class="line"><span class="keyword">while</span>(*a++=*b++);   <span class="comment">//b指向0时,已完成赋值.</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">20</span>];</span><br><span class="line">strcpy_(str,<span class="string">&quot;babico&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(str);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="19-字符串长度">19. 字符串长度<a class="header-anchor" href="#19-字符串长度">#</a></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">strlen_</span><span class="params">(<span class="type">char</span> *a)</span>&#123;</span><br><span class="line"><span class="type">int</span> len=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(*a++) len++;</span><br><span class="line"><span class="keyword">return</span> len;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">20</span>];</span><br><span class="line">gets(str);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,strlen_(str));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="20-第几天">20. 第几天<a class="header-anchor" href="#20-第几天">#</a></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">isleap</span><span class="params">(<span class="type">int</span> year)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(year%<span class="number">400</span>==<span class="number">0</span>||year%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;year%<span class="number">100</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">no_day</span><span class="params">(<span class="type">int</span> year,<span class="type">int</span> month,<span class="type">int</span> day)</span>&#123;</span><br><span class="line"><span class="type">int</span> i,res=<span class="number">0</span>,mon[<span class="number">12</span>]=&#123;<span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>&#125;;</span><br><span class="line">mon[<span class="number">0</span>]=day;</span><br><span class="line"><span class="keyword">if</span>(isleap(year)) mon[<span class="number">2</span>]++;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;month;i++)</span><br><span class="line">res+=mon[i];</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> y,m,d;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;y,&amp;m,&amp;d);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,no_day(y,m,d));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="21-字符串转数字">21. 字符串转数字<a class="header-anchor" href="#21-字符串转数字">#</a></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">strtonum</span><span class="params">(<span class="type">char</span> *str)</span>&#123;</span><br><span class="line"><span class="type">char</span> *p=str;</span><br><span class="line"><span class="type">int</span> m=<span class="number">1</span>,res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(p[<span class="number">1</span>]) p++;</span><br><span class="line"><span class="keyword">for</span>(;p&gt;=str;p--,m*=<span class="number">10</span>)</span><br><span class="line">res += m*(*p-<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> str[<span class="number">20</span>];</span><br><span class="line">gets(str);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,strtonum(str));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="22-数字转字符串">22. 数字转字符串<a class="header-anchor" href="#22-数字转字符串">#</a></h2> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">numtostr</span><span class="params">(<span class="type">char</span> *str,<span class="type">int</span> num)</span>&#123;</span><br><span class="line"><span class="type">int</span> m=<span class="number">1</span>,i=num;</span><br><span class="line"><span class="keyword">while</span>(i/=<span class="number">10</span>) m*=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">for</span>(;m&gt;<span class="number">0</span>;m/=<span class="number">10</span>,str++)</span><br><span class="line">*str=num/m%<span class="number">10</span>+<span class="number">48</span>;</span><br><span class="line">*str=<span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">int</span> num;</span><br><span class="line"><span class="type">char</span> str[<span class="number">20</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;num);</span><br><span class="line">numtostr(str,num);</span><br><span class="line"><span class="built_in">puts</span>(str);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="23-折半查找">23. 折半查找<a class="header-anchor" href="#23-折半查找">#</a></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">find</span><span class="params">(<span class="type">int</span> *arr,<span class="type">int</span> n,<span class="type">int</span> num)</span>&#123;</span><br><span class="line"><span class="type">int</span> p=<span class="number">0</span>,q=n<span class="number">-1</span>,mid;</span><br><span class="line"><span class="keyword">while</span>(p&lt;=q)&#123;</span><br><span class="line">mid=(p+q)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(num&gt;arr[mid])</span><br><span class="line">p=mid+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(num&lt;arr[mid])</span><br><span class="line">q=mid<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">int</span> i,arr[<span class="number">10</span>] = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">-1</span>;i&lt;<span class="number">11</span>;i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,find(arr,<span class="number">10</span>,i));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id=""><a class="header-anchor" href="#">#</a></h2>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb</title>
      <link href="/artical/99720b1c.html"/>
      <url>/artical/99720b1c.html</url>
      
        <content type="html"><![CDATA[<h1>JavaWeb</h1><ul class="lvl-0"><li class="lvl-2">2022/11/18</li></ul><h2 id="实现Servlet的三种方式">实现Servlet的三种方式<a class="header-anchor" href="#实现Servlet的三种方式">#</a></h2><h3 id="1-继承GenericServlet">1. 继承GenericServlet<a class="header-anchor" href="#1-继承GenericServlet">#</a></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServletDemo3</span> <span class="keyword">extends</span> <span class="title class_">GenericServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;GenericServlet实现Servlet&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-实现Servlet类">2. 实现Servlet类<a class="header-anchor" href="#2-实现Servlet类">#</a></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServletDemo2</span> <span class="keyword">implements</span> <span class="title class_">Servlet</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> ServletConfig servletConfig;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(ServletConfig servletConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;初始化。。。&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.servletConfig = servletConfig;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ServletConfig <span class="title function_">getServletConfig</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;获取配置中。。。&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.servletConfig;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">service</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> getServletConfig().getServletContext();</span><br><span class="line">        <span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> (String)servletContext.getAttribute(<span class="string">&quot;key&quot;</span>);</span><br><span class="line">        System.out.println(value);</span><br><span class="line">        System.out.println(<span class="string">&quot;处理业务中。。。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getServletInfo</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;获取servlet信息&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我要被销毁了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-继承HttpServlet-推荐">3. 继承HttpServlet(推荐)<a class="header-anchor" href="#3-继承HttpServlet-推荐">#</a></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ServletDemo1</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> ServletConfig servletConfig;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(ServletConfig config)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line">        <span class="built_in">this</span>.servletConfig = config;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">// 防止中文乱码</span></span><br><span class="line">        resp.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">writer</span> <span class="operator">=</span> resp.getWriter();</span><br><span class="line">        writer.println(<span class="string">&quot;Hello world 你好, 世界\n&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">state</span> <span class="operator">=</span> servletConfig.getInitParameter(<span class="string">&quot;state&quot;</span>);</span><br><span class="line">        writer.println(<span class="string">&quot;初始化参数:&quot;</span>+state);</span><br><span class="line">        <span class="comment">//遍历初始化参数</span></span><br><span class="line">        Enumeration&lt;String&gt; initParameterNames = servletConfig.getInitParameterNames();</span><br><span class="line">        <span class="keyword">while</span> (initParameterNames.hasMoreElements())&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> initParameterNames.nextElement();</span><br><span class="line">            <span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> servletConfig.getInitParameter(key);</span><br><span class="line">            writer.println(<span class="string">&quot;遍历:&quot;</span>+key+<span class="string">&quot; &quot;</span>+value);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 获取ServletContext对象</span></span><br><span class="line">        <span class="comment">// 方式一:</span></span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">servletContext1</span> <span class="operator">=</span> servletConfig.getServletContext();</span><br><span class="line">        <span class="comment">// 方式二:</span></span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">servletContext2</span> <span class="operator">=</span> <span class="built_in">this</span>.getServletContext();</span><br><span class="line">        <span class="comment">// 共享数据</span></span><br><span class="line">        servletContext2.setAttribute(<span class="string">&quot;key&quot;</span>,<span class="string">&quot;value&quot;</span>);</span><br><span class="line">        writer.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Cookie">Cookie<a class="header-anchor" href="#Cookie">#</a></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Tiam</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2022/11/4 16:34</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 客户端技术, 把数据以Cookie的形式返回用户的浏览器</span></span><br><span class="line"><span class="comment"> * cookie 使用实例: 上次访问时间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet(&quot;/cookie&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CookieDemo01</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">// 防止中文乱码</span></span><br><span class="line">        resp.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取cookie</span></span><br><span class="line">        Cookie[] cookies = req.getCookies();</span><br><span class="line">        <span class="keyword">if</span>(cookies!=<span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">                <span class="keyword">if</span>(cookie.getName().equals(<span class="string">&quot;visitedTime&quot;</span>))&#123;</span><br><span class="line">                    <span class="type">long</span> <span class="variable">time</span> <span class="operator">=</span> Long.parseLong(cookie.getValue());</span><br><span class="line">                    <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>(time);</span><br><span class="line">                    <span class="type">SimpleDateFormat</span> <span class="variable">simpleDateFormat</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH:mm:ss E&quot;</span>);</span><br><span class="line">                    resp.getWriter().println(<span class="string">&quot;您上次访问本站的时间是:&quot;</span>+simpleDateFormat.format(date));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (cookie.getName().equals(<span class="string">&quot;name&quot;</span>)) &#123;</span><br><span class="line">                    resp.getWriter().println(<span class="string">&quot;您的用户名是 &quot;</span>+cookie.getValue());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            resp.getWriter().println(<span class="string">&quot;这是您第一次访问本站!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 创建Cookie</span></span><br><span class="line">        <span class="type">Cookie</span> <span class="variable">cookie</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cookie</span>(<span class="string">&quot;visitedTime&quot;</span>, String.valueOf(System.currentTimeMillis()));</span><br><span class="line">        <span class="comment">// 发送Cookie到客户端</span></span><br><span class="line">        resp.addCookie(cookie);</span><br><span class="line">        <span class="comment">//测试存储中文</span></span><br><span class="line">        <span class="type">Cookie</span> <span class="variable">cookie1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Cookie</span>(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;陈思宇&quot;</span>);</span><br><span class="line">        <span class="comment">// 设置一天的保存时间</span></span><br><span class="line">        cookie1.setMaxAge(<span class="number">60</span>*<span class="number">60</span>*<span class="number">24</span>);</span><br><span class="line">        resp.addCookie(cookie1);</span><br><span class="line">        <span class="comment">// 删除cookie</span></span><br><span class="line">        cookie1.setMaxAge(<span class="number">0</span>);</span><br><span class="line">        resp.addCookie(cookie1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Session">Session<a class="header-anchor" href="#Session">#</a></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> session;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Tiam</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2022/11/4 17:29</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:特点: 存储一次会话的多次请求的数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SessionDemo</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">// 获取Session</span></span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> req.getSession();</span><br><span class="line">        <span class="comment">// 设值</span></span><br><span class="line">        session.setAttribute(<span class="string">&quot;key&quot;</span>,<span class="string">&quot;value&quot;</span>);</span><br><span class="line">        <span class="comment">// 取值</span></span><br><span class="line">        session.getAttribute(<span class="string">&quot;key&quot;</span>);</span><br><span class="line">        <span class="comment">// 删除</span></span><br><span class="line">        session.removeAttribute(<span class="string">&quot;key&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="域属性范围-EL表达式">域属性范围 | EL表达式<a class="header-anchor" href="#域属性范围-EL表达式">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p>el表达式只能从四大域中获取值</p></li><li class="lvl-2"><p>el表达式 调用<code>pageContext.findAttribute</code>方法</p></li><li class="lvl-2"><p>找不到返回空字符串, 而不是null</p></li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: <span class="number">30362</span></span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">11</span>/<span class="number">17</span></span><br><span class="line">  Time: <span class="number">11</span>:<span class="number">11</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="comment">// 只使用一次的数据</span></span><br><span class="line">    request.setAttribute(<span class="string">&quot;name2&quot;</span>,<span class="string">&quot;request&quot;</span>);</span><br><span class="line">    <span class="comment">// 只在当前页有效</span></span><br><span class="line">    pageContext.setAttribute(<span class="string">&quot;name3&quot;</span>,<span class="string">&quot;pageContext&quot;</span>);</span><br><span class="line">    <span class="comment">// 会再次使用的数据</span></span><br><span class="line">    session.setAttribute(<span class="string">&quot;name4&quot;</span>,<span class="string">&quot;session&quot;</span>);</span><br><span class="line">    <span class="comment">// 几乎所有情况都有效</span></span><br><span class="line">    application.setAttribute(<span class="string">&quot;name1&quot;</span>, <span class="string">&quot;application&quot;</span>);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;h1&gt;$&#123;name1&#125;&lt;/h1&gt;</span><br><span class="line">&lt;h1&gt;$&#123;name2&#125;&lt;/h1&gt;</span><br><span class="line">&lt;h1&gt;$&#123;name3&#125;&lt;/h1&gt;</span><br><span class="line">&lt;h1&gt;$&#123;name4&#125;&lt;/h1&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="JSP语法">JSP语法<a class="header-anchor" href="#JSP语法">#</a></h2><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.Date&quot;</span> %&gt;&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: admin</span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">10</span>/<span class="number">28</span></span><br><span class="line">  Time: <span class="number">16</span>:<span class="number">49</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%--java指令--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;JSP语法学习 <span class="number">2022</span>/<span class="number">11</span>/<span class="number">11</span>&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;a href=<span class="string">&quot;applicationDemo.jsp&quot;</span>&gt;applicationDemo.jsp&lt;/a&gt;</span><br><span class="line">&lt;h1&gt;<span class="number">1.</span> Jsp表达式&lt;/h1&gt;</span><br><span class="line">&lt;%= <span class="keyword">new</span> <span class="title class_">Date</span>() %&gt;</span><br><span class="line">&lt;h1&gt;<span class="number">2.</span> JSP脚本片段&lt;/h1&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">        out.write(<span class="string">&quot;\n&quot;</span> + (num += i));</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;h1&gt;<span class="number">3.</span> 组合的脚本片段&lt;/h1&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">1</span> + <span class="number">1</span> == <span class="number">2</span>) &#123;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;p&gt; html标签 &lt;/p&gt;</span><br><span class="line">&lt;%</span><br><span class="line">        out.write(<span class="string">&quot;1+1=2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;h1&gt;<span class="number">4.</span> jsp声明&lt;/h1&gt;</span><br><span class="line">&lt;%!</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span> k)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; k; i++) sum += i;    </span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> <span class="variable">he</span> <span class="operator">=</span> sum(<span class="number">100</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">(Object o)</span> &#123;</span><br><span class="line">        System.out.println(o);</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">    print(<span class="string">&quot;云边有个小卖部&quot;</span>);</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;<span class="number">5.</span> jsp的注释&lt;/h1&gt;</span><br><span class="line">&lt;!--html的注释--&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">    <span class="comment">// java单行注释</span></span><br><span class="line">    <span class="comment">/* java 多行注释 */</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * javadoc风格注释</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%--jsp注释风格--%&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;<span class="number">6.</span> jsp指令&lt;/h1&gt;</span><br><span class="line">&lt;%--导入包, 每个包以逗号隔开--%&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">&quot;java.util.List&quot;</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;%--将其他文件内容包含进来--%&gt;</span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;login.jsp&quot;</span> %&gt;</span><br><span class="line">&lt;jsp:include page=<span class="string">&quot;login.jsp&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;%--指定错误处理页面--%&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> errorPage=<span class="string">&quot;loginWithCode.jsp&quot;</span> %&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="JSP标签">JSP标签<a class="header-anchor" href="#JSP标签">#</a></h2><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: <span class="number">30362</span></span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">11</span>/<span class="number">17</span></span><br><span class="line">  Time: <span class="number">11</span>:<span class="number">20</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;JSP标签&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%-- 引入页面 三种方式--%&gt;</span><br><span class="line">&lt;jsp:include page=<span class="string">&quot;applicationDemo.jsp&quot;</span> flush=<span class="string">&quot;true&quot;</span>/&gt;</span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;applicationDemo.jsp&quot;</span> %&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    pageContext.include(<span class="string">&quot;./applicationDemo.jsp&quot;</span>);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%--页面跳转--%&gt;</span><br><span class="line">&lt;jsp:forward page=<span class="string">&quot;applicationDemo.jsp&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;%--引入参数--%&gt;</span><br><span class="line">&lt;jsp:include page=<span class="string">&quot;applicationDemo.jsp&quot;</span>&gt;</span><br><span class="line">    &lt;jsp:param name=<span class="string">&quot;param1&quot;</span> value=<span class="string">&quot;Hello&quot;</span>/&gt;</span><br><span class="line">&lt;/jsp:include&gt;</span><br><span class="line"></span><br><span class="line">&lt;jsp:forward page=<span class="string">&quot;applicationDemo.jsp&quot;</span>&gt;</span><br><span class="line">    &lt;jsp:param name=<span class="string">&quot;param2&quot;</span> value=<span class="string">&quot;Good&quot;</span>/&gt;</span><br><span class="line">&lt;/jsp:forward&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="PageContext">PageContext<a class="header-anchor" href="#PageContext">#</a></h2><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.text.SimpleDateFormat&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page <span class="keyword">import</span>=<span class="string">&quot;java.util.Date&quot;</span> %&gt;</span><br><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: <span class="number">30362</span></span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">11</span>/<span class="number">17</span></span><br><span class="line">  Time: <span class="number">10</span>:<span class="number">21</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%--跳转--%&gt;</span><br><span class="line">&lt;%--&lt;jsp:forward page=<span class="string">&quot;index.jsp&quot;</span>/&gt;--%&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;pageContextDemo&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;out对象输出&lt;/h1&gt;</span><br><span class="line">&lt;% pageContext.getOut().write(<span class="string">&quot;pageContext.getOut().write(\&quot;\&quot;);&quot;</span>); %&gt;</span><br><span class="line"></span><br><span class="line">&lt;h1&gt;pageContext作为域对象&lt;/h1&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    pageContext.setAttribute(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;陈思宇&quot;</span>);</span><br><span class="line">    pageContext.setAttribute(<span class="string">&quot;age&quot;</span>, <span class="number">18</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> (String) pageContext.getAttribute(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">    <span class="comment">// pageContext.getAttribute(&quot;age&quot;);</span></span><br><span class="line">%&gt;</span><br><span class="line">&lt;p&gt;姓名: &lt;%=name%&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;p&gt;年龄: $&#123;age&#125;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;p&gt;年龄: &lt;%=<span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH:mm:ss E&quot;</span>).format(<span class="keyword">new</span> <span class="title class_">Date</span>())%&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="comment">// 引入页面</span></span><br><span class="line">    pageContext.include(<span class="string">&quot;./login.jsp&quot;</span>);</span><br><span class="line">    <span class="comment">// 跳转失效</span></span><br><span class="line">    pageContext.forward(<span class="string">&quot;./index.jsp&quot;</span>);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="Servlet验证码">Servlet验证码<a class="header-anchor" href="#Servlet验证码">#</a></h2><h3 id="loginWithCode-jsp">loginWithCode.jsp<a class="header-anchor" href="#loginWithCode-jsp">#</a></h3><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: <span class="number">30362</span></span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">11</span>/<span class="number">4</span></span><br><span class="line">  Time: <span class="number">17</span>:<span class="number">42</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;验证码登录&lt;/title&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        function <span class="title function_">changeImg</span><span class="params">()</span> &#123;</span><br><span class="line">            document.getElementById(<span class="string">&quot;validateCodeImg&quot;</span>).src = <span class="string">&quot;generateCode?&quot;</span>+Math.random();</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;/checkCode&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">    验证码:&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;validateCode&quot;</span>&gt;</span><br><span class="line">    &lt;img src=<span class="string">&quot;/generateCode&quot;</span> alt=<span class="string">&quot;看不清,换一张&quot;</span> id=<span class="string">&quot;validateCodeImg&quot;</span> onclick=<span class="string">&quot;changeImg()&quot;</span>&gt;</span><br><span class="line">    &lt;a href=<span class="string">&quot;javascript:void(0)&quot;</span> onclick=<span class="string">&quot;changeImg()&quot;</span>&gt;看不清,换一张&lt;/a&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="GenerateCode-java">GenerateCode.java<a class="header-anchor" href="#GenerateCode-java">#</a></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> loginCode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Tiam</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2022/11/4 17:48</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 生成验证码图片</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet(&quot;/generateCode&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GenerateCode</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">WIDTH</span> <span class="operator">=</span> <span class="number">120</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">HEIGHT</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">// 1. 生成图片</span></span><br><span class="line">        <span class="type">BufferedImage</span> <span class="variable">bufferedImage</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedImage</span>(WIDTH, HEIGHT, <span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 2. 获取图片</span></span><br><span class="line">        <span class="type">Graphics</span> <span class="variable">graphics</span> <span class="operator">=</span> bufferedImage.getGraphics();</span><br><span class="line">        <span class="comment">// 3. 设置图片背景</span></span><br><span class="line">        setBackground(graphics);</span><br><span class="line">        <span class="comment">// 4. 设置边框</span></span><br><span class="line">        setBorder(graphics);</span><br><span class="line">        <span class="comment">// 5. 设置干扰线</span></span><br><span class="line">        setRandomLine(graphics);</span><br><span class="line">        <span class="comment">// 6. 生成验证码字符串</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">randomString</span> <span class="operator">=</span> getRandomString((Graphics2D) graphics, <span class="string">&quot;mixed&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;本次生成的验证码是: &quot;</span> + randomString);</span><br><span class="line">        <span class="comment">// 7. 将验证码保存到Session</span></span><br><span class="line">        req.getSession().setAttribute(<span class="string">&quot;checkCode&quot;</span>, randomString);</span><br><span class="line">        <span class="comment">// 8. 设置浏览器以图片的格式获取验证码</span></span><br><span class="line">        resp.setContentType(<span class="string">&quot;image/jpg&quot;</span>);</span><br><span class="line">        <span class="comment">// 9. 将验证码发送给浏览器</span></span><br><span class="line">        ImageIO.write(bufferedImage, <span class="string">&quot;jpg&quot;</span>, resp.getOutputStream());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> graphics</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type     mixed =&gt; 混合验证码, number =&gt; 数字验证码, letter =&gt; 字母验证码</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">getRandomString</span><span class="params">(Graphics2D graphics, String type)</span> &#123;</span><br><span class="line">        graphics.setColor(Color.RED);</span><br><span class="line">        graphics.setFont(<span class="keyword">new</span> <span class="title class_">Font</span>(<span class="string">&quot;宋体&quot;</span>, Font.BOLD, <span class="number">20</span>));</span><br><span class="line">        <span class="comment">// 字符串类型</span></span><br><span class="line">        HashMap&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(<span class="number">3</span>);</span><br><span class="line">        map.put(<span class="string">&quot;number&quot;</span>, <span class="string">&quot;0123456789&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;letter&quot;</span>, <span class="string">&quot;QWERTYUIOPASDFGHJKLZXCVBNM&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;mixed&quot;</span>, <span class="string">&quot;1234567890QWERTYUIOPASDFGHJKLZXCVBNM&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">randomString</span> <span class="operator">=</span> setRandomString(graphics, map.get(type));</span><br><span class="line">        <span class="keyword">return</span> randomString;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">setRandomString</span><span class="params">(Graphics2D graphics, String s)</span> &#123;</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="comment">// 字符倾斜角度</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">chars</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="comment">// 字符串长度</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">            <span class="comment">// 定义角度</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">degree</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>().nextInt() % <span class="number">30</span>;</span><br><span class="line">            chars = s.charAt(<span class="keyword">new</span> <span class="title class_">Random</span>().nextInt(s.length() - <span class="number">1</span>)) + <span class="string">&quot;&quot;</span>;</span><br><span class="line">            sb.append(chars);</span><br><span class="line"></span><br><span class="line">            graphics.rotate(degree * Math.PI / <span class="number">180</span>, x, <span class="number">20</span>);</span><br><span class="line">            graphics.drawString(chars, x, <span class="number">20</span>);</span><br><span class="line">            x += <span class="number">30</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置图片干扰线</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> graphics</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setRandomLine</span><span class="params">(Graphics graphics)</span> &#123;</span><br><span class="line">        graphics.setColor(Color.GREEN);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 干扰线数量</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; num; i++) &#123;</span><br><span class="line">            <span class="comment">// 随机生成两个点(x1,y1), (x2,y2), 将之连成线</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">x1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>().nextInt(WIDTH);</span><br><span class="line">            <span class="type">int</span> <span class="variable">y1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>().nextInt(HEIGHT);</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> <span class="variable">x2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>().nextInt(WIDTH);</span><br><span class="line">            <span class="type">int</span> <span class="variable">y2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>().nextInt(HEIGHT);</span><br><span class="line"></span><br><span class="line">            graphics.drawLine(x1, y1, x2, y2);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置图片背景</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> graphics</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setBackground</span><span class="params">(Graphics graphics)</span> &#123;</span><br><span class="line">        graphics.setColor(Color.white);</span><br><span class="line">        graphics.fillRect(<span class="number">0</span>, <span class="number">0</span>, WIDTH, HEIGHT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * s设置图片边框</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> graphics</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setBorder</span><span class="params">(Graphics graphics)</span> &#123;</span><br><span class="line">        graphics.setColor(Color.BLUE);</span><br><span class="line">        graphics.drawRect(<span class="number">1</span>, <span class="number">1</span>, WIDTH - <span class="number">2</span>, HEIGHT - <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="CheckCode-java">CheckCode.java<a class="header-anchor" href="#CheckCode-java">#</a></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Tiam</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2022/11/10 11:11</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet(&quot;/checkCode&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CheckCode</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="built_in">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        resp.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取用户输入, 根据input的name属性, 获得用户输入的验证码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">validateCode</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;validateCode&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;获取用户输入 =&gt;&quot;</span> + validateCode);</span><br><span class="line">        <span class="comment">// 获取Session中的字符串</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">checkCode</span> <span class="operator">=</span> (String) req.getSession().getAttribute(<span class="string">&quot;checkCode&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (validateCode.equalsIgnoreCase(checkCode)) &#123;</span><br><span class="line">            resp.getWriter().println(<span class="string">&quot;验证码正确&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            resp.getWriter().println(<span class="string">&quot;验证输入有误, 请重新输入&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Servlet模拟登录">Servlet模拟登录<a class="header-anchor" href="#Servlet模拟登录">#</a></h2><h3 id="login-jsp">login.jsp<a class="header-anchor" href="#login-jsp">#</a></h3><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: <span class="number">30362</span></span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">11</span>/<span class="number">3</span></span><br><span class="line">  Time: <span class="number">11</span>:<span class="number">23</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;登录页面&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;/LoginServlet&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">    账号:&lt;input name=<span class="string">&quot;name&quot;</span> type=<span class="string">&quot;text&quot;</span>&gt;</span><br><span class="line">    密码:&lt;input name=<span class="string">&quot;pwd&quot;</span> type=<span class="string">&quot;password&quot;</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;登录&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="LoginServlet-java">LoginServlet.java<a class="header-anchor" href="#LoginServlet-java">#</a></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Tiam</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2022/11/3 11:22</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 处理登录请求</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet(&quot;/LoginServlet&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">// 防止中文乱码</span></span><br><span class="line">        resp.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取用户输入的账号密码</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">pwd</span> <span class="operator">=</span> req.getParameter(<span class="string">&quot;pwd&quot;</span>);</span><br><span class="line">        <span class="comment">// 模拟正确的账号密码</span></span><br><span class="line">        Map&lt;String,String&gt; real  = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(<span class="number">2</span>);</span><br><span class="line">        real.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;admin&quot;</span>);</span><br><span class="line">        real.put(<span class="string">&quot;pwd&quot;</span>,<span class="string">&quot;123&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(real.get(<span class="string">&quot;name&quot;</span>).equals(name) &amp;&amp; real.get(<span class="string">&quot;pwd&quot;</span>).equals(pwd))&#123;</span><br><span class="line">            <span class="comment">// 转发 -&gt; 浏览器中地址不改变</span></span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;/index.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">            <span class="comment">// 重定向 -&gt; 浏览器中地址改变</span></span><br><span class="line">            <span class="comment">// resp.sendRedirect(&quot;/index.jsp&quot;);</span></span><br><span class="line">            System.out.println(<span class="string">&quot;登录成功&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">PrintWriter</span> <span class="variable">writer</span> <span class="operator">=</span> resp.getWriter();</span><br><span class="line">            writer.println(<span class="string">&quot;账号或密码错误!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="简易计算器">简易计算器<a class="header-anchor" href="#简易计算器">#</a></h2><h3 id="calculator-jsp">calculator.jsp<a class="header-anchor" href="#calculator-jsp">#</a></h3><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: <span class="number">30362</span></span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">11</span>/<span class="number">18</span></span><br><span class="line">  Time: <span class="number">16</span>:<span class="number">28</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;jsp:useBean id=<span class="string">&quot;calculatorBean&quot;</span> class=<span class="string">&quot;el.Calculator&quot;</span>/&gt;</span><br><span class="line">&lt;%--发送参数, 通配符* 表示全部参数 --%&gt;</span><br><span class="line">&lt;jsp:setProperty name=<span class="string">&quot;calculatorBean&quot;</span> property=<span class="string">&quot;*&quot;</span>/&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="comment">// 调用计算方法</span></span><br><span class="line">    calculatorBean.calculator();</span><br><span class="line">%&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;简易计算器 JSP+JavaBean开发模式样例&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;calculator.jsp&quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">    &lt;table border=<span class="string">&quot;1px&quot;</span>&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td colspan=<span class="string">&quot;2&quot;</span>&gt;简易计算器&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;first parameter&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;firstParam&quot;</span>/&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;operator&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;select name=<span class="string">&quot;operator&quot;</span>&gt;</span><br><span class="line">                    &lt;option name=<span class="string">&quot;+&quot;</span>&gt;+&lt;/option&gt;</span><br><span class="line">                    &lt;option name=<span class="string">&quot;-&quot;</span>&gt;-&lt;/option&gt;</span><br><span class="line">                    &lt;option name=<span class="string">&quot;*&quot;</span>&gt;*&lt;/option&gt;</span><br><span class="line">                    &lt;option name=<span class="string">&quot;/&quot;</span>&gt;/&lt;/option&gt;</span><br><span class="line">                &lt;/select&gt;</span><br><span class="line">            &lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;second parameter&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;secondParam&quot;</span>/&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td colspan=<span class="string">&quot;2&quot;</span>&gt;&lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;计算&quot;</span>/&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">    &lt;hr/&gt;</span><br><span class="line">    &lt;p&gt;计算结果是:</span><br><span class="line">        &lt;jsp:getProperty name=<span class="string">&quot;calculatorBean&quot;</span> property=<span class="string">&quot;firstParam&quot;</span>/&gt;</span><br><span class="line">        &lt;jsp:getProperty name=<span class="string">&quot;calculatorBean&quot;</span> property=<span class="string">&quot;operator&quot;</span>/&gt;</span><br><span class="line">        &lt;jsp:getProperty name=<span class="string">&quot;calculatorBean&quot;</span> property=<span class="string">&quot;secondParam&quot;</span>/&gt;</span><br><span class="line">        =</span><br><span class="line">        &lt;jsp:getProperty name=<span class="string">&quot;calculatorBean&quot;</span> property=<span class="string">&quot;result&quot;</span>/&gt;</span><br><span class="line">    &lt;/p&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="Caculator-java">Caculator.java<a class="header-anchor" href="#Caculator-java">#</a></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> el;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Tiam</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2022/11/18 16:37</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 简易计算结果集</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Calculator</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> firstParam;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> secondParam;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">operator</span> <span class="operator">=</span> <span class="string">&quot;+&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> result;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">calculator</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (<span class="built_in">this</span>.operator) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;+&quot;</span>:</span><br><span class="line">                <span class="built_in">this</span>.result = <span class="built_in">this</span>.firstParam + <span class="built_in">this</span>.secondParam;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;-&quot;</span>:</span><br><span class="line">                <span class="built_in">this</span>.result = <span class="built_in">this</span>.firstParam - <span class="built_in">this</span>.secondParam;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;*&quot;</span>:</span><br><span class="line">                <span class="built_in">this</span>.result = <span class="built_in">this</span>.firstParam * <span class="built_in">this</span>.secondParam;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;/&quot;</span>:</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>.firstParam == <span class="number">0</span>) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;被除数不能为0&quot;</span>);</span><br><span class="line">                <span class="built_in">this</span>.result = <span class="built_in">this</span>.firstParam / <span class="built_in">this</span>.secondParam;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;运算符异常&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Tomcat-乱码问题">Tomcat 乱码问题<a class="header-anchor" href="#Tomcat-乱码问题">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p>打开在安装目录下的<code>conf</code>文件夹中的<code>logging.properties</code>文件</p></li><li class="lvl-2"><p>更改这几个编码格式</p></li><li class="lvl-2"><p>server日志正常，打印正常，（全部更改为GBK将会导致打印乱码）</p></li><li class="lvl-2"><p>TomcatLocalhostLog 正常</p></li><li class="lvl-2"><p>TomcatcatalinaLog 正常</p></li></ul><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">1catalina.org.apache.juli.FileHandler.encoding</span> = <span class="string">GBK</span></span><br><span class="line"><span class="attr">2localhost.org.apache.juli.AsyncFileHandler.encoding</span> = <span class="string">GBK</span></span><br><span class="line"><span class="attr">3manager.org.apache.juli.AsyncFileHandler.encoding</span> = <span class="string">UTF-8</span></span><br><span class="line"><span class="attr">4host-manager.org.apache.juli.AsyncFileHandler.encoding</span> = <span class="string">UTF-8</span></span><br><span class="line"><span class="attr">java.util.logging.ConsoleHandler.encoding</span> = <span class="string">GBK</span></span><br></pre></td></tr></table></figure><h2 id="JSTL标签">JSTL标签<a class="header-anchor" href="#JSTL标签">#</a></h2><h3 id="catch">catch<a class="header-anchor" href="#catch">#</a></h3><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: <span class="number">30362</span></span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">11</span>/<span class="number">25</span></span><br><span class="line">  Time: <span class="number">16</span>:<span class="number">47</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%<span class="meta">@taglib</span> prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class="line">&lt;jsp:useBean id=<span class="string">&quot;person&quot;</span> class=<span class="string">&quot;hbnu.week_1.Person&quot;</span> /&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;<span class="keyword">catch</span> 标签&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;c:<span class="keyword">catch</span> <span class="keyword">var</span>=<span class="string">&quot;errorInfo&quot;</span>&gt;</span><br><span class="line">    &lt;%--    未导入person =&gt; 异常--%&gt;</span><br><span class="line">    &lt;c:set target=<span class="string">&quot;$&#123;person&#125;&quot;</span> property=<span class="string">&quot;name&quot;</span> value=<span class="string">&quot;张三&quot;</span>/&gt;</span><br><span class="line">    &lt;c:out value=<span class="string">&quot;person.name&quot;</span>/&gt;</span><br><span class="line">&lt;/c:<span class="keyword">catch</span>&gt;</span><br><span class="line">&lt;h3&gt;异常信息:&lt;/h3&gt;</span><br><span class="line">&lt;li&gt;&lt;c:out value=<span class="string">&quot;$&#123;errorInfo&#125;&quot;</span>/&gt;&lt;/li&gt;</span><br><span class="line">&lt;li&gt;&lt;c:out value=<span class="string">&quot;$&#123;errorInfo.printStackTrace()&#125;&quot;</span>/&gt;&lt;/li&gt;</span><br><span class="line">&lt;li&gt;&lt;c:out value=<span class="string">&quot;$&#123;errorInfo.toString()&#125;&quot;</span>/&gt;&lt;/li&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="choose">choose<a class="header-anchor" href="#choose">#</a></h3><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: <span class="number">30362</span></span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">11</span>/<span class="number">25</span></span><br><span class="line">  Time: <span class="number">17</span>:<span class="number">14</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;choose 多条件选择标签&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;c:set <span class="keyword">var</span>=<span class="string">&quot;score&quot;</span> value=<span class="string">&quot;88&quot;</span>/&gt;</span><br><span class="line">    &lt;h1&gt;只会执行一个, 遇到第一个符合条件的不再执行执行后面的&lt;/h1&gt;</span><br><span class="line">    &lt;c:choose&gt;</span><br><span class="line">        &lt;c:when test=<span class="string">&quot;$&#123;score&gt;=90&#125;&quot;</span>&gt;</span><br><span class="line">            &lt;c:out value=<span class="string">&quot;优秀&quot;</span>/&gt;</span><br><span class="line">        &lt;/c:when&gt;</span><br><span class="line">        &lt;c:when test=<span class="string">&quot;$&#123;score&gt;=80&#125;&quot;</span>&gt;</span><br><span class="line">            &lt;c:out value=<span class="string">&quot;良好&quot;</span>/&gt;</span><br><span class="line">        &lt;/c:when&gt;</span><br><span class="line">        &lt;c:when test=<span class="string">&quot;$&#123;score&gt;=70&#125;&quot;</span>&gt;</span><br><span class="line">            &lt;c:out value=<span class="string">&quot;一般&quot;</span>/&gt;</span><br><span class="line">        &lt;/c:when&gt;</span><br><span class="line">        &lt;c:when test=<span class="string">&quot;$&#123;score&gt;=60&#125;&quot;</span>&gt;</span><br><span class="line">            &lt;c:out value=<span class="string">&quot;还行&quot;</span>/&gt;</span><br><span class="line">        &lt;/c:when&gt;</span><br><span class="line">        &lt;c:otherwise&gt;</span><br><span class="line">            &lt;c:out value=<span class="string">&quot;成绩不合格, 请回考试中心重新打印成绩&quot;</span>/&gt;</span><br><span class="line">        &lt;/c:otherwise&gt;</span><br><span class="line">    &lt;/c:choose&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="forEach">forEach ***<a class="header-anchor" href="#forEach">#</a></h3><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: <span class="number">30362</span></span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">11</span>/<span class="number">25</span></span><br><span class="line">  Time: <span class="number">17</span>:<span class="number">25</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;forEach 遍历标签&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;forEach 遍历标签&lt;/h1&gt;</span><br><span class="line">- name 从集合中取出的元素 (必须)</span><br><span class="line">- items 要遍历的集合 (必须)</span><br><span class="line">- state 元素在集合中的信息.</span><br><span class="line">&lt;c:forEach <span class="keyword">var</span>=<span class="string">&quot;name&quot;</span> items=<span class="string">&quot;Collections&quot;</span> varStatus=<span class="string">&quot;state&quot;</span> begin=<span class="string">&quot;begin&quot;</span> end=<span class="string">&quot;end&quot;</span> step=<span class="string">&quot;step&quot;</span> &gt;</span><br><span class="line">    &lt;c:out value=<span class="string">&quot;name&quot;</span> /&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="remove">remove<a class="header-anchor" href="#remove">#</a></h3><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: <span class="number">30362</span></span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">11</span>/<span class="number">25</span></span><br><span class="line">  Time: <span class="number">16</span>:<span class="number">42</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%<span class="meta">@taglib</span> prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;JSTL remove&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;remove 标签&lt;/h3&gt;</span><br><span class="line">&lt;%-- 默认page域--%&gt;</span><br><span class="line">&lt;c:set <span class="keyword">var</span>=<span class="string">&quot;name&quot;</span> value=<span class="string">&quot;陈思宇&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;li&gt;&lt;c:out value=<span class="string">&quot;$&#123;name&#125;&quot;</span>/&gt; &lt;/li&gt;</span><br><span class="line"></span><br><span class="line">&lt;c:remove <span class="keyword">var</span>=<span class="string">&quot;name&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;li&gt;&lt;c:out value=<span class="string">&quot;$&#123;name&#125;&quot;</span> <span class="keyword">default</span>=<span class="string">&quot;已被移除显示 默认值&quot;</span>/&gt; &lt;/li&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="set">set<a class="header-anchor" href="#set">#</a></h3><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: <span class="number">30362</span></span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">11</span>/<span class="number">25</span></span><br><span class="line">  Time: <span class="number">16</span>:<span class="number">25</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%<span class="meta">@taglib</span> prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class="line">&lt;jsp:useBean id=<span class="string">&quot;person&quot;</span> class=<span class="string">&quot;hbnu.week_1.Person&quot;</span> /&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;JSTL set标签&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h3&gt;将数据存入指定域中&lt;/h3&gt;</span><br><span class="line">&lt;c:set <span class="keyword">var</span>=<span class="string">&quot;username&quot;</span> value=<span class="string">&quot;陈思宇&quot;</span> scope=<span class="string">&quot;request&quot;</span>/&gt;</span><br><span class="line">&lt;li&gt;&lt;c:out value=<span class="string">&quot;$&#123;username&#125;&quot;</span>/&gt;&lt;/li&gt;</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;将数据存入bean中&lt;/h3&gt;</span><br><span class="line">&lt;c:set target=<span class="string">&quot;$&#123;person&#125;&quot;</span> property=<span class="string">&quot;name&quot;</span>&gt;张三&lt;/c:set&gt;</span><br><span class="line">&lt;c:set target=<span class="string">&quot;$&#123;person&#125;&quot;</span> property=<span class="string">&quot;age&quot;</span> value=<span class="string">&quot;18&quot;</span> /&gt;</span><br><span class="line">&lt;li&gt;&lt;c:out value=<span class="string">&quot;$&#123;person.name&#125;&quot;</span>/&gt;&lt;/li&gt;</span><br><span class="line">&lt;li&gt;&lt;c:out value=<span class="string">&quot;$&#123;person.age&#125;&quot;</span>/&gt;&lt;/li&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="遍历数据到jsp">遍历数据到jsp<a class="header-anchor" href="#遍历数据到jsp">#</a></h2><p><code>SelectAllUserServlet.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@WebServlet(&quot;/findAllUser&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SelectAllUserServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">UserService</span> <span class="variable">userService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserServiceImpl</span>();</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doPost(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">// 获取所有用户信息</span></span><br><span class="line">        List&lt;User&gt; users = userService.findAllUser();</span><br><span class="line">        <span class="comment">// 存入request域, forward跳转可访问, a标签跳转不可访问</span></span><br><span class="line">        req.setAttribute(<span class="string">&quot;users&quot;</span>,users);</span><br><span class="line">        req.getRequestDispatcher(<span class="string">&quot;/hbnu/week_2/userInfo.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>userInfo.jsp</code></p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: <span class="number">30362</span></span><br><span class="line">  Date: <span class="number">2022</span>/<span class="number">12</span>/<span class="number">1</span></span><br><span class="line">  Time: <span class="number">10</span>:<span class="number">13</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;%<span class="meta">@taglib</span> prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;用户信息&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;table align=<span class="string">&quot;center&quot;</span> border=<span class="string">&quot;1px solid black&quot;</span>&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;th&gt;序号&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;账户&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;密码&lt;/th&gt;</span><br><span class="line">        &lt;th&gt;邮箱&lt;/th&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;%--从Request域中取出数据, 并遍历--%&gt;</span><br><span class="line">    &lt;jsp:useBean id=<span class="string">&quot;users&quot;</span> scope=<span class="string">&quot;request&quot;</span> type=<span class="string">&quot;java.util.List&quot;</span>/&gt;</span><br><span class="line">    &lt;c:forEach <span class="keyword">var</span>=<span class="string">&quot;user&quot;</span> items=<span class="string">&quot;$&#123;users&#125;&quot;</span> varStatus=<span class="string">&quot;status&quot;</span> &gt;</span><br><span class="line">        &lt;tr align=<span class="string">&quot;center&quot;</span>&gt;</span><br><span class="line">            &lt;td&gt;$&#123;status.count&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;user.name&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;user.pwd&#125;&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;$&#123;user.email&#125;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/c:forEach&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="数据库连接工具类-数据池">数据库连接工具类 | 数据池<a class="header-anchor" href="#数据库连接工具类-数据池">#</a></h2><h3 id="db-properties">db.properties<a class="header-anchor" href="#db-properties">#</a></h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">driverClassName</span> = <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span> = <span class="string">jdbc:mysql://localhost:3306/jdbcdemo?serverTimezone=GMT&amp;useSSL=false&amp;characterEncoding=utf-8</span></span><br><span class="line"><span class="attr">username</span> = <span class="string">root</span></span><br><span class="line"><span class="attr">password</span> = <span class="string">123456</span></span><br></pre></td></tr></table></figure><h3 id="JDBCUtils">JDBCUtils<a class="header-anchor" href="#JDBCUtils">#</a></h3><ul class="lvl-0"><li class="lvl-2"><p><code>mysql-connector-j-8.0.31.jar</code></p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ResourceBundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JDBCUtils</span> &#123;</span><br><span class="line">    <span class="comment">// 获取配置文件</span></span><br><span class="line">    <span class="keyword">static</span> ResourceBundle bundle;</span><br><span class="line">    <span class="keyword">static</span> String driverClass;</span><br><span class="line">    <span class="keyword">static</span> String url;</span><br><span class="line">    <span class="keyword">static</span> String username;</span><br><span class="line">    <span class="keyword">static</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        bundle = ResourceBundle.getBundle(<span class="string">&quot;配置文件路径 \\ jdbc&quot;</span>); <span class="comment">// 无文件后缀</span></span><br><span class="line">        driverClass = bundle.getString(<span class="string">&quot;driverClassName&quot;</span>);</span><br><span class="line">        url = bundle.getString(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">        username = bundle.getString(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        password = bundle.getString(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(driverClass);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title function_">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException &#123;</span><br><span class="line">        <span class="keyword">return</span> DriverManager.getConnection(url, username, password);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">close</span><span class="params">(ResultSet rs, Statement st,Connection co)</span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(rs!=<span class="literal">null</span>) rs.close();</span><br><span class="line">            <span class="keyword">if</span>(st!=<span class="literal">null</span>) st.close();</span><br><span class="line">            <span class="keyword">if</span>(co!=<span class="literal">null</span>) co.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C3P0Utils">C3P0Utils<a class="header-anchor" href="#C3P0Utils">#</a></h3><ul class="lvl-0"><li class="lvl-2"><p><code>c3p0-0.9.1.2.jar</code></p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hbnu.week_2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.beans.PropertyVetoException;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mchange.v2.c3p0.ComboPooledDataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Tiam</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2022/12/1 10:10</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">C3P0Util</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">NAME</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">PWD</span> <span class="operator">=</span> <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">URL</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3306/java_design_20221102&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">DRIVER</span> <span class="operator">=</span> <span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ComboPooledDataSource c3p0;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        c3p0 = <span class="keyword">new</span> <span class="title class_">ComboPooledDataSource</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title function_">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException, PropertyVetoException &#123;</span><br><span class="line">        c3p0.setDriverClass(DRIVER);</span><br><span class="line">        c3p0.setJdbcUrl(URL);</span><br><span class="line">        c3p0.setUser(NAME);</span><br><span class="line">        c3p0.setPassword(PWD);</span><br><span class="line">        <span class="keyword">return</span> c3p0.getConnection();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">cloes</span><span class="params">(ResultSet rs, Statement st, Connection co)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (rs != <span class="literal">null</span>) rs.close();</span><br><span class="line">            <span class="keyword">if</span> (st != <span class="literal">null</span>) st.close();</span><br><span class="line">            <span class="keyword">if</span> (co != <span class="literal">null</span>) co.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DruidUtils">DruidUtils<a class="header-anchor" href="#DruidUtils">#</a></h3><ul class="lvl-0"><li class="lvl-2"><p><code>druid-1.1.10.jar</code></p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hbnu.week_2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSourceFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Tiam</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2022/12/1 10:10</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DruidUtil</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">NAME</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">PWD</span> <span class="operator">=</span> <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">URL</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3306/java_design_20221102&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">DRIVER</span> <span class="operator">=</span> <span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> DataSource dataSource;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        Map&lt;String, String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(<span class="number">4</span>);</span><br><span class="line">        <span class="comment">// 键 固定</span></span><br><span class="line">        map.put(<span class="string">&quot;username&quot;</span>, NAME);</span><br><span class="line">        map.put(<span class="string">&quot;password&quot;</span>, PWD);</span><br><span class="line">        map.put(<span class="string">&quot;url&quot;</span>, URL);</span><br><span class="line">        map.put(<span class="string">&quot;driverClassName&quot;</span>, DRIVER);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            dataSource = DruidDataSourceFactory.createDataSource(map);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title function_">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> dataSource.getConnection();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">cloes</span><span class="params">(ResultSet rs, Statement st, Connection co)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (rs != <span class="literal">null</span>) rs.close();</span><br><span class="line">            <span class="keyword">if</span> (st != <span class="literal">null</span>) st.close();</span><br><span class="line">            <span class="keyword">if</span> (co != <span class="literal">null</span>) co.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DAO">DAO<a class="header-anchor" href="#DAO">#</a></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;User&gt; <span class="title function_">findAllUser</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Connection</span> <span class="variable">con</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">PreparedStatement</span> <span class="variable">ps</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        con = DruidUtil.getConnection();</span><br><span class="line">        <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from User&quot;</span>;</span><br><span class="line">        ps = con.prepareStatement(sql);</span><br><span class="line">        rs = ps.executeQuery();</span><br><span class="line">        <span class="comment">// 封装为集合返回</span></span><br><span class="line">        List&lt;User&gt; res = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">            <span class="comment">// 根据数据库表中的字段名获取其对应的数据</span></span><br><span class="line">            res.add(<span class="keyword">new</span> <span class="title class_">User</span>(rs.getString(<span class="string">&quot;username&quot;</span>), rs.getString(<span class="string">&quot;password&quot;</span>), rs.getString(<span class="string">&quot;email&quot;</span>)));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (SQLException | PropertyVetoException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="comment">// 释放资源</span></span><br><span class="line">        DruidUtil.cloes(rs,ps,con);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Filter">Filter<a class="header-anchor" href="#Filter">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p>web.xml中注册</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>FilterUser<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>hbnu.week_2.filter.FilterUser<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--    配置过滤器拦截规则--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>FilterUser<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 直接访问该路径将会被拦截, 转发跳转则不会被拦截--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hbnu/week_2/userInfo.jsp<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--    过滤器链--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>或者使用注解的方式注册</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hbnu.week_2.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebFilter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Tiam</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2022/12/2 16:57</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 过滤器 javax.servlet下的包</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 拦截目标路径, 不再需要在web.xml中注册</span></span><br><span class="line"><span class="comment"> * 通过注解 注册的过滤器, 根据类名的字符串大小 比较进行 先后顺序执行</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebFilter(&quot;/hbnu/week_2/userInfo.jsp&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FilterUser1</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;过滤器初始化...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        <span class="comment">// 放行</span></span><br><span class="line">        <span class="comment">// filterChain.doFilter(servletRequest, servletResponse);</span></span><br><span class="line">        System.out.println(servletRequest);</span><br><span class="line">        System.out.println(servletResponse);</span><br><span class="line">        System.out.println(<span class="string">&quot;请求被拦截.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;过滤器被销毁...&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="登录拦截">登录拦截<a class="header-anchor" href="#登录拦截">#</a></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebFilter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Tiam</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2022/12/8 10:17</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebFilter(&quot;/*&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FilterLogin</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">req</span> <span class="operator">=</span> (HttpServletRequest)servletRequest;</span><br><span class="line">        <span class="type">HttpServletResponse</span> <span class="variable">resp</span> <span class="operator">=</span> (HttpServletResponse)servletResponse;</span><br><span class="line">        <span class="comment">// todo 判断去向, 如果不是访问登录页面, 拦截验证是否登录, </span></span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> req.getSession();</span><br><span class="line">        <span class="comment">// 如果未登录</span></span><br><span class="line">        <span class="keyword">if</span> (session.getAttribute(<span class="string">&quot;user&quot;</span>)== <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 重定向到登录页面</span></span><br><span class="line">            resp.sendRedirect(<span class="string">&quot;/login.jsp&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">// 放行</span></span><br><span class="line">            filterChain.doFilter(servletRequest,servletResponse);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="监听器">监听器<a class="header-anchor" href="#监听器">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p>事件源</p></li><li class="lvl-2"><p>监听器</p></li><li class="lvl-2"><p>注册监听器</p></li><li class="lvl-2"><p>响应行为</p></li><li class="lvl-2"><p>为每个web应用创建一个ServletContext对象</p></li><li class="lvl-2"><p>web.xml中注册监听器</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>hbnu.week_2.listener.ListenerDemo1<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hbnu.week_2.listener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContextEvent;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContextListener;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebListener;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Tiam</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2022/12/8 10:31</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebListener</span>  <span class="comment">// 直接使用注解注册</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ListenerDemo1</span> <span class="keyword">implements</span> <span class="title class_">ServletContextListener</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="comment">// 当ServletContext对象被 创建 时触发</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">contextInitialized</span><span class="params">(ServletContextEvent servletContextEvent)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="comment">// 当ServletContext对象被 销毁 时触发</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">contextDestroyed</span><span class="params">(ServletContextEvent servletContextEvent)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> hbnu.week_2.listener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContextAttributeEvent;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContextAttributeListener;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebListener;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Tiam</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2022/12/8 10:55</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 监听Servlet域属性</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebListener</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ListenerDemo2</span> <span class="keyword">implements</span> <span class="title class_">ServletContextAttributeListener</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">attributeAdded</span><span class="params">(ServletContextAttributeEvent servletContextAttributeEvent)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">attributeRemoved</span><span class="params">(ServletContextAttributeEvent servletContextAttributeEvent)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">attributeReplaced</span><span class="params">(ServletContextAttributeEvent servletContextAttributeEvent)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> JavaWeb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux命令实例</title>
      <link href="/artical/523e7b2b.html"/>
      <url>/artical/523e7b2b.html</url>
      
        <content type="html"><![CDATA[<h1>Linux命令</h1><p><a href="https://www.runoob.com/linux/linux-command-manual.html">Linux 命令大全</a></p><p><a href="https://gitee.com/didao233/vimcdoc">Vim 中文文档计划</a></p><p>[TOC]</p><h2 id="用户">用户<a class="header-anchor" href="#用户">#</a></h2><blockquote><p>管理员</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>账号: root</p></li><li class="lvl-2"><p>密码: 985464</p></li></ul><blockquote><p>普通用户</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>账号: tiam</p></li><li class="lvl-2"><p>密码: tiam</p></li></ul><p><img src="http://qiniu.yujing.fit/typora_img/Linux%E5%AF%BC%E5%9B%BE.png" alt="画布 1"></p><h2 id="ls命令">ls命令<a class="header-anchor" href="#ls命令">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看当前目录下文件</span></span><br><span class="line">[root@bogon ~]# ls</span><br><span class="line">anaconda-ks.cfg</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看隐藏文件</span></span><br><span class="line">[root@bogon ~]# ls -a</span><br><span class="line">.  ..  anaconda-ks.cfg  .bash_history  .bash_logout  .bash_profile  .bashrc  .cshrc  .lesshst  .tcshrc</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看详细信息</span></span><br><span class="line">[root@bogon ~]# ls -l</span><br><span class="line">总用量 4</span><br><span class="line">-rw-------. 1 root root 1413 12月  8 00:38 anaconda-ks.cfg</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">简写</span></span><br><span class="line">[root@bogon ~]# ll</span><br><span class="line">总用量 4</span><br><span class="line">-rw-------. 1 root root 1413 12月  8 00:38 anaconda-ks.cfg</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">组合使用</span> </span><br><span class="line">[root@bogon ~]# ls -la</span><br><span class="line">总用量 32</span><br><span class="line">dr-xr-x---.  2 root root  151 12月 11 13:15 .</span><br><span class="line">dr-xr-xr-x. 17 root root  224 12月 11 10:56 ..</span><br><span class="line">-rw-------.  1 root root 1413 12月  8 00:38 anaconda-ks.cfg</span><br><span class="line">-rw-------.  1 root root 1789 12月 11 21:40 .bash_history</span><br><span class="line">-rw-r--r--.  1 root root   18 12月 29 2013 .bash_logout</span><br><span class="line">-rw-r--r--.  1 root root  176 12月 29 2013 .bash_profile</span><br><span class="line">-rw-r--r--.  1 root root  176 12月 29 2013 .bashrc</span><br><span class="line">-rw-r--r--.  1 root root  100 12月 29 2013 .cshrc</span><br><span class="line">-rw-------.  1 root root   48 12月 11 13:15 .lesshst</span><br><span class="line">-rw-r--r--.  1 root root  129 12月 29 2013 .tcshrc</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-h 参数作用:以较人性化的方式显示文件</span></span><br><span class="line">[root@bogon ~]# ls -lah</span><br><span class="line">总用量 32K</span><br><span class="line">dr-xr-x---.  2 root root  151 12月 11 13:15 .</span><br><span class="line">dr-xr-xr-x. 17 root root  224 12月 11 10:56 ..</span><br><span class="line">-rw-------.  1 root root 1.4K 12月  8 00:38 anaconda-ks.cfg</span><br><span class="line">-rw-------.  1 root root 1.8K 12月 11 21:40 .bash_history</span><br><span class="line">-rw-r--r--.  1 root root   18 12月 29 2013 .bash_logout</span><br><span class="line">-rw-r--r--.  1 root root  176 12月 29 2013 .bash_profile</span><br><span class="line">-rw-r--r--.  1 root root  176 12月 29 2013 .bashrc</span><br><span class="line">-rw-r--r--.  1 root root  100 12月 29 2013 .cshrc</span><br><span class="line">-rw-------.  1 root root   48 12月 11 13:15 .lesshst</span><br><span class="line">-rw-r--r--.  1 root root  129 12月 29 2013 .tcshrc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看其它目录下文件</span></span><br><span class="line">[root@bogon ~]# ls /tmp</span><br><span class="line">ks-script-rGMaou                                                         vmware-root_653-4013264490  vmware-root_662-2689143848</span><br><span class="line">systemd-private-7ba72f0aad2a4bf0acb2fee2d9025397-chronyd.service-iMXRBt  vmware-root_654-2688750646  vmware-root_664-2722697761</span><br><span class="line">test1                                                                    vmware-root_660-2697467306  vmware-root_682-2697467275</span><br><span class="line">test2                                                                    vmware-root_661-4013919860  yum.log</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配合-l参数使用</span></span><br><span class="line">[root@bogon ~]# ls -l /tmp</span><br><span class="line">总用量 4</span><br><span class="line">-rwx------. 1 root root 836 12月  8 00:38 ks-script-rGMaou</span><br><span class="line">drwx------. 3 root root  17 12月 15 00:04 systemd-private-7ba72f0aad2a4bf0acb2fee2d9025397-chronyd.service-iMXRBt</span><br><span class="line">drwxr-xr-x. 3 root root  82 12月 11 13:23 test1</span><br><span class="line">drwxr-xr-x. 2 root root   6 12月 11 11:06 test2</span><br><span class="line">drwx------. 2 root root   6 12月  8 09:07 vmware-root_653-4013264490</span><br><span class="line">drwx------. 2 root root   6 12月 10 23:53 vmware-root_654-2688750646</span><br><span class="line">drwx------. 2 root root   6 12月 11 09:30 vmware-root_660-2697467306</span><br><span class="line">drwx------. 2 root root   6 12月 15 00:04 vmware-root_661-4013919860</span><br><span class="line">drwx------. 2 root root   6 12月 11 19:23 vmware-root_662-2689143848</span><br><span class="line">drwx------. 2 root root   6 12月 11 18:07 vmware-root_664-2722697761</span><br><span class="line">drwx------. 2 root root   6 12月  8 00:39 vmware-root_682-2697467275</span><br><span class="line">-rw-------. 1 root root   0 12月  8 00:34 yum.log</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon tmp]# ll /</span><br><span class="line">总用量 16</span><br><span class="line">lrwxrwxrwx.   1 root root    7 12月  8 00:34 bin -&gt; usr/bin</span><br><span class="line">dr-xr-xr-x.   5 root root 4096 12月  8 00:38 boot</span><br><span class="line">drwxr-xr-x.  19 root root 3100 12月 15 09:26 dev</span><br><span class="line">drwxr-xr-x.  75 root root 8192 12月 16 00:25 etc</span><br><span class="line">drwxr-xr-x.   3 root root   23 12月  8 00:37 home</span><br><span class="line">lrwxrwxrwx.   1 root root    7 12月  8 00:34 lib -&gt; usr/lib</span><br><span class="line">lrwxrwxrwx.   1 root root    9 12月  8 00:34 lib64 -&gt; usr/lib64</span><br><span class="line">drwxr-xr-x.   2 root root    6 4月  11 2018 media</span><br><span class="line">drwxr-xr-x.   2 root root    6 4月  11 2018 mnt</span><br><span class="line">drwxr-xr-x.   2 root root    6 4月  11 2018 opt</span><br><span class="line">dr-xr-xr-x. 126 root root    0 12月 15 09:26 proc</span><br><span class="line">dr-xr-x---.   2 root root  151 12月 11 13:15 root</span><br><span class="line">drwxr-xr-x.  25 root root  740 12月 16 00:25 run</span><br><span class="line">lrwxrwxrwx.   1 root root    8 12月  8 00:34 sbin -&gt; usr/sbin</span><br><span class="line">drwxr-xr-x.   2 root root    6 4月  11 2018 srv</span><br><span class="line">dr-xr-xr-x.  13 root root    0 12月 15 09:26 sys</span><br><span class="line">drwxrwxrwt.   9 root root  156 12月 16 00:26 tmp</span><br><span class="line">drwxr-xr-x.  13 root root  155 12月  8 00:34 usr</span><br><span class="line">drwxr-xr-x.  19 root root  267 12月  8 00:39 var</span><br><span class="line">[root@bogon tmp]# ls -ld</span><br><span class="line">drwxrwxrwt. 9 root root 156 12月 16 00:26 .</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">参数-d</span></span><br><span class="line">[root@bogon tmp]# ls -d</span><br><span class="line">.</span><br></pre></td></tr></table></figure><h2 id="mkdir">mkdir<a class="header-anchor" href="#mkdir">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">以相对路径创建文件夹</span></span><br><span class="line">[root@bogon tmp]# mkdir haha</span><br><span class="line">[root@bogon tmp]# ll</span><br><span class="line">总用量 4</span><br><span class="line">drwxr-xr-x. 2 root root   6 12月 15 00:45 haha</span><br><span class="line">-rwx------. 1 root root 836 12月  8 00:38 ks-script-rGMaou</span><br><span class="line">drwx------. 3 root root  17 12月 15 00:04 systemd-private-7ba72f0aad2a4bf0acb2fee2d9025397-chronyd.service-iMXRBt</span><br><span class="line">drwxr-xr-x. 3 root root  82 12月 11 13:23 test1</span><br><span class="line">drwxr-xr-x. 2 root root   6 12月 11 11:06 test2</span><br><span class="line">-rw-------. 1 root root   0 12月  8 00:34 yum.log</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">以绝对路径创建文件夹</span></span><br><span class="line">[root@bogon tmp]# mkdir /tmp/haha1</span><br><span class="line">[root@bogon tmp]# ll</span><br><span class="line">总用量 4</span><br><span class="line">drwxr-xr-x. 2 root root   6 12月 15 00:45 haha</span><br><span class="line">drwxr-xr-x. 2 root root   6 12月 15 00:46 haha1</span><br><span class="line">-rwx------. 1 root root 836 12月  8 00:38 ks-script-rGMaou</span><br><span class="line">drwx------. 3 root root  17 12月 15 00:04 systemd-private-7ba72f0aad2a4bf0acb2fee2d9025397-chronyd.service-iMXRBt</span><br><span class="line">drwxr-xr-x. 3 root root  82 12月 11 13:23 test1</span><br><span class="line">drwxr-xr-x. 2 root root   6 12月 11 11:06 test2</span><br><span class="line">-rw-------. 1 root root   0 12月  8 00:34 yum.log</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">同时创建多个文件夹</span></span><br><span class="line">[root@bogon tmp]# mkdir dir1 dir2</span><br><span class="line">[root@bogon tmp]# ll</span><br><span class="line">总用量 4</span><br><span class="line">drwxr-xr-x. 2 root root   6 12月 15 00:49 dir1</span><br><span class="line">drwxr-xr-x. 2 root root   6 12月 15 00:49 dir2</span><br><span class="line">drwxr-xr-x. 2 root root   6 12月 15 00:45 haha</span><br><span class="line">drwxr-xr-x. 2 root root   6 12月 15 00:46 haha1</span><br><span class="line">-rwx------. 1 root root 836 12月  8 00:38 ks-script-rGMaou</span><br><span class="line">drwx------. 3 root root  17 12月 15 00:04 systemd-private-7ba72f0aad2a4bf0acb2fee2d9025397-chronyd.service-iMXRBt</span><br><span class="line">drwxr-xr-x. 3 root root  82 12月 11 13:23 test1</span><br><span class="line">drwxr-xr-x. 2 root root   6 12月 11 11:06 test2</span><br><span class="line">-rw-------. 1 root root   0 12月  8 00:34 yum.log</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-p参数作用对比</span></span><br><span class="line">[root@bogon tmp]# mkdir haha2/haha3</span><br><span class="line">mkdir: 无法创建目录&quot;haha2/haha3&quot;: 没有那个文件或目录</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">递归创建文件</span></span><br><span class="line">[root@bogon tmp]# mkdir -p haha2/haha3 </span><br><span class="line">[root@bogon tmp]# ll</span><br><span class="line">总用量 4</span><br><span class="line">drwxr-xr-x. 2 root root   6 12月 15 00:49 dir1</span><br><span class="line">drwxr-xr-x. 2 root root   6 12月 15 00:49 dir2</span><br><span class="line">drwxr-xr-x. 2 root root   6 12月 15 00:45 haha</span><br><span class="line">drwxr-xr-x. 2 root root   6 12月 15 00:46 haha1</span><br><span class="line">drwxr-xr-x. 3 root root  19 12月 15 00:50 haha2</span><br><span class="line">-rwx------. 1 root root 836 12月  8 00:38 ks-script-rGMaou</span><br><span class="line">drwx------. 3 root root  17 12月 15 00:04 systemd-private-7ba72f0aad2a4bf0acb2fee2d9025397-chronyd.service-iMXRBt</span><br><span class="line">drwxr-xr-x. 3 root root  82 12月 11 13:23 test1</span><br><span class="line">drwxr-xr-x. 2 root root   6 12月 11 11:06 test2</span><br><span class="line">-rw-------. 1 root root   0 12月  8 00:34 yum.log</span><br><span class="line">[root@bogon tmp]# ll haha2</span><br><span class="line">总用量 0</span><br><span class="line">drwxr-xr-x. 2 root root 6 12月 15 00:50 haha3</span><br></pre></td></tr></table></figure><h2 id="rmdir">rmdir<a class="header-anchor" href="#rmdir">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon tmp]# rmdir</span><br><span class="line">rmdir: 缺少操作数</span><br><span class="line">Try &#x27;rmdir --help&#x27; for more information.</span><br><span class="line">[root@bogon tmp]# rmdir haha2</span><br><span class="line">rmdir: 删除 &quot;haha2&quot; 失败: 目录非空</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">只能删除空目录,不常用</span></span><br><span class="line">[root@bogon tmp]# rmdir haha1</span><br><span class="line">[root@bogon tmp]# ll</span><br><span class="line">总用量 4</span><br><span class="line">drwxr-xr-x. 2 root root   6 12月 15 00:49 dir1</span><br><span class="line">drwxr-xr-x. 2 root root   6 12月 15 00:49 dir2</span><br><span class="line">drwxr-xr-x. 2 root root   6 12月 15 00:45 haha</span><br><span class="line">drwxr-xr-x. 3 root root  19 12月 15 00:50 haha2</span><br><span class="line">-rwx------. 1 root root 836 12月  8 00:38 ks-script-rGMaou</span><br><span class="line">drwx------. 3 root root  17 12月 15 00:04 systemd-private-7ba72f0aad2a4bf0acb2fee2d9025397-chronyd.service-iMXRBt</span><br><span class="line">drwxr-xr-x. 3 root root  82 12月 11 13:23 test1</span><br><span class="line">drwxr-xr-x. 2 root root   6 12月 11 11:06 test2</span><br><span class="line">-rw-------. 1 root root   0 12月  8 00:34 yum.log</span><br></pre></td></tr></table></figure><h2 id="cp">cp<a class="header-anchor" href="#cp">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon tmp]# cp haha2/haha3 haha</span><br><span class="line">cp: 略过目录&quot;haha2/haha3&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">复制文件夹需加上参数 -r</span></span><br><span class="line">[root@bogon tmp]# cp -r haha2/haha3 haha</span><br><span class="line">[root@bogon tmp]# ll haha2</span><br><span class="line">总用量 0</span><br><span class="line">drwxr-xr-x. 2 root root 6 12月 15 00:50 haha3</span><br><span class="line">[root@bogon tmp]# ll haha</span><br><span class="line">总用量 0</span><br><span class="line">drwxr-xr-x. 2 root root 6 12月 15 00:56 haha3  # 注意:两个文件时间不相同</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">保留目录属性复制,比如时间</span></span><br><span class="line">[root@bogon tmp]# cp -rp haha2/haha3 dir1 </span><br><span class="line">[root@bogon tmp]# ll dir1</span><br><span class="line">总用量 0</span><br><span class="line">drwxr-xr-x. 2 root root 6 12月 15 00:50 haha3</span><br><span class="line">[root@bogon tmp]# ll haha2</span><br><span class="line">总用量 0</span><br><span class="line">drwxr-xr-x. 2 root root 6 12月 15 00:50 haha3  # 注意:两个文件时间相同</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">同时复制多个文件</span></span><br><span class="line">[root@bogon tmp]# cp -r dir1 dir2 haha</span><br><span class="line">[root@bogon tmp]# ll haha</span><br><span class="line">总用量 0</span><br><span class="line">drwxr-xr-x. 3 root root 19 12月 15 01:02 dir1</span><br><span class="line">drwxr-xr-x. 2 root root  6 12月 15 01:02 dir2</span><br><span class="line">drwxr-xr-x. 2 root root  6 12月 15 00:56 haha3</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">复制到 haha/ 目录下并 改名为 rename</span></span><br><span class="line">[root@bogon tmp]# cp -r dir1 haha/rename</span><br><span class="line">[root@bogon tmp]# ll haha</span><br><span class="line">总用量 0</span><br><span class="line">drwxr-xr-x. 3 root root 19 12月 15 01:02 dir1</span><br><span class="line">drwxr-xr-x. 2 root root  6 12月 15 01:02 dir2</span><br><span class="line">drwxr-xr-x. 2 root root  6 12月 15 00:56 haha3</span><br><span class="line">drwxr-xr-x. 3 root root 19 12月 15 01:06 rename</span><br></pre></td></tr></table></figure><h2 id="rm">rm<a class="header-anchor" href="#rm">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-r删除目录</span></span><br><span class="line">[root@bogon tmp]# rm -r dir1</span><br><span class="line">rm：是否进入目录&quot;dir1&quot;? y</span><br><span class="line">rm：是否删除目录 &quot;dir1/haha3&quot;？y</span><br><span class="line">rm：是否删除目录 &quot;dir1&quot;？y</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-f 直接删除,不再询问</span></span><br><span class="line">[root@bogon tmp]# rm -f dir2</span><br><span class="line">rm: 无法删除&quot;dir2&quot;: 是一个目录</span><br><span class="line">[root@bogon tmp]# rm -rf dir2</span><br><span class="line">[root@bogon tmp]# ll</span><br><span class="line">总用量 4</span><br><span class="line">drwxr-xr-x. 6 root root  57 12月 15 01:06 haha</span><br><span class="line">drwxr-xr-x. 3 root root  19 12月 15 00:50 haha2</span><br><span class="line">-rwx------. 1 root root 836 12月  8 00:38 ks-script-rGMaou</span><br><span class="line">drwx------. 3 root root  17 12月 15 00:04 systemd-private-7ba72f0aad2a4bf0acb2fee2d9025397-chronyd.service-iMXRBt</span><br><span class="line">drwxr-xr-x. 3 root root  82 12月 11 13:23 test1</span><br><span class="line">drwxr-xr-x. 2 root root   6 12月 11 11:06 test2</span><br><span class="line">-rw-------. 1 root root   0 12月  8 00:34 yum.log</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">清空 /tmp/目录  通配符*</span></span><br><span class="line">[root@bogon tmp]# rm -rf /tmp/*</span><br><span class="line">[root@bogon tmp]# ll</span><br><span class="line">总用量 0</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@192 tmp]# rm -rf .</span><br><span class="line">rm: refusing to remove &quot;.&quot; or &quot;..&quot; directory: skipping &quot;.&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">清空当前目录</span></span><br><span class="line">[root@192 tmp]# rm -rf ./*</span><br><span class="line">[root@192 tmp]# ll</span><br><span class="line">总用量 0</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos ~]# ll</span><br><span class="line">总用量 172</span><br><span class="line">-rw-r--r-- 1 root root     0 12月 19 22:45 --add-repo</span><br><span class="line">-rw-r--r-- 1 root root 39800 7月   4 2014 python-iniparse-0.4-9.el7.noarch.rpm</span><br><span class="line">-rw-r--r-- 1 root root 67120 10月 15 2020 yum-cron-3.4.3-168.el7.centos.noarch.rpm</span><br><span class="line">-rw-r--r-- 1 root root 28348 7月   4 2014 yum-metadata-parser-1.1.4-10.el7.x86_64.rpm</span><br><span class="line">-rw-r--r-- 1 root root 35216 5月  14 2020 yum-plugin-fastestmirror-1.1.31-54.el7_8.noarch.rpm</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用通配符删除</span></span><br><span class="line">[root@VM-0-9-centos ~]# rm -f *rpm</span><br><span class="line">[root@VM-0-9-centos ~]# ll</span><br><span class="line">总用量 0</span><br><span class="line">-rw-r--r-- 1 root root 0 12月 19 22:45 --add-repo</span><br><span class="line">[root@VM-0-9-centos ~]# </span><br></pre></td></tr></table></figure><h2 id="mv">mv<a class="header-anchor" href="#mv">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@192 tmp]# rm -rf /tmp/*</span><br><span class="line">[root@192 tmp]# ll</span><br><span class="line">总用量 0</span><br><span class="line">[root@192 tmp]# mkdir test1</span><br><span class="line">[root@192 tmp]# ll</span><br><span class="line">总用量 0</span><br><span class="line">drwxr-xr-x. 2 root root 6 12月 15 09:41 test1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重命名</span></span><br><span class="line">[root@192 tmp]# mv test1 test2</span><br><span class="line">[root@192 tmp]# ll</span><br><span class="line">总用量 0</span><br><span class="line">drwxr-xr-x. 2 root root 6 12月 15 09:41 test2</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@192 tmp]# mkdir dir</span><br><span class="line">[root@192 tmp]# ll</span><br><span class="line">总用量 0</span><br><span class="line">drwxr-xr-x. 2 root root 6 12月 15 09:42 dir</span><br><span class="line">drwxr-xr-x. 2 root root 6 12月 15 09:41 test2</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">剪切/移动 文件 并改名</span></span><br><span class="line">[root@192 tmp]# mv dir test2/dir1</span><br><span class="line">[root@192 tmp]# ll</span><br><span class="line">总用量 0</span><br><span class="line">drwxr-xr-x. 3 root root 18 12月 15 09:42 test2</span><br><span class="line">[root@192 tmp]# ll test2</span><br><span class="line">总用量 0</span><br><span class="line">drwxr-xr-x. 2 root root 6 12月 15 09:42 dir1</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">移动dir1 到当前目录</span></span><br><span class="line">[root@192 tmp]# mv test2/dir1 .</span><br><span class="line">[root@192 tmp]# ll</span><br><span class="line">总用量 0</span><br><span class="line">drwxr-xr-x. 2 root root 6 12月 15 09:42 dir1</span><br><span class="line">drwxr-xr-x. 2 root root 6 12月 15 09:44 test2</span><br></pre></td></tr></table></figure><h2 id="touch">touch<a class="header-anchor" href="#touch">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建文件</span>   </span><br><span class="line">[root@192 tmp]# touch typroa</span><br><span class="line">[root@192 tmp]# ll</span><br><span class="line">总用量 0</span><br><span class="line">drwxr-xr-x. 2 root root 6 12月 15 09:42 dir1</span><br><span class="line">drwxr-xr-x. 2 root root 6 12月 15 09:44 test2   # 文件夹为&quot;d&quot;</span><br><span class="line">-rw-r--r--. 1 root root 0 12月 15 09:49 typroa   # 文件前缀为&quot;-&quot;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@192 tmp]# touch p~`!@#$%^&amp;*()_+=-&#123;&#125;</span><br><span class="line">-bash: !@#$%^: event not found</span><br><span class="line">[root@192 tmp]# touch %$#&amp;~</span><br><span class="line">[1] 15878</span><br><span class="line">-bash: /root: 是一个目录</span><br><span class="line">[1]+  完成                  touch %$#</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">同时创建多个文件</span> </span><br><span class="line">[root@192 tmp]# touch haha1 haha2</span><br><span class="line">[root@192 tmp]# ll</span><br><span class="line">总用量 0</span><br><span class="line">drwxr-xr-x. 2 root root 6 12月 15 09:42 dir1</span><br><span class="line">-rw-r--r--. 1 root root 0 12月 15 09:58 haha1</span><br><span class="line">-rw-r--r--. 1 root root 0 12月 15 09:58 haha2</span><br><span class="line">drwxr-xr-x. 2 root root 6 12月 15 09:44 test2</span><br><span class="line">-rw-r--r--. 1 root root 0 12月 15 09:49 typroa</span><br></pre></td></tr></table></figure><h2 id="cat-tac">cat/tac<a class="header-anchor" href="#cat-tac">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">正序查看</span></span><br><span class="line">[root@192 etc]# cat issue</span><br><span class="line">\S</span><br><span class="line">Kernel \r on an \m</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">反序查看</span></span><br><span class="line">[root@192 etc]# tac issue</span><br><span class="line"></span><br><span class="line">Kernel \r on an \m</span><br><span class="line">\S</span><br></pre></td></tr></table></figure><h2 id="more">more<a class="header-anchor" href="#more">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">回车换行,空格翻页,q退出 ,可显示当前进度</span></span><br><span class="line">[root@192 etc]# more services</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/etc/services:</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="variable">$Id</span>: services,v 1.55 2013/04/14 ovasik Exp $</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># Network services, Internet style</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">IANA services version: last updated 2013-04-10</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash">......</span></span><br></pre></td></tr></table></figure><p><img src="http://qiniu.yujing.fit/typora_img/image-20211215100625580.png" alt="image-20211215100625580"></p><h2 id="less">less<a class="header-anchor" href="#less">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p>下键、回车  【向下换行】</p></li><li class="lvl-2"><p>f键、空格、pageDown  【向下翻页】</p></li><li class="lvl-2"><p>PageUp  【向上翻页】</p></li><li class="lvl-2"><p>上键  【向上换行】</p></li><li class="lvl-2"><p>“:/关键字”   【冒号后输入斜杠“/&quot;，进入搜索状态，输入关键字查询】</p></li><li class="lvl-2"><p>n键 【跳转下一个匹配项】</p></li><li class="lvl-2"><p>区别： 不显示进度百分比</p></li><li class="lvl-2"><p>q键  【退出浏览】</p></li></ul><p><img src="http://qiniu.yujing.fit/typora_img/image-20211215100857060.png" alt="image-20211215100857060"></p><h2 id="head-tail">head/tail<a class="header-anchor" href="#head-tail">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">指定查看前3行内容</span></span><br><span class="line">[root@192 etc]# head -n 3 services</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/etc/services:</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="variable">$Id</span>: services,v 1.55 2013/04/14 ovasik Exp $</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># 参数与指定行数不加空格</span></span></span><br><span class="line">[root@192 etc]# head -n2 services</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/etc/services:</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="variable">$Id</span>: services,v 1.55 2013/04/14 ovasik Exp $</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">默认10行,不写参数 -n</span></span><br><span class="line">[root@192 etc]# head services</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/etc/services:</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="variable">$Id</span>: services,v 1.55 2013/04/14 ovasik Exp $</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># Network services, Internet style</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">IANA services version: last updated 2013-04-10</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># Note that it is presently the policy of IANA to assign a single well-known</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">port number <span class="keyword">for</span> both TCP and UDP; hence, most entries here have two entries</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">even <span class="keyword">if</span> the protocol doesn<span class="string">&#x27;t support UDP operations.</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Updated from RFC 1700, ``Assigned Numbers&#x27;</span><span class="string">&#x27; (October 1994).  Not all ports</span></span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">指定查看后两行内容</span></span><br><span class="line">[root@192 etc]# tail -n2 services</span><br><span class="line">iqobject        48619/udp               # iqobject</span><br><span class="line">matahari        49000/tcp               # Matahari Broker</span><br><span class="line">[root@192 etc]# tail -n3 services</span><br><span class="line">iqobject        48619/tcp               # iqobject</span><br><span class="line">iqobject        48619/udp               # iqobject</span><br><span class="line">matahari        49000/tcp               # Matahari Broker</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">默认后10行</span></span><br><span class="line">[root@192 etc]# tail services</span><br><span class="line">3gpp-cbsp       48049/tcp               # 3GPP Cell Broadcast Service Protocol</span><br><span class="line">isnetserv       48128/tcp               # Image Systems Network Services</span><br><span class="line">isnetserv       48128/udp               # Image Systems Network Services</span><br><span class="line">blp5            48129/tcp               # Bloomberg locator</span><br><span class="line">blp5            48129/udp               # Bloomberg locator</span><br><span class="line">com-bardac-dw   48556/tcp               # com-bardac-dw</span><br><span class="line">com-bardac-dw   48556/udp               # com-bardac-dw</span><br><span class="line">iqobject        48619/tcp               # iqobject</span><br><span class="line">iqobject        48619/udp               # iqobject</span><br><span class="line">matahari        49000/tcp               # Matahari Broker</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p><code>tail -f</code>动态显示文件内容</p></li></ul><h2 id="ln">ln<a class="header-anchor" href="#ln">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@192 tmp]# touch test.list</span><br><span class="line">[root@192 tmp]# mkdir dir1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在dir1的目录下创建test.list的软连接  参数-s  创建软链接</span></span><br><span class="line">[root@192 tmp]# ln -s test.list dir1</span><br><span class="line">[root@192 tmp]# ll dir1</span><br><span class="line">总用量 0</span><br><span class="line">lrwxrwxrwx. 1 root root 9 12月 15 10:27 test.list -&gt; test.list</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在dir1</span></span><br><span class="line">[root@192 tmp]# ln test.list dir1/yinlianjie</span><br><span class="line">[root@192 tmp]# ll dir1</span><br><span class="line">总用量 0</span><br><span class="line">lrwxrwxrwx. 1 root root 9 12月 15 10:27 test.list -&gt; test.list</span><br><span class="line">-rw-r--r--. 2 root root 0 12月 15 10:26 yinlianjie</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建软连接并改名</span></span><br><span class="line">[root@192 tmp]# ln -s test.list dir1/ruan</span><br><span class="line">[root@192 tmp]# ll dir1</span><br><span class="line">总用量 0</span><br><span class="line">lrwxrwxrwx. 1 root root 9 12月 15 10:28 ruan -&gt; test.list    # &quot;l&quot;开头,表示文件类型为软链接</span><br><span class="line">lrwxrwxrwx. 1 root root 9 12月 15 10:27 test.list -&gt; test.list</span><br><span class="line">-rw-r--r--. 2 root root 0 12月 15 10:26 yinlianjie</span><br></pre></td></tr></table></figure><h2 id="chmod">chmod<a class="header-anchor" href="#chmod">#</a></h2><blockquote><p>更改文件权限,限制可使用者</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>文件所有者</p></li><li class="lvl-2"><p>root管理员</p></li></ul><blockquote><p>用户分类</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p><code>u</code>      user  所有人</p></li><li class="lvl-2"><p><code>g</code>      group 所属组</p></li><li class="lvl-2"><p><code>o</code>      other 其他人</p></li></ul><blockquote><p>删除文件权限</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p><mark>对文件所在目录拥有<code>w</code>写权限，对文件拥有<code>w</code>权限只代表可以修改文件内容</mark></p></li></ul><blockquote><p>权限继承</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>只有拥有了文件目录的权限,才可真正拥有其子目录下相关权限. 即使拥有文件的权限为<code>7</code>,但是对文件所在目录的权限为<code>0</code>,也是无法读写的.</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon tmp]# ll</span><br><span class="line">总用量 0</span><br><span class="line">drwxr-xr-x. 2 root root 53 12月 15 10:28 dir1</span><br><span class="line">-rw-r--r--. 2 root root  0 12月 15 10:26 test.list</span><br><span class="line">drwx------. 2 root root  6 12月 16 00:25 vmware-root_666-2731021219</span><br><span class="line">[root@bogon tmp]# chmod u+x test.list</span><br><span class="line">[root@bogon tmp]# ll</span><br><span class="line">总用量 0</span><br><span class="line">drwxr-xr-x. 2 root root 53 12月 15 10:28 dir1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">注意对比:权限已从<span class="string">&quot;rw-&quot;</span>变为了<span class="string">&quot;rwx&quot;</span></span></span><br><span class="line">-rwxr--r--. 2 root root  0 12月 15 10:26 test.list</span><br><span class="line">drwx------. 2 root root  6 12月 16 00:25 vmware-root_666-2731021219</span><br><span class="line">[root@bogon tmp]# chmod u-x test.list </span><br><span class="line">[root@bogon tmp]# ll</span><br><span class="line">总用量 0</span><br><span class="line">drwxr-xr-x. 2 root root 53 12月 15 10:28 dir1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">&quot;x&quot;</span>执行权限被移除</span></span><br><span class="line">-rw-r--r--. 2 root root  0 12月 15 10:26 test.list</span><br><span class="line">drwx------. 2 root root  6 12月 16 00:25 vmware-root_666-2731021219</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置为<span class="string">&quot;r&quot;</span>,只读权限</span></span><br><span class="line">[root@bogon tmp]# chmod u=r test.list </span><br><span class="line">[root@bogon tmp]# ll</span><br><span class="line">总用量 0</span><br><span class="line">drwxr-xr-x. 2 root root 53 12月 15 10:28 dir1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> <span class="string">&quot;r--&quot;</span>成功!</span></span><br><span class="line">-r--r--r--. 2 root root  0 12月 15 10:26 test.list</span><br><span class="line">drwx------. 2 root root  6 12月 16 00:25 vmware-root_666-2731021219</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">同时更改多个用户类型的权限</span></span><br><span class="line">[root@bogon tmp]# chmod u=rw,g=rw,o=rw test.list </span><br><span class="line">[root@bogon tmp]# ll</span><br><span class="line">总用量 0</span><br><span class="line">drwxr-xr-x. 2 root root 53 12月 15 10:28 dir1</span><br><span class="line">-rw-rw-rw-. 2 root root  0 12月 15 10:26 test.list</span><br><span class="line">drwx------. 2 root root  6 12月 16 00:25 vmware-root_666-2731021219</span><br></pre></td></tr></table></figure><blockquote><p>权限的数字表示(一个用户的权限在0~7之间)</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p><code>r</code> — 4</p></li><li class="lvl-2"><p><code>w</code> — 2</p></li><li class="lvl-2"><p><code>x</code> — 1</p></li></ul><p><img src="http://qiniu.yujing.fit/typora_img/image-20211216013009127.png" alt="image-20211216013009127"></p><p>例:把test.list文件的权限更改为 <code>r--rw----</code></p><ul class="lvl-0"><li class="lvl-2"><p><code>r--</code> == 4</p></li><li class="lvl-2"><p><code>rw-</code> == 6</p></li><li class="lvl-2"><p><code>---</code> == 0</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon tmp]# chmod 460 test.list </span><br><span class="line">[root@bogon tmp]# ll</span><br><span class="line">总用量 0</span><br><span class="line">drwxr-xr-x. 2 root root 53 12月 15 10:28 dir1</span><br><span class="line">-r--rw----. 2 root root  0 12月 15 10:26 test.list</span><br><span class="line">drwx------. 2 root root  6 12月 16 00:25 vmware-root_666-2731021219</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon tmp]# ll dir1/changemod/</span><br><span class="line">总用量 0</span><br><span class="line">drwxr-xr-x. 2 root root 6 12月 16 01:05 mode</span><br><span class="line">[root@bogon tmp]# ll dir1</span><br><span class="line">总用量 0</span><br><span class="line">drwxr-xr-x. 3 root root 18 12月 16 01:05 changemod</span><br><span class="line">-r--rw----. 2 root root  0 12月 15 10:26 yinlianjie</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">递归更改,将目录dir1及目录下所有文件权限全部更改为`777`</span></span><br><span class="line">[root@bogon tmp]# chmod -R 777 dir1</span><br><span class="line">[root@bogon tmp]# ll dir1</span><br><span class="line">总用量 0</span><br><span class="line">drwxrwxrwx. 3 root root 18 12月 16 01:05 changemod</span><br><span class="line">-rwxrwxrwx. 2 root root  0 12月 15 10:26 yinlianjie</span><br><span class="line">[root@bogon tmp]# ll dir1/changemod/</span><br><span class="line">总用量 0</span><br><span class="line">drwxrwxrwx. 2 root root 6 12月 16 01:05 mode</span><br><span class="line">[root@bogon tmp]# ll</span><br><span class="line">总用量 0</span><br><span class="line">drwxrwxrwx. 3 root root 41 12月 16 01:04 dir1</span><br><span class="line">-rwxrwxrwx. 2 root root  0 12月 15 10:26 test.list</span><br><span class="line">drwx------. 2 root root  6 12月 16 00:25 vmware-root_666-2731021219</span><br></pre></td></tr></table></figure><h2 id="chown">chown<a class="header-anchor" href="#chown">#</a></h2><blockquote><p>更改文件所有者,限制:只有管理员<strong>root</strong>可用</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">tiam用户 使用</span></span><br><span class="line">[tiam@bogon tmp]$ chown tiam dir1</span><br><span class="line">chown: 正在更改&quot;dir1&quot; 的所有者: 不允许的操作</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">root使用</span></span><br><span class="line">[root@bogon tmp]# chown tiam dir1</span><br><span class="line">[root@bogon tmp]# ll</span><br><span class="line">总用量 0</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">注意文件 所有者 已经变化</span></span><br><span class="line">drwxrwxrwx. 3 tiam root 41 12月 16 01:04 dir1</span><br><span class="line">drwx------. 3 root root 17 12月 16 20:17 systemd-private-36d853d491874b5c84f83329b44cddab-chronyd.service-S5zkhE</span><br><span class="line">-rwxrwxrwx. 2 root root  0 12月 15 10:26 test.list</span><br><span class="line">drwx------. 2 root root  6 12月 16 00:25 vmware-root_666-2731021219</span><br><span class="line">drwx------. 2 root root  6 12月 16 20:17 vmware-root_673-3988556249</span><br></pre></td></tr></table></figure><h2 id="chgrp">chgrp<a class="header-anchor" href="#chgrp">#</a></h2><blockquote><p>更改所属组</p></blockquote><h2 id="groupadd">groupadd<a class="header-anchor" href="#groupadd">#</a></h2><blockquote><p>添加所属组</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建 组</span></span><br><span class="line">[root@bogon tmp]# groupadd softwareclass</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更改 dir1 文件的所属组</span></span><br><span class="line">[root@bogon tmp]# chgrp softwareclass dir1</span><br><span class="line">[root@bogon tmp]# ll</span><br><span class="line">总用量 0</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">注意!!!</span></span><br><span class="line">drwxrwxrwx. 3 tiam softwareclass 41 12月 16 01:04 dir1</span><br><span class="line">drwx------. 3 root root          17 12月 16 20:17 systemd-private-36d853d491874b5c84f83329b44cddab-chronyd.service-S5zkhE</span><br><span class="line">-rwxrwxrwx. 2 root root           0 12月 15 10:26 test.list</span><br><span class="line">drwx------. 2 root root           6 12月 16 00:25 vmware-root_666-2731021219</span><br><span class="line">drwx------. 2 root root           6 12月 16 20:17 vmware-root_673-3988556249</span><br></pre></td></tr></table></figure><h2 id="useradd">useradd<a class="header-anchor" href="#useradd">#</a></h2><blockquote><p>添加用户用户名</p></blockquote><h2 id="passwd">passwd<a class="header-anchor" href="#passwd">#</a></h2><blockquote><p>添加用户密码  <code>-f</code> 强制执行</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon tmp]# useradd tiam</span><br><span class="line">[root@bogon tmp]# passwd tiam</span><br><span class="line">更改用户 tiam 的密码 。</span><br><span class="line">新的 密码：</span><br><span class="line">无效的密码： 密码少于 8 个字符</span><br><span class="line">重新输入新的 密码：</span><br><span class="line">抱歉，密码不匹配。</span><br><span class="line">新的 密码：</span><br><span class="line">无效的密码： 密码包含用户名在某些地方</span><br><span class="line">重新输入新的 密码：</span><br><span class="line">抱歉，密码不匹配。</span><br><span class="line">新的 密码：</span><br><span class="line">无效的密码： 密码少于 8 个字符</span><br><span class="line">重新输入新的 密码：</span><br><span class="line">抱歉，密码不匹配。</span><br><span class="line">passwd: 已经超出服务重试的最多次数</span><br></pre></td></tr></table></figure><h2 id="su-root">su root<a class="header-anchor" href="#su-root">#</a></h2><blockquote><p>切换root登录</p></blockquote><p><img src="http://qiniu.yujing.fit/typora_img/image-20211216012837396.png" alt="image-20211216012837396"></p><h2 id="exit-logout">exit/logout<a class="header-anchor" href="#exit-logout">#</a></h2><blockquote><p>退出登录</p></blockquote><h2 id="shutdown-h-now">shutdown -h now<a class="header-anchor" href="#shutdown-h-now">#</a></h2><blockquote><p>关机</p></blockquote><h2 id="umask">umask<a class="header-anchor" href="#umask">#</a></h2><blockquote><p>缺省组</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>每个用户可属于多个组,但是当用户创建文件时,只会显示一个组,即缺省组</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看文件缺省权限</span></span><br><span class="line">[root@bogon tmp]# umask -S</span><br><span class="line">u=rwx,g=rx,o=rx</span><br><span class="line">[root@bogon tmp]# mkdir lamp</span><br><span class="line">[root@bogon tmp]# ls -l lamp</span><br><span class="line">总用量 0</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看目录lamp详细信息, 参数 -d 表示查看文件夹本身,而不是查看文件夹下内容</span></span><br><span class="line">[root@bogon tmp]# ls -ld lamp</span><br><span class="line">drwxr-xr-x. 2 root root 6 12月 16 20:56 lamp</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Linux中,新建文件默认去除 x 权限</span></span><br><span class="line">[root@bogon tmp]# ll bloom</span><br><span class="line">-rw-r--r--. 1 root root 0 12月 16 21:01 bloom</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-3"><p>Linux中,新建**<u>文件</u>**默认没有可执行权限</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改文件缺省权限</span></span><br><span class="line">[root@bogon tmp]# umask 077</span><br><span class="line">[root@bogon tmp]# mkdir lamb</span><br><span class="line">[root@bogon tmp]# ll -d lamb</span><br><span class="line">drwx------. 2 root root 6 12月 16 21:22 lamb</span><br><span class="line">[root@bogon tmp]# touch lamb.list</span><br><span class="line">[root@bogon tmp]# ll lamb.list </span><br><span class="line">-rw-------. 1 root root 0 12月 16 21:23 lamb.list</span><br></pre></td></tr></table></figure><blockquote><p>解释</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p><code>0</code>  对应<code>---</code></p></li><li class="lvl-2"><p><code>7</code>对应 <code>rwx</code></p></li><li class="lvl-2"><p><code>7</code>对应 <code>rwx</code></p></li><li class="lvl-2"><p>但是实际<strong>文件夹</strong> 缺省权限却是 <code>rwx --- ---</code></p></li><li class="lvl-2"><p>进行亦或运算后的结果</p></li><li class="lvl-2"><p><strong>文件</strong>权限去掉<code>x</code>权限, 即<code>rw- --- ---</code></p></li></ul><p>例:我想改回默认权限<code>rwx r-x r-x</code></p><ul class="lvl-0"><li class="lvl-2"><p><code>rwx</code>  ==&gt; <code>0</code></p></li><li class="lvl-2"><p><code>r-x</code> ==&gt; <code>2</code></p></li><li class="lvl-2"><p><code>r-x</code> ==&gt; 2</p></li></ul><p>测试:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon tmp]# umask 022</span><br><span class="line">[root@bogon tmp]# mkdir lamb1</span><br><span class="line">[root@bogon tmp]# ll -d lamb1</span><br><span class="line">drwxr-xr-x. 2 root root 6 12月 16 21:32 lamb1</span><br><span class="line">[root@bogon tmp]# umask -S</span><br><span class="line">u=rwx,g=rx,o=rx</span><br></pre></td></tr></table></figure><h2 id="find">find<a class="header-anchor" href="#find">#</a></h2><blockquote><p>不建议使用,占用服务器 ,以遍历的方式查询</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon tmp]# find lamb1</span><br><span class="line">lamb1</span><br><span class="line">[root@bogon tmp]# find es</span><br><span class="line">find: ‘es’: 没有那个文件或目录</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">精确搜索,在/etc目录下查询文件名为init的文件,区分大小写</span></span><br><span class="line">[root@bogon tmp]# find /etc -name init</span><br><span class="line">/etc/sysconfig/init</span><br><span class="line">/etc/selinux/targeted/active/modules/100/init</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">模糊查询,使用通配符 * ,匹配任意字符</span></span><br><span class="line">[root@bogon tmp]# find /etc -name *init*</span><br><span class="line">/etc/systemd/system/sysinit.target.wants</span><br><span class="line">/etc/inittab</span><br><span class="line">/etc/sysconfig/init</span><br><span class="line">/etc/sysconfig/network-scripts/init.ipv6-global</span><br><span class="line">/etc/init.d</span><br><span class="line">/etc/rc.d/init.d</span><br><span class="line">/etc/selinux/targeted/active/modules/100/init</span><br><span class="line">/etc/selinux/targeted/contexts/initrc_context</span><br><span class="line">/etc/security/namespace.init</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">模糊查询 文件名为init后面有3个字符的文件</span></span><br><span class="line">[root@bogon tmp]# find /etc -name init???</span><br><span class="line">/etc/inittab</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon tmp]# mkdir INITTAB</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-iname 不区分大小写查询</span></span><br><span class="line">[root@bogon tmp]# find / -iname init???</span><br><span class="line">/dev/initctl</span><br><span class="line">/run/systemd/initctl</span><br><span class="line">/etc/inittab</span><br><span class="line">/tmp/INITTAB</span><br><span class="line">/usr/lib/dracut/modules.d/99base/init.sh</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查询大于50MB的文件 , 单位为数据块,2数据块==1KB</span></span><br><span class="line">[root@bogon tmp]# find / -size +102400</span><br><span class="line">/boot/initramfs-0-rescue-4ab4fad3863e424fb979b7d73e8b015e.img</span><br><span class="line">/proc/kcore</span><br><span class="line">find: ‘/proc/98964/task/98964/fd/6’: 没有那个文件或目录</span><br><span class="line">find: ‘/proc/98964/task/98964/fdinfo/6’: 没有那个文件或目录</span><br><span class="line">find: ‘/proc/98964/fd/5’: 没有那个文件或目录</span><br><span class="line">find: ‘/proc/98964/fdinfo/5’: 没有那个文件或目录</span><br><span class="line">/sys/devices/pci0000:00/0000:00:0f.0/resource1_wc</span><br><span class="line">/sys/devices/pci0000:00/0000:00:0f.0/resource1</span><br><span class="line">/var/cache/yum/x86_64/7/updates/gen/primary_db.sqlite</span><br><span class="line">/usr/lib/locale/locale-archive</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">单位MB 注意大写 M</span></span><br><span class="line">[root@bogon tmp]# find / -size +50M</span><br><span class="line">/boot/initramfs-0-rescue-4ab4fad3863e424fb979b7d73e8b015e.img</span><br><span class="line">/proc/kcore</span><br><span class="line">find: ‘/proc/100141/task/100141/fd/6’: 没有那个文件或目录</span><br><span class="line">find: ‘/proc/100141/task/100141/fdinfo/6’: 没有那个文件或目录</span><br><span class="line">find: ‘/proc/100141/fd/5’: 没有那个文件或目录</span><br><span class="line">find: ‘/proc/100141/fdinfo/5’: 没有那个文件或目录</span><br><span class="line">/sys/devices/pci0000:00/0000:00:0f.0/resource1_wc</span><br><span class="line">/sys/devices/pci0000:00/0000:00:0f.0/resource1</span><br><span class="line">/var/cache/yum/x86_64/7/updates/gen/primary_db.sqlite</span><br><span class="line">/usr/lib/locale/locale-archive</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">单位KB 注意 小写 k</span></span><br><span class="line">[root@bogon tmp]# find / -size +51200k</span><br><span class="line">/boot/initramfs-0-rescue-4ab4fad3863e424fb979b7d73e8b015e.img</span><br><span class="line">/proc/kcore</span><br><span class="line">find: ‘/proc/105232/task/105232/fd/6’: 没有那个文件或目录</span><br><span class="line">find: ‘/proc/105232/task/105232/fdinfo/6’: 没有那个文件或目录</span><br><span class="line">find: ‘/proc/105232/fd/5’: 没有那个文件或目录</span><br><span class="line">find: ‘/proc/105232/fdinfo/5’: 没有那个文件或目录</span><br><span class="line">/sys/devices/pci0000:00/0000:00:0f.0/resource1_wc</span><br><span class="line">/sys/devices/pci0000:00/0000:00:0f.0/resource1</span><br><span class="line">/var/cache/yum/x86_64/7/updates/gen/primary_db.sqlite</span><br><span class="line">/usr/lib/locale/locale-archive</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">根据文件所属者查找</span></span><br><span class="line">[root@bogon tmp]# find /tmp -user tiam</span><br><span class="line">/tmp/dir1</span><br><span class="line">/tmp/only.list</span><br><span class="line">[root@bogon tmp]# ll</span><br><span class="line">总用量 0</span><br><span class="line">-rw-r--r--. 1 root root           0 12月 16 21:01 bloom</span><br><span class="line">drwxrwxrwx. 3 tiam softwareclass 41 12月 16 01:04 dir1</span><br><span class="line">drwxr-xr-x. 2 root root           6 12月 16 21:52 INITTAB</span><br><span class="line">drwx------. 2 root root           6 12月 16 21:22 lamb</span><br><span class="line">drwxr-xr-x. 2 root root           6 12月 16 21:32 lamb1</span><br><span class="line">-rw-------. 1 root root           0 12月 16 21:23 lamb.list</span><br><span class="line">drwxr-xr-x. 2 root root           6 12月 16 20:56 lamp</span><br><span class="line">-rw-rw-r--. 1 tiam tiam           0 12月 16 20:48 only.list</span><br><span class="line">drwx------. 3 root root          17 12月 16 20:17 systemd-private-36d853d491874b5c84f83329b44cddab-chronyd.service-S5zkhE</span><br><span class="line">-rwxrwxrwx. 2 root root           0 12月 15 10:26 test.list</span><br><span class="line">drwx------. 2 root root           6 12月 16 00:25 vmware-root_666-2731021219</span><br><span class="line">drwx------. 2 root root           6 12月 16 20:17 vmware-root_673-3988556249</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">根据所属组查询</span></span><br><span class="line">[root@bogon tmp]# find -group softwareclass</span><br><span class="line">./dir1</span><br><span class="line">[root@bogon tmp]# ll</span><br><span class="line">总用量 0</span><br><span class="line">-rw-r--r--. 1 root root           0 12月 16 21:01 bloom</span><br><span class="line">drwxrwxrwx. 3 tiam softwareclass 41 12月 16 01:04 dir1</span><br><span class="line">drwxr-xr-x. 2 root root           6 12月 16 21:52 INITTAB</span><br><span class="line">drwx------. 2 root root           6 12月 16 21:22 lamb</span><br><span class="line">drwxr-xr-x. 2 root root           6 12月 16 21:32 lamb1</span><br><span class="line">-rw-------. 1 root root           0 12月 16 21:23 lamb.list</span><br><span class="line">drwxr-xr-x. 2 root root           6 12月 16 20:56 lamp</span><br><span class="line">-rw-rw-r--. 1 tiam tiam           0 12月 16 20:48 only.list</span><br><span class="line">drwx------. 3 root root          17 12月 16 20:17 systemd-private-36d853d491874b5c84f83329b44cddab-chronyd.service-S5zkhE</span><br><span class="line">-rwxrwxrwx. 2 root root           0 12月 15 10:26 test.list</span><br><span class="line">drwx------. 2 root root           6 12月 16 00:25 vmware-root_666-2731021219</span><br><span class="line">drwx------. 2 root root           6 12月 16 20:17 vmware-root_673-3988556249</span><br></pre></td></tr></table></figure><ul class="lvl-0"><li class="lvl-2"><p>-amin 访问时间 access</p></li><li class="lvl-2"><p>-cmin 文件属性 change</p></li><li class="lvl-2"><p>-mmin 文件内容 modify</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看/var目录下1分钟内被修改过的文件</span></span><br><span class="line">[root@bogon tmp]# find /var -mmin -1</span><br><span class="line">/var/log/audit/audit.log</span><br><span class="line">/var/log/vmware-vmsvc-root.log</span><br></pre></td></tr></table></figure><blockquote><p>逻辑运算</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p><code>-a</code> and 表示&quot;且&quot;</p></li><li class="lvl-2"><p><code>-o</code> or 表示 “或”</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查询50MB~60MB之间的文件</span></span><br><span class="line">[root@bogon tmp]# find / -size +50M -a -size -60M</span><br><span class="line">find: ‘/proc/15539/task/15539/fd/6’: 没有那个文件或目录</span><br><span class="line">find: ‘/proc/15539/task/15539/fdinfo/6’: 没有那个文件或目录</span><br><span class="line">find: ‘/proc/15539/fd/5’: 没有那个文件或目录</span><br><span class="line">find: ‘/proc/15539/fdinfo/5’: 没有那个文件或目录</span><br></pre></td></tr></table></figure><blockquote><p>文件类型</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p><code>f</code> 文件</p></li><li class="lvl-2"><p><code>d</code> 目录</p></li><li class="lvl-2"><p><code>l</code> 软链接</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">根据文件类型查询</span></span><br><span class="line">[root@bogon tmp]# find -type f</span><br><span class="line">./test.list</span><br><span class="line">./dir1/yinlianjie</span><br><span class="line">./only.list</span><br><span class="line">./bloom</span><br><span class="line">./lamb.list</span><br><span class="line">[root@bogon tmp]# ll</span><br><span class="line">总用量 0</span><br><span class="line">-rw-r--r--. 1 root root           0 12月 16 21:01 bloom</span><br><span class="line">drwxrwxrwx. 3 tiam softwareclass 41 12月 16 01:04 dir1</span><br><span class="line">drwxr-xr-x. 2 root root           6 12月 16 21:52 INITTAB</span><br><span class="line">drwx------. 2 root root           6 12月 16 21:22 lamb</span><br><span class="line">drwxr-xr-x. 2 root root           6 12月 16 21:32 lamb1</span><br><span class="line">-rw-------. 1 root root           0 12月 16 21:23 lamb.list</span><br><span class="line">drwxr-xr-x. 2 root root           6 12月 16 20:56 lamp</span><br><span class="line">-rw-rw-r--. 1 tiam tiam           0 12月 16 20:48 only.list</span><br><span class="line">drwx------. 3 root root          17 12月 16 20:17 systemd-private-36d853d491874b5c84f83329b44cddab-chronyd.service-S5zkhE</span><br><span class="line">-rwxrwxrwx. 2 root root           0 12月 15 10:26 test.list</span><br><span class="line">drwx------. 2 root root           6 12月 16 00:25 vmware-root_666-2731021219</span><br><span class="line">drwx------. 2 root root           6 12月 16 20:17 vmware-root_673-3988556249</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon tmp]# find test.list -exec ls -l \;</span><br><span class="line">总用量 0</span><br><span class="line">-rw-r--r--. 1 root root           0 12月 16 21:01 bloom</span><br><span class="line">drwxrwxrwx. 3 tiam softwareclass 41 12月 16 01:04 dir1</span><br><span class="line">drwxr-xr-x. 2 root root           6 12月 16 21:52 INITTAB</span><br><span class="line">drwx------. 2 root root           6 12月 16 21:22 lamb</span><br><span class="line">drwxr-xr-x. 2 root root           6 12月 16 21:32 lamb1</span><br><span class="line">-rw-------. 1 root root           0 12月 16 21:23 lamb.list</span><br><span class="line">drwxr-xr-x. 2 root root           6 12月 16 20:56 lamp</span><br><span class="line">-rw-rw-r--. 1 tiam tiam           0 12月 16 20:48 only.list</span><br><span class="line">drwx------. 3 root root          17 12月 16 20:17 systemd-private-36d853d491874b5c84f83329b44cddab-chronyd.service-S5zkhE</span><br><span class="line">-rwxrwxrwx. 2 root root           0 12月 15 10:26 test.list</span><br><span class="line">drwx------. 2 root root           6 12月 16 00:25 vmware-root_666-2731021219</span><br><span class="line">drwx------. 2 root root           6 12月 16 20:17 vmware-root_673-3988556249</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-<span class="built_in">exec</span> 对查询结果 再次操作,显示详细信息</span></span><br><span class="line">[root@bogon tmp]# find test.list -exec ls -l &#123;&#125; \;</span><br><span class="line">-rwxrwxrwx. 2 root root 0 12月 15 10:26 test.list</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-ok 作用于-<span class="built_in">exec</span>相同,但是多了一个询问步骤</span></span><br><span class="line">[root@bogon tmp]# find test.list -ok ls -l &#123;&#125; \;</span><br><span class="line">&lt; ls ... test.list &gt; ? y</span><br><span class="line">-rwxrwxrwx. 2 root root 0 12月 15 10:26 test.list</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看文件节点</span></span><br><span class="line">[root@bogon tmp]# ls -i</span><br><span class="line">16777666 bloom    16784898 lamb1           277 systemd-private-36d853d491874b5c84f83329b44cddab-chronyd.service-S5zkhE</span><br><span class="line">16777668 dir1     16777689 lamb.list  16777289 test.list</span><br><span class="line">33575433 INITTAB  51041070 lamp       33575424 vmware-root_666-2731021219</span><br><span class="line">     286 lamb     16777637 only.list       285 vmware-root_673-3988556249</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">根据节点查询</span></span><br><span class="line">[root@bogon tmp]# find -inum 16777666</span><br><span class="line">./bloom</span><br></pre></td></tr></table></figure><h2 id="uname-r">uname -r<a class="header-anchor" href="#uname-r">#</a></h2><blockquote><p>查看环境</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos bin]# uname -r</span><br><span class="line">3.10.0-1160.31.1.el7.x86_64</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos bin]# cat /etc/os-release</span><br><span class="line">NAME=&quot;CentOS Linux&quot;</span><br><span class="line">VERSION=&quot;7 (Core)&quot;</span><br><span class="line">ID=&quot;centos&quot;</span><br><span class="line">ID_LIKE=&quot;rhel fedora&quot;</span><br><span class="line">VERSION_ID=&quot;7&quot;</span><br><span class="line">PRETTY_NAME=&quot;CentOS Linux 7 (Core)&quot;</span><br><span class="line">ANSI_COLOR=&quot;0;31&quot;</span><br><span class="line">CPE_NAME=&quot;cpe:/o:centos:centos:7&quot;</span><br><span class="line">HOME_URL=&quot;https://www.centos.org/&quot;</span><br><span class="line">BUG_REPORT_URL=&quot;https://bugs.centos.org/&quot;</span><br><span class="line"></span><br><span class="line">CENTOS_MANTISBT_PROJECT=&quot;CentOS-7&quot;</span><br><span class="line">CENTOS_MANTISBT_PROJECT_VERSION=&quot;7&quot;</span><br><span class="line">REDHAT_SUPPORT_PRODUCT=&quot;centos&quot;</span><br><span class="line">REDHAT_SUPPORT_PRODUCT_VERSION=&quot;7&quot;</span><br></pre></td></tr></table></figure><h2 id="locate">locate*<a class="header-anchor" href="#locate">#</a></h2><blockquote><p>以资料库的方式去查询文件</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>优点: 更快,遍历资料库</p></li><li class="lvl-2"><p>缺点: 不一定准确(因为资料库中还未更新,定时更新)</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">搜索locate的资料库 /var/lib/mlocate/mlocate.db</span></span><br><span class="line">[root@VM-0-9-centos ~]# locate mlocate.db</span><br><span class="line">/usr/share/man/man5/mlocate.db.5.gz</span><br><span class="line">/var/lib/mlocate/mlocate.db</span><br><span class="line">/var/lib/mlocate/mlocate.db.cLTXUR</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tmp]# touch beyound</span><br><span class="line">[root@VM-0-9-centos tmp]# ll beyound</span><br><span class="line">-rw-r--r-- 1 root root 0 12月 21 20:03 beyound</span><br><span class="line">[root@VM-0-9-centos tmp]# locate beyound</span><br><span class="line">[root@VM-0-9-centos tmp]# find beyound</span><br><span class="line">beyound</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos ~]# locate likeyou</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">参数-i 结果不区分大小写</span></span><br><span class="line">[root@VM-0-9-centos ~]# locate -i likeyou</span><br><span class="line">/root/likeYOU</span><br><span class="line">[root@VM-0-9-centos ~]# rm -f like*</span><br><span class="line">[root@VM-0-9-centos ~]# ll</span><br><span class="line">总用量 172</span><br><span class="line">-rw-r--r-- 1 root root     0 12月 19 22:45 --add-repo</span><br><span class="line">-rw-r--r-- 1 root root 39800 7月   4 2014 python-iniparse-0.4-9.el7.noarch.rpm</span><br><span class="line">-rw-r--r-- 1 root root 67120 10月 15 2020 yum-cron-3.4.3-168.el7.centos.noarch.rpm</span><br><span class="line">-rw-r--r-- 1 root root 28348 7月   4 2014 yum-metadata-parser-1.1.4-10.el7.x86_64.rpm</span><br><span class="line">-rw-r--r-- 1 root root 35216 5月  14 2020 yum-plugin-fastestmirror-1.1.31-54.el7_8.noarch.rpm</span><br></pre></td></tr></table></figure><h2 id="updatedb">updatedb<a class="header-anchor" href="#updatedb">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更新locate查询的资料库</span></span><br><span class="line">[root@VM-0-9-centos tmp]# updatedb</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更新之后,发现还是未查到,因为资料库不会将/tmp目录下的文件收录</span></span><br><span class="line">[root@VM-0-9-centos tmp]# locate beyound</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">去其他目录测试</span></span><br><span class="line">[root@VM-0-9-centos tmp]# cd ~</span><br><span class="line">[root@VM-0-9-centos ~]# touch likethisdo</span><br><span class="line">[root@VM-0-9-centos ~]# ll likethisdo</span><br><span class="line">-rw-r--r-- 1 root root     0 12月 21 20:09 likethisdo</span><br><span class="line">[root@VM-0-9-centos ~]# locate likethisdo</span><br><span class="line">[root@VM-0-9-centos ~]# updatedb</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">成功查到</span></span><br><span class="line">[root@VM-0-9-centos ~]# locate likethisdo</span><br><span class="line">/root/likethisdo</span><br></pre></td></tr></table></figure><h2 id="which">which<a class="header-anchor" href="#which">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查询命令所在目录</span></span><br><span class="line">[root@VM-0-9-centos ~]# which ll</span><br><span class="line">alias ll=&#x27;ls -l --color=auto&#x27;</span><br><span class="line">        /usr/bin/ls</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">只能查询命令</span></span><br><span class="line">[root@VM-0-9-centos ~]# which help</span><br><span class="line">/usr/bin/which: no help in (/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin)</span><br></pre></td></tr></table></figure><h2 id="whereis">whereis<a class="header-anchor" href="#whereis">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查询命令所在目录以及帮助文档所在路径</span></span><br><span class="line">[root@VM-0-9-centos ~]# whereis rm</span><br><span class="line">rm: /usr/bin/rm /usr/share/man/man1/rm.1.gz</span><br><span class="line">[root@VM-0-9-centos ~]# whereis beyound</span><br><span class="line">beyound:[root@VM-0-9-centos ~]# </span><br></pre></td></tr></table></figure><h2 id="grep">grep*<a class="header-anchor" href="#grep">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p><code>-v</code> 除去子串</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查询文件内容中web关键字</span></span><br><span class="line">[root@VM-0-9-centos ~]# grep web /www/wwwlogs/web.czh.fit.log</span><br><span class="line">117.154.105.56 - - [29/Oct/2021:22:22:09 +0800] &quot;GET /js/jquery-1.10.1.js HTTP/1.1&quot; 200 94909 &quot;http://web.czh.fit/&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0&quot;</span><br><span class="line">117.154.105.56 - - [29/Oct/2021:22:22:09 +0800] &quot;GET /favicon.ico HTTP/1.1&quot; 404 727 &quot;http://web.czh.fit/&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0&quot;</span><br><span class="line">117.154.105.56 - - [29/Oct/2021:22:22:12 +0800] &quot;GET /img/pexels-lukas-669610.jpg HTTP/1.1&quot; 200 2716839 &quot;http://web.czh.fit/&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0&quot;</span><br><span class="line">.....</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">7.36 XiaoMi/MiuiBrowser/15.6.12&quot;</span><br><span class="line">[root@VM-0-9-centos ~]# more /etc/inittab</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">inittab is no longer used when using systemd.</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># ADDING CONFIGURATION HERE WILL HAVE NO EFFECT ON YOUR SYSTEM.</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># Ctrl-Alt-Delete is handled by /usr/lib/systemd/system/ctrl-alt-del.target</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># systemd uses &#x27;targets&#x27; instead of runlevels. By default, there are two main targets:</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># multi-user.target: analogous to runlevel 3</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">graphical.target: analogous to runlevel 5</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># To view current default target, run:</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl get-default</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># To set a default target, run:</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl set-default TARGET.target</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># 去除以&quot;#&quot;号开头的所在行</span></span></span><br><span class="line">[root@VM-0-9-centos ~]# grep -v ^# /etc/inittab</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">去除含有<span class="string">&quot;systemctl&quot;</span>的所在行</span></span><br><span class="line">[root@VM-0-9-centos ~]# grep -v systemctl /etc/inittab</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">inittab is no longer used when using systemd.</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># ADDING CONFIGURATION HERE WILL HAVE NO EFFECT ON YOUR SYSTEM.</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># Ctrl-Alt-Delete is handled by /usr/lib/systemd/system/ctrl-alt-del.target</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># systemd uses &#x27;targets&#x27; instead of runlevels. By default, there are two main targets:</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># multi-user.target: analogous to runlevel 3</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">graphical.target: analogous to runlevel 5</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># To view current default target, run:</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># To set a default target, run:</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash">[root@VM-0-9-centos ~]<span class="comment">#</span></span> </span><br></pre></td></tr></table></figure><h2 id="man">man*<a class="header-anchor" href="#man">#</a></h2><blockquote><p>manual</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看命令帮助信息</span></span><br><span class="line">[root@VM-0-9-centos ~]# man ls</span><br><span class="line">LS(1)                                    User Commands                                   LS(1)</span><br><span class="line"></span><br><span class="line">NAME</span><br><span class="line">       ls - list directory contents</span><br><span class="line"></span><br><span class="line">SYNOPSIS</span><br><span class="line">       ls [OPTION]... [FILE]...</span><br><span class="line"></span><br><span class="line">DESCRIPTION</span><br><span class="line">       List  information  about  the  FILEs  (the current directory by default).  Sort entries</span><br><span class="line">       alphabetically if none of -cftuvSUX nor --sort is specified.</span><br><span class="line"></span><br><span class="line">       Mandatory arguments to long options are mandatory for short options too.</span><br><span class="line"></span><br><span class="line">       -a, --all</span><br><span class="line">              do not ignore entries starting with .</span><br><span class="line"></span><br><span class="line">       -A, --almost-all</span><br><span class="line">...skipping...</span><br><span class="line"></span><br><span class="line">                   SUMMARY OF LESS COMMANDS</span><br><span class="line"></span><br><span class="line">      Commands marked with * may be preceded by a number, N.</span><br><span class="line">      Notes in parentheses indicate the behavior if N is given.</span><br><span class="line">      A key preceded by a caret indicates the Ctrl key; thus ^K is ctrl-K.</span><br><span class="line"></span><br><span class="line">  h  H                 Display this help.</span><br><span class="line">  q  :q  Q  :Q  ZZ     Exit.</span><br><span class="line"> ---------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">                           MOVING</span><br><span class="line"></span><br><span class="line">  e  ^E  j  ^N  CR  *  Forward  one line   (or N lines).</span><br><span class="line">  y  ^Y  k  ^K  ^P  *  Backward one line   (or N lines).</span><br><span class="line">  f  ^F  ^V  SPACE  *  Forward  one window (or N lines).</span><br><span class="line">  b  ^B  ESC-v      *  Backward one window (or N lines).</span><br><span class="line">  z                 *  Forward  one window (and set window to N).</span><br><span class="line">  w                 *  Backward one window (and set window to N).</span><br><span class="line">  ESC-SPACE         *  Forward  one window, but don&#x27;t stop at end-of-file.</span><br><span class="line">  d  ^D             *  Forward  one half-window (and set half-window to N).</span><br><span class="line">  u  ^U             *  Backward one half-window (and set half-window to N).</span><br><span class="line">  ESC-)  RightArrow *  Left  one half screen width (or N positions).</span><br><span class="line">  ESC-(  LeftArrow  *  Right one half screen width (or N positions).</span><br><span class="line">HELP -- Press RETURN for more, or q when done</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看配置文件帮助</span></span><br><span class="line">[root@VM-0-9-centos ~]# man services</span><br><span class="line">没有 services 的手册页条目</span><br></pre></td></tr></table></figure><blockquote><p>一般情况下,帮助文件名中</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p><code>1</code> 表示命令的帮助</p></li><li class="lvl-2"><p><code>5</code> 表示配置文件的帮助</p></li></ul><h2 id="whatis-apropos">whatis/apropos<a class="header-anchor" href="#whatis-apropos">#</a></h2><blockquote><p>简要的查看命令或配置文件的作用</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tat_agent]# whatis ls</span><br><span class="line">ls (1)               - list directory contents</span><br><span class="line">[root@VM-0-9-centos tat_agent]# whatis inittab</span><br><span class="line">inittab：没有 appropriate。</span><br><span class="line">[root@VM-0-9-centos tat_agent]# whatis rm</span><br><span class="line">rm (1)               - remove files or directories</span><br><span class="line">[root@VM-0-9-centos tat_agent]# apropos</span><br><span class="line">apropos 什么？</span><br><span class="line">[root@VM-0-9-centos tat_agent]# apropos inittab</span><br><span class="line">inittab：没有 appropriate。</span><br></pre></td></tr></table></figure><h2 id="–help">–help<a class="header-anchor" href="#–help">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看 <span class="built_in">mkdir</span> 命令的帮助</span></span><br><span class="line">[root@VM-0-9-centos tat_agent]# mkdir --help</span><br><span class="line">用法：mkdir [选项]... 目录...</span><br><span class="line">Create the DIRECTORY(ies), if they do not already exist.</span><br><span class="line"></span><br><span class="line">Mandatory arguments to long options are mandatory for short options too.</span><br><span class="line">  -m, --mode=MODE   set file mode (as in chmod), not a=rwx - umask</span><br><span class="line">  -p, --parents     no error if existing, make parent directories as needed</span><br><span class="line">  -v, --verbose     print a message for each created directory</span><br><span class="line">  -Z                   set SELinux security context of each created directory</span><br><span class="line">                         to the default type</span><br><span class="line">      --context[=CTX]  like -Z, or if CTX is specified then set the SELinux</span><br><span class="line">                         or SMACK security context to CTX</span><br><span class="line">      --help            显示此帮助信息并退出</span><br><span class="line">      --version         显示版本信息并退出</span><br><span class="line"></span><br><span class="line">GNU coreutils online help: &lt;http://www.gnu.org/software/coreutils/&gt;</span><br><span class="line">请向&lt;http://translationproject.org/team/zh_CN.html&gt; 报告mkdir 的翻译错误</span><br><span class="line">要获取完整文档，请运行：info coreutils &#x27;mkdir invocation&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos tat_agent]# help umask</span><br><span class="line">umask: umask [-p] [-S] [模式]</span><br><span class="line">    显示或设定文件模式掩码。</span><br><span class="line">    </span><br><span class="line">    设定用户文件创建掩码为 MODE 模式。如果省略了 MODE，则</span><br><span class="line">    打印当前掩码的值。</span><br><span class="line">    </span><br><span class="line">    如果MODE 模式以数字开头，则被当作八进制数解析；否则是一个</span><br><span class="line">    chmod(1) 可接收的符号模式串。</span><br><span class="line">    </span><br><span class="line">    选项：</span><br><span class="line">      -p        如果省略 MDOE 模式，以可重用为输入的格式输入</span><br><span class="line">      -S        以符号形式输出，否则以八进制数格式输出</span><br><span class="line">    </span><br><span class="line">    退出状态：</span><br><span class="line">    返回成功，除非使用了无效的 MODE 模式或者选项。</span><br></pre></td></tr></table></figure><h2 id="info">info<a class="header-anchor" href="#info">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">与man作用类似</span></span><br><span class="line">[root@VM-0-9-centos tat_agent]# info touch</span><br><span class="line">File: coreutils.info,  Node: touch invocation,  Prev: chmod invocation,  Up: Changing file attri\</span><br><span class="line">butes</span><br><span class="line"></span><br><span class="line">13.4 &#x27;touch&#x27;: Change file timestamps</span><br><span class="line">====================================</span><br><span class="line"></span><br><span class="line">&#x27;touch&#x27; changes the access and/or modification times of the specified</span><br><span class="line">files.  Synopsis:</span><br><span class="line"></span><br><span class="line">     touch [OPTION]... FILE...</span><br><span class="line"></span><br><span class="line">   Any FILE argument that does not exist is created empty, unless option</span><br><span class="line">&#x27;--no-create&#x27; (&#x27;-c&#x27;) or &#x27;--no-dereference&#x27; (&#x27;-h&#x27;) was in effect.</span><br><span class="line"></span><br><span class="line">   A FILE argument string of &#x27;-&#x27; is handled specially and causes &#x27;touch&#x27;</span><br><span class="line">to change the times of the file associated with standard output.</span><br><span class="line"></span><br><span class="line">--zz-Info: (coreutils.info.gz)touch invocation, 153 lines --Top----------------------------------</span><br><span class="line">Welcome to Info version 5.1. Type h for help, m for menu item.</span><br></pre></td></tr></table></figure><h2 id="who">who<a class="header-anchor" href="#who">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查询已登录的用户</span></span><br><span class="line">[root@VM-0-9-centos tat_agent]# who</span><br><span class="line">root     pts/0        2021-12-21 19:55 (123.147.250.90)</span><br><span class="line">root     pts/1        2021-12-21 19:55 (123.147.250.90)</span><br></pre></td></tr></table></figure><h2 id="w">w<a class="header-anchor" href="#w">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查询已登录的用户,更详细信息</span></span><br><span class="line">[root@VM-0-9-centos tat_agent]# w</span><br><span class="line"> 21:39:16 up 1 day, 21:26,  2 users,  load average: 1.06, 0.49, 0.37</span><br><span class="line">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">root     pts/0    123.147.250.90   19:55    4.00s  0.08s  0.00s w</span><br><span class="line">root     pts/1    123.147.250.90   19:55    1:43m  5.05s  5.03s top</span><br></pre></td></tr></table></figure><h2 id="uptime">uptime<a class="header-anchor" href="#uptime">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看虚拟机已运行时间</span></span><br><span class="line">[root@VM-0-9-centos tat_agent]# uptime</span><br><span class="line"> 21:40:23 up 1 day, 21:27,  2 users,  load average: 0.83, 0.53, 0.39</span><br></pre></td></tr></table></figure><h1>压缩命令</h1><h1>网络命令</h1><h2 id="write">write<a class="header-anchor" href="#write">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p>只能向在线用户发送信息</p></li><li class="lvl-2"><p>Ctrl+D 发送</p></li><li class="lvl-2"><p>Ctrl+Back 删除</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos ~]# w</span><br><span class="line"> 20:01:00 up 2 days, 19:48,  4 users,  load average: 0.68, 0.37, 0.27</span><br><span class="line">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">root     pts/0    123.147.248.159  19:40    4.00s  0.05s  0.00s w</span><br><span class="line">root     pts/1    123.147.248.159  19:40   20:44   1.08s  1.06s top</span><br><span class="line">tiam     pts/3    123.147.248.159  19:58   20.00s  0.02s  0.02s -bash</span><br><span class="line">tiam     pts/4    123.147.248.159  19:58    2:23   0.15s  0.13s top</span><br><span class="line">[root@VM-0-9-centos ~]# write tiam</span><br><span class="line">write: tiam is logged in more than once; writing to pts/3</span><br><span class="line">Hello I very miss you everyday</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[tiam@VM-0-9-centos ~]$ </span><br><span class="line">Message from root@VM-0-9-centos on pts/0 at 20:01 ...</span><br><span class="line">Hello I very miss you everyday</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">[tiam@VM-0-9-centos ~]$ </span><br></pre></td></tr></table></figure><h2 id="wall">wall<a class="header-anchor" href="#wall">#</a></h2><blockquote><p>write all  : 广播,向所有人发送信息,包括自己</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos ~]# wall Hello world</span><br><span class="line">[root@VM-0-9-centos ~]# </span><br><span class="line">Broadcast message from root@VM-0-9-centos (pts/0) (Wed Dec 22 20:07:25 2021):</span><br><span class="line"></span><br><span class="line">Hello world</span><br><span class="line"></span><br><span class="line">[root@VM-0-9-centos ~]# </span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[tiam@VM-0-9-centos ~]$ </span><br><span class="line">Broadcast message from root@VM-0-9-centos (pts/0) (Wed Dec 22 20:07:25 2021):</span><br><span class="line"></span><br><span class="line">Hello world</span><br></pre></td></tr></table></figure><h2 id="ping">ping<a class="header-anchor" href="#ping">#</a></h2><blockquote><p>与win区别</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>window默认4次</p></li><li class="lvl-2"><p>Lniux默认一直循环,Ctrl+C停止.</p></li><li class="lvl-2"><p>-c 参数指定ping次数</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos ~]# ping yujing.fit</span><br><span class="line">PING yujing.fit (47.101.172.219) 56(84) bytes of data.</span><br><span class="line">64 bytes from 47.101.172.219 (47.101.172.219): icmp_seq=1 ttl=47 time=40.7 ms</span><br><span class="line">64 bytes from 47.101.172.219 (47.101.172.219): icmp_seq=2 ttl=47 time=40.5 ms</span><br><span class="line">64 bytes from 47.101.172.219 (47.101.172.219): icmp_seq=3 ttl=47 time=40.5 ms</span><br><span class="line">64 bytes from 47.101.172.219 (47.101.172.219): icmp_seq=4 ttl=47 time=40.5 ms</span><br><span class="line">^C</span><br><span class="line">--- yujing.fit ping statistics ---</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"> 0% packet loss ,丢包率,越低代表网络越好.</span></span><br><span class="line">4 packets transmitted, 4 received, 0% packet loss, time 3004ms</span><br><span class="line">rtt min/avg/max/mdev = 40.575/40.633/40.795/0.170 ms</span><br></pre></td></tr></table></figure><h2 id="ifconfig">ifconfig<a class="header-anchor" href="#ifconfig">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos ~]# ifconfig</span><br><span class="line">eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">inet 10.0.0.9  本机IP</span></span><br><span class="line">        inet 10.0.0.9  netmask 255.255.252.0  broadcast 10.0.3.255</span><br><span class="line">        inet6 fe80::5054:ff:fe45:78e1  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 52:54:00:45:78:e1  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 1329566  bytes 134952293 (128.7 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 1397171  bytes 275412158 (262.6 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class="line">        RX packets 2071  bytes 3220475 (3.0 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 2071  bytes 3220475 (3.0 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">[root@VM-0-9-centos ~]# </span><br></pre></td></tr></table></figure><h2 id="mail">mail<a class="header-anchor" href="#mail">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">给root发送邮件,不需要在线,不需要联网</span></span><br><span class="line">[root@VM-0-9-centos ~]# mail root</span><br><span class="line">Subject: test</span><br><span class="line">Hello Nice to meet you</span><br><span class="line">EOT</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看本机收到的邮件</span></span><br><span class="line">[root@VM-0-9-centos ~]# mail</span><br><span class="line">Heirloom Mail version 12.5 7/5/10.  Type ? for help.</span><br><span class="line">&quot;/var/spool/mail/root&quot;: 1 message 1 new</span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">N  1 root                  Wed Dec 22 20:15  18/645   <span class="string">&quot;test&quot;</span></span></span><br><span class="line">&amp;       ^H^H^[^CInterrupt</span><br><span class="line">&amp; Held 1 message in /var/spool/mail/root</span><br></pre></td></tr></table></figure><h2 id="last">last*<a class="header-anchor" href="#last">#</a></h2><blockquote><p>查询登录/重启相关信息</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos ~]# last</span><br><span class="line">tiam     pts/4        123.147.248.159  Wed Dec 22 19:58   still logged in   </span><br><span class="line">tiam     pts/3        123.147.248.159  Wed Dec 22 19:58   still logged in   </span><br><span class="line">lighthou pts/2        119.28.22.215    Wed Dec 22 19:55 - 19:59  (00:03)    </span><br><span class="line">lighthou pts/2        119.29.96.147    Wed Dec 22 19:55 - 19:55  (00:00)    </span><br><span class="line">lighthou pts/2        119.28.22.215    Wed Dec 22 19:52 - 19:55  (00:02)    </span><br><span class="line">root     pts/1        123.147.248.159  Wed Dec 22 19:40   still logged in   </span><br><span class="line">root     pts/0        123.147.248.159  Wed Dec 22 19:40   still logged in   </span><br><span class="line">root     pts/1        123.147.250.90   Tue Dec 21 19:55 - 21:51  (01:56)    </span><br><span class="line">root     pts/0        123.147.250.90   Tue Dec 21 19:55 - 21:51  (01:56)    </span><br><span class="line">root     pts/1        171.83.3.200     Mon Dec 20 15:55 - 16:24  (00:29)    </span><br><span class="line">root     pts/0        171.83.3.200     Mon Dec 20 15:55 - 16:24  (00:29)    </span><br><span class="line">root     pts/1        171.113.50.247   Mon Dec 20 13:42 - 14:21  (00:39)    </span><br><span class="line">root     pts/0        171.113.50.247   Mon Dec 20 13:42 - 14:21  (00:39)    </span><br><span class="line">reboot   system boot  3.10.0-1160.31.1 Mon Dec 20 00:12 - 20:18 (2+20:05)   </span><br><span class="line">root     pts/1        123.147.246.223  Mon Dec 20 00:11 - down   (00:00)    </span><br><span class="line">root     pts/0        123.147.246.223  Mon Dec 20 00:11 - down   (00:00)    </span><br><span class="line">root     pts/1        123.147.246.223  Mon Dec 20 00:10 - 00:11  (00:01)    </span><br><span class="line">root     pts/0        123.147.246.223  Mon Dec 20 00:10 - 00:11  (00:01)    </span><br><span class="line">root     pts/1        123.147.246.223  Sun Dec 19 22:43 - 00:10  (01:26)    </span><br><span class="line">root     pts/0        123.147.246.223  Sun Dec 19 22:43 - 00:10  (01:27)    </span><br><span class="line">root     pts/1        123.147.246.223  Sun Dec 19 17:26 - 18:55  (01:29)    </span><br><span class="line">root     pts/0        123.147.246.223  Sun Dec 19 17:26 - 18:55  (01:29)    </span><br><span class="line">root     pts/1        27.18.87.180     Mon Dec 13 10:38 - 10:38  (00:00)    </span><br><span class="line">root     pts/0        27.18.87.180     Mon Dec 13 10:38 - 10:38  (00:00)    </span><br><span class="line">root     pts/1        171.113.48.33    Wed Dec  8 16:56 - 18:07  (01:11)    </span><br><span class="line">root     pts/0        171.113.48.33    Wed Dec  8 16:56 - 18:07  (01:11)    </span><br><span class="line">root     pts/4        171.113.48.33    Wed Dec  8 14:30 - 16:17  (01:47)    </span><br><span class="line">root     pts/3        171.113.48.33    Wed Dec  8 14:29 - 16:17  (01:47)    </span><br><span class="line">root     pts/4        171.113.50.55    Wed Dec  8 10:16 - 12:21  (02:04)    </span><br><span class="line">root     pts/3        171.113.50.55    Wed Dec  8 10:16 - 12:21  (02:04)    </span><br><span class="line">root     pts/1        171.113.50.55    Wed Dec  8 10:13 - 14:44  (04:31)    </span><br><span class="line">root     pts/0        171.113.50.55    Wed Dec  8 10:13 - 14:44  (04:31)    </span><br><span class="line">root     pts/4        171.113.49.225   Tue Dec  7 15:38 - 17:06  (01:27)    </span><br><span class="line">root     pts/3        171.113.49.225   Tue Dec  7 15:38 - 17:06  (01:27)    </span><br><span class="line">root     pts/1        171.113.49.225   Tue Dec  7 15:02 - 17:06  (02:04)    </span><br><span class="line">root     pts/0        171.113.49.225   Tue Dec  7 15:02 - 17:06  (02:04)    </span><br><span class="line">root     pts/4        171.113.47.171   Tue Dec  7 14:13 - 15:17  (01:03)    </span><br><span class="line">root     pts/3        171.113.47.171   Tue Dec  7 14:13 - 15:17  (01:03)    </span><br><span class="line">root     pts/1        171.113.47.171   Tue Dec  7 12:53 - 14:16  (01:23)    </span><br><span class="line">root     pts/0        171.113.47.171   Tue Dec  7 12:53 - 14:16  (01:23)    </span><br><span class="line">root     pts/3        127.0.0.1        Tue Dec  7 10:58 - 10:59  (00:00)    </span><br><span class="line">root     pts/3        127.0.0.1        Tue Dec  7 10:58 - 10:58  (00:00)    </span><br><span class="line">root     pts/3        127.0.0.1        Tue Dec  7 10:56 - 10:58  (00:01)    </span><br><span class="line">root     pts/2        127.0.0.1        Tue Dec  7 10:56 - down  (12+13:15)  </span><br><span class="line">root     pts/1        171.113.47.219   Tue Dec  7 10:52 - 12:21  (01:28)    </span><br><span class="line">root     pts/0        171.113.47.219   Tue Dec  7 10:52 - 12:21  (01:28)    </span><br><span class="line">reboot   system boot  3.10.0-1160.31.1 Tue Dec  7 10:52 - 00:12 (12+13:19)  </span><br><span class="line">lighthou pts/0        119.29.96.147    Tue Dec  7 10:41 - 10:41  (00:00)    </span><br><span class="line">lighthou pts/0        111.230.154.177  Tue Dec  7 10:41 - 10:41  (00:00)    </span><br><span class="line">lighthou pts/0        119.28.22.215    Tue Dec  7 10:31 - 10:41  (00:09)    </span><br><span class="line">lighthou pts/0        119.28.22.215    Tue Dec  7 10:22 - 10:31  (00:09)    </span><br><span class="line">lighthou pts/0        119.28.22.215    Tue Dec  7 10:18 - 10:18  (00:00)    </span><br><span class="line">lighthou pts/0        119.29.96.147    Fri Nov 12 09:31 - 09:34  (00:02)    </span><br><span class="line">lighthou pts/0        119.29.96.147    Sat Oct 23 02:48 - 03:00  (00:11)    </span><br><span class="line">reboot   system boot  3.10.0-1160.31.1 Sat Oct 23 02:40 - 10:43 (45+08:02)  </span><br><span class="line"></span><br><span class="line">wtmp begins Sat Oct 23 02:40:48 2021</span><br><span class="line">您在 /var/spool/mail/root 中有邮件</span><br><span class="line">[root@VM-0-9-centos ~]# </span><br></pre></td></tr></table></figure><h2 id="lastlog">lastlog<a class="header-anchor" href="#lastlog">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos ~]# lastlog</span><br><span class="line">用户名           端口     来自             最后登陆时间</span><br><span class="line">root             pts/0                     三 12月 22 19:54:26 +0800 2021</span><br><span class="line">bin                                        **从未登录过**</span><br><span class="line">daemon                                     **从未登录过**</span><br><span class="line">adm                                        **从未登录过**</span><br><span class="line">lp                                         **从未登录过**</span><br><span class="line">sync                                       **从未登录过**</span><br><span class="line">shutdown                                   **从未登录过**</span><br><span class="line">halt                                       **从未登录过**</span><br><span class="line">mail                                       **从未登录过**</span><br><span class="line">operator                                   **从未登录过**</span><br><span class="line">games                                      **从未登录过**</span><br><span class="line">ftp                                        **从未登录过**</span><br><span class="line">nobody                                     **从未登录过**</span><br><span class="line">systemd-network                            **从未登录过**</span><br><span class="line">dbus                                       **从未登录过**</span><br><span class="line">polkitd                                    **从未登录过**</span><br><span class="line">libstoragemgmt                             **从未登录过**</span><br><span class="line">rpc                                        **从未登录过**</span><br><span class="line">ntp                                        **从未登录过**</span><br><span class="line">abrt                                       **从未登录过**</span><br><span class="line">sshd                                       **从未登录过**</span><br><span class="line">postfix                                    **从未登录过**</span><br><span class="line">chrony                                     **从未登录过**</span><br><span class="line">tcpdump                                    **从未登录过**</span><br><span class="line">syslog                                     **从未登录过**</span><br><span class="line">lighthouse       pts/2    119.28.22.215    三 12月 22 19:55:56 +0800 2021</span><br><span class="line">www                                        **从未登录过**</span><br><span class="line">mysql                                      **从未登录过**</span><br><span class="line">springboot                                 **从未登录过**</span><br><span class="line">redis                                      **从未登录过**</span><br><span class="line">tiam             pts/4    123.147.248.159  三 12月 22 19:58:37 +0800 2021</span><br></pre></td></tr></table></figure><h2 id="traceroute">traceroute*<a class="header-anchor" href="#traceroute">#</a></h2><blockquote><p>查看网络访问节点流程</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos ~]# traceroute yujing.fit</span><br><span class="line">traceroute to yujing.fit (47.101.172.219), 30 hops max, 60 byte packets</span><br><span class="line"> 1  11.52.80.19 (11.52.80.19)  0.973 ms 11.52.80.5 (11.52.80.5)  1.107 ms 11.52.80.14 (11.52.80.14)  1.243 ms</span><br><span class="line"> 2  * * *</span><br><span class="line"> 3  * * *</span><br><span class="line"> 4  * * *</span><br><span class="line"> 5  144.48.89.34 (144.48.89.34)  34.858 ms * *</span><br><span class="line"> 6  * * *</span><br><span class="line"> 7  * * 140.205.50.234 (140.205.50.234)  41.176 ms</span><br><span class="line"> 8  * * *</span><br><span class="line"> 9  * * *</span><br><span class="line">10  140.205.50.254 (140.205.50.254)  39.694 ms * *</span><br><span class="line">11  * * *</span><br><span class="line">12  * * *</span><br><span class="line">13  * * *</span><br><span class="line">14  * * *</span><br><span class="line">15  * * *</span><br><span class="line">16  * * *</span><br><span class="line">17  * * *</span><br><span class="line">18  * * *</span><br><span class="line">19  * * *</span><br><span class="line">20  * * *</span><br><span class="line">21  * * *</span><br><span class="line">22  * * *</span><br><span class="line">23  * * *</span><br><span class="line">24  * * *</span><br><span class="line">25  * * *</span><br><span class="line">26  * * *</span><br><span class="line">27  * * *</span><br><span class="line">28  * * *</span><br><span class="line">29  * * *</span><br><span class="line">30  * * *</span><br><span class="line">[root@VM-0-9-centos ~]# </span><br></pre></td></tr></table></figure><h2 id="netstate">netstate<a class="header-anchor" href="#netstate">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p>TCP 更安全</p></li><li class="lvl-2"><p>UDP 更快</p></li></ul><blockquote><p>参数</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p><code>-t</code> TCP协议</p></li><li class="lvl-2"><p><code>-u</code> UDP协议</p></li><li class="lvl-2"><p><code>-l</code> 监听</p></li><li class="lvl-2"><p><code>-r</code> 路由</p></li><li class="lvl-2"><p><code>-n</code> 显示IP地址和端口号</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos ~]# netstat</span><br><span class="line">Active Internet connections (w/o servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State      </span><br><span class="line">tcp        0      0 VM-0-9-centos:60248     169.254.0.138:d-s-n     ESTABLISHED</span><br><span class="line">tcp        0      0 VM-0-9-centos:nimhub    169.254.0.55:webcache   TIME_WAIT  </span><br><span class="line">tcp        0      0 VM-0-9-centos:ddi-tcp-1 141.101.196.233:15172   ESTABLISHED</span><br><span class="line">tcp        0      0 VM-0-9-centos:ddi-tcp-1 141.101.196.233:21854   ESTABLISHED</span><br><span class="line">tcp        0      0 VM-0-9-centos:ddi-tcp-1 188.166.40.32:46742     ESTABLISHED</span><br><span class="line">tcp        0      0 VM-0-9-centos:ddi-tcp-1 internettl.org:43106    ESTABLISHED</span><br><span class="line">tcp        0      0 VM-0-9-centos:51398     169.254.0.55:lsi-bobcat ESTABLISHED</span><br><span class="line">tcp        0      0 VM-0-9-centos:ssh       123.147.248.159:13437   ESTABLISHED</span><br><span class="line">tcp        0      0 VM-0-9-centos:ssh       123.147.248.159:13453   ESTABLISHED</span><br><span class="line">tcp        0      0 VM-0-9-centos:ssh       123.147.248.159:13454   ESTABLISHED</span><br><span class="line">tcp        0      0 VM-0-9-centos:ddi-tcp-1 188.166.40.32:47992     ESTABLISHED</span><br><span class="line">tcp        0    156 VM-0-9-centos:ssh       123.147.248.159:13436   ESTABLISHED</span><br><span class="line">Active UNIX domain sockets (w/o servers)</span><br><span class="line">Proto RefCnt Flags       Type       State         I-Node   Path</span><br><span class="line">unix  3      [ ]         DGRAM                    7470     /run/systemd/notify</span><br><span class="line">unix  2      [ ]         DGRAM                    7472     /run/systemd/cgroups-agent</span><br><span class="line">unix  5      [ ]         DGRAM                    7493     /run/systemd/journal/socket</span><br><span class="line">unix  21     [ ]         DGRAM                    7495     /dev/log</span><br><span class="line">unix  2      [ ]         DGRAM                    10897    /run/systemd/shutdownd</span><br><span class="line">unix  2      [ ]         DGRAM                    23513    /usr/local/qcloud/YunJing/conf/ydrpc_3</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     13521    </span><br><span class="line">unix  3      [ ]         DGRAM                    12018    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19869    </span><br><span class="line">unix  2      [ ]         DGRAM                    5231865  </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19839    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     17310    /run/systemd/journal/stdout</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     12002    /run/systemd/journal/stdout</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19814    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     12798    </span><br><span class="line">unix  2      [ ]         DGRAM                    5307327  </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19873    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19836    </span><br><span class="line">unix  2      [ ]         STREAM     CONNECTED     22880    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     13573    /run/systemd/journal/stdout</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     12799    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     5306934  </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19861    </span><br><span class="line">unix  2      [ ]         DGRAM                    19748    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19847    </span><br><span class="line">unix  2      [ ]         DGRAM                    17654    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     18549    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     18546    </span><br><span class="line">unix  2      [ ]         STREAM     CONNECTED     22703    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     13122    /run/dbus/system_bus_socket</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     5307330  </span><br><span class="line">unix  2      [ ]         DGRAM                    5110433  </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19857    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     11995    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19833    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     18548    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19852    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19823    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19870    </span><br><span class="line">unix  2      [ ]         DGRAM                    13838    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19838    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19827    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     15237    /run/systemd/journal/stdout</span><br><span class="line">unix  2      [ ]         DGRAM                    13097    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19835    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19801    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     13962    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19815    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     13434    /run/systemd/journal/stdout</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     18642    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     13120    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19842    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19818    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     17177    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19864    </span><br><span class="line">unix  2      [ ]         DGRAM                    4663809  </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     13963    /run/dbus/system_bus_socket</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19811    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     13522    /run/systemd/journal/stdout</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19776    /run/dbus/system_bus_socket</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     13041    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19829    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     18643    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19860    </span><br><span class="line">unix  2      [ ]         DGRAM                    11501    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19807    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     13572    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     11747    </span><br><span class="line">unix  2      [ ]         DGRAM                    23737    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19832    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     15345    /run/systemd/journal/stdout</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19851    </span><br><span class="line">unix  2      [ ]         DGRAM                    5160077  </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19867    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     5306935  </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19841    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19826    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19804    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     15236    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     17178    /run/systemd/journal/stdout</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19810    </span><br><span class="line">unix  2      [ ]         DGRAM                    13674    </span><br><span class="line">unix  2      [ ]         DGRAM                    5273014  </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19863    </span><br><span class="line">unix  2      [ ]         DGRAM                    14837    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     13121    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19845    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     13681    </span><br><span class="line">unix  2      [ ]         DGRAM                    12789    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     5307331  </span><br><span class="line">unix  2      [ ]         DGRAM                    19924    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     17452    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     13042    /run/systemd/journal/stdout</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     13340    /run/systemd/journal/stdout</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19808    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     13682    /run/dbus/system_bus_socket</span><br><span class="line">unix  2      [ ]         STREAM     CONNECTED     22699    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     12996    </span><br><span class="line">unix  2      [ ]         DGRAM                    5306931  </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19855    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19803    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19800    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     15344    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19821    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     17309    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19866    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19872    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     13783    /run/dbus/system_bus_socket</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     13433    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19844    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19824    </span><br><span class="line">unix  2      [ ]         STREAM     CONNECTED     22882    </span><br><span class="line">unix  2      [ ]         DGRAM                    17357    </span><br><span class="line">unix  2      [ ]         DGRAM                    5159762  </span><br><span class="line">unix  3      [ ]         DGRAM                    12019    </span><br><span class="line">unix  2      [ ]         DGRAM                    14011    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     17453    /run/systemd/journal/stdout</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19848    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19817    </span><br><span class="line">unix  2      [ ]         DGRAM                    17916    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     13339    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19858    </span><br><span class="line">unix  2      [ ]         STREAM     CONNECTED     22701    </span><br><span class="line">unix  2      [ ]         DGRAM                    555589   </span><br><span class="line">unix  2      [ ]         DGRAM                    13747    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     11748    /run/systemd/journal/stdout</span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19830    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19775    </span><br><span class="line">unix  2      [ ]         STREAM     CONNECTED     29225    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19820    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     19854    </span><br><span class="line">unix  2      [ ]         DGRAM                    11997    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     18547    </span><br><span class="line">unix  3      [ ]         STREAM     CONNECTED     13782    </span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看使用UDP协议占用端口,只能查看监听</span></span><br><span class="line">[root@VM-0-9-centos ~]# netstat -tlun</span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State      </span><br><span class="line">tcp        0      0 0.0.0.0:8888            0.0.0.0:*               LISTEN     </span><br><span class="line">tcp        0      0 0.0.0.0:888             0.0.0.0:*               LISTEN     </span><br><span class="line">tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN     </span><br><span class="line">tcp        0      0 127.0.0.1:6379          0.0.0.0:*               LISTEN     </span><br><span class="line">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN     </span><br><span class="line">tcp        0      0 0.0.0.0:21              0.0.0.0:*               LISTEN     </span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN     </span><br><span class="line">tcp6       0      0 ::1:25                  :::*                    LISTEN     </span><br><span class="line">tcp6       0      0 :::7777                 :::*                    LISTEN     </span><br><span class="line">tcp6       0      0 :::3333                 :::*                    LISTEN     </span><br><span class="line">tcp6       0      0 :::3306                 :::*                    LISTEN     </span><br><span class="line">tcp6       0      0 :::6187                 :::*                    LISTEN     </span><br><span class="line">tcp6       0      0 :::21                   :::*                    LISTEN     </span><br><span class="line">udp        0      0 10.0.0.9:123            0.0.0.0:*                          </span><br><span class="line">udp        0      0 127.0.0.1:123           0.0.0.0:*                          </span><br><span class="line">udp        0      0 0.0.0.0:68              0.0.0.0:*                          </span><br><span class="line">udp6       0      0 fe80::5054:ff:fe45::123 :::*                               </span><br><span class="line">udp6       0      0 ::1:123                 :::*          </span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看所有.</span></span><br><span class="line">[root@VM-0-9-centos ~]# netstat -an</span><br><span class="line">Active Internet connections (servers and established)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State      </span><br><span class="line">tcp        0      0 0.0.0.0:8888            0.0.0.0:*               LISTEN     </span><br><span class="line">tcp        0      0 0.0.0.0:888             0.0.0.0:*               LISTEN     </span><br><span class="line">..................</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看网关</span></span><br><span class="line">[root@VM-0-9-centos ~]# netstat -rn</span><br><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags   MSS Window  irtt Iface</span><br><span class="line">0.0.0.0         10.0.0.1        0.0.0.0         UG        0 0          0 eth0</span><br><span class="line">10.0.0.0        0.0.0.0         255.255.252.0   U         0 0          0 eth0</span><br><span class="line">169.254.0.0     0.0.0.0         255.255.0.0     U         0 0          0 eth0</span><br></pre></td></tr></table></figure><h2 id="setup">setup<a class="header-anchor" href="#setup">#</a></h2><blockquote><p>配置网络</p></blockquote><p><img src="http://qiniu.yujing.fit/typora_img/image-20211222203517181.png" alt="image-20211222203517181"></p><p><img src="http://qiniu.yujing.fit/typora_img/image-20211222203551156.png" alt="image-20211222203551156"></p><blockquote><p>​</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos ~]# service network restart</span><br><span class="line">Restarting network (via systemctl):                        [  OK  ]</span><br></pre></td></tr></table></figure><h2 id="mount">mount<a class="header-anchor" href="#mount">#</a></h2><blockquote><p>挂载命令,分配盘符等</p></blockquote><p>通常在 /mnt/cdrom 目录挂载</p><h1>关机重启命令</h1><h2 id="shutdown">shutdown<a class="header-anchor" href="#shutdown">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">立刻关机</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">shutdown -h now</span>  </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重启</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">shutdown -r</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">取消前一个关机命令</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">shutdown -c</span> </span><br></pre></td></tr></table></figure><blockquote><p>其他关机命令</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">halt</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">poweroff</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">init 0</span></span><br></pre></td></tr></table></figure><blockquote><p>其他重启命令</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">reboot</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">init 6</span></span><br></pre></td></tr></table></figure><blockquote><p>系统运行级别</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>0 关机</p></li><li class="lvl-2"><p>1 单用户(只有root用户可使用)</p></li><li class="lvl-2"><p>2 不完全多用户(不含NFS服务)network file system,文件共享服务,具有安全隐患,不建议使用</p></li><li class="lvl-2"><p>3 完全多用户</p></li><li class="lvl-2"><p>4 未分配</p></li><li class="lvl-2"><p>5 图形界面</p></li><li class="lvl-2"><p>6 重启</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看init配置文件</span></span><br><span class="line">[tiam@VM-0-9-centos ~]$ cat /etc/inittab</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">inittab is no longer used when using systemd.</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># ADDING CONFIGURATION HERE WILL HAVE NO EFFECT ON YOUR SYSTEM.</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># Ctrl-Alt-Delete is handled by /usr/lib/systemd/system/ctrl-alt-del.target</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># systemd uses &#x27;targets&#x27; instead of runlevels. By default, there are two main targets:</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># multi-user.target: analogous to runlevel 3</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">graphical.target: analogous to runlevel 5</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># To view current default target, run:</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl get-default</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># To set a default target, run:</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systemctl set-default TARGET.target</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash">[tiam@VM-0-9-centos ~]$</span> </span><br></pre></td></tr></table></figure><h2 id="runlevel">runlevel<a class="header-anchor" href="#runlevel">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看当前运行级别,以及上一次的运行级别 N,表示null</span></span><br><span class="line">[root@VM-0-9-centos ~]# runlevel</span><br><span class="line">N 3</span><br><span class="line">[root@VM-0-9-centos ~]# init 5</span><br><span class="line">[root@VM-0-9-centos ~]# runlevel</span><br><span class="line">3 5</span><br><span class="line">[root@VM-0-9-centos ~]#</span><br></pre></td></tr></table></figure><h2 id="top">top<a class="header-anchor" href="#top">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">top - 21:09:34 up 2 days, 20:57,  4 users,  load average: 0.61, 0.66, 0.53</span><br><span class="line">Tasks: 132 total,   1 running, 130 sleeping,   0 stopped,   1 zombie</span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">Cpu(s):  7.1 us,  8.1 sy,  0.0 ni, 84.8 <span class="built_in">id</span>,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span></span><br><span class="line">KiB Mem :  1882000 total,    82760 free,   972728 used,   826512 buff/cache</span><br><span class="line">KiB Swap:  1049596 total,  1035772 free,    13824 used.   729876 avail Mem </span><br><span class="line"></span><br><span class="line">  PID USER      PR  NI    VIRT    RES    SHR S %CPU %MEM     TIME+ COMMAND                       </span><br><span class="line"> 1317 www       20   0 2523448 145808   9508 S  5.0  7.7  56:15.28 jsvc                          </span><br><span class="line"> 2740 root      20   0  959012  37192  14680 S  0.7  2.0  21:32.14 YDService                     </span><br><span class="line"> 2692 root      20   0  158572   9164   1776 S  0.3  0.5   2:06.41 barad_agent                   </span><br><span class="line"> 2693 root      20   0  609404  11524   2032 S  0.3  0.6  10:24.99 barad_agent                   </span><br><span class="line"> 3166 tiam      20   0  157128   2880   1184 S  0.3  0.2   0:11.85 sshd                          </span><br><span class="line"> 3445 tiam      20   0  160720   3024   1564 S  0.3  0.2   0:03.96 top                           </span><br><span class="line"> 9681 root      20   0  157228   5916   4192 S  0.3  0.3   0:16.23 sshd                          </span><br><span class="line">    1 root      20   0   51912   3844   2468 S  0.0  0.2   0:34.17 systemd                       </span><br><span class="line">    2 root      20   0       0      0      0 S  0.0  0.0   0:00.06 kthreadd                      </span><br><span class="line">    4 root       0 -20       0      0      0 S  0.0  0.0   0:00.00 kworker/0:0H                  </span><br><span class="line">    6 root      20   0       0      0      0 S  0.0  0.0   0:09.21 ksoftirqd/0                   </span><br><span class="line">    7 root      rt   0       0      0      0 S  0.0  0.0   0:00.00 migration/0</span><br></pre></td></tr></table></figure><h1>Vim文本编辑器</h1><h2 id="更多">更多<a class="header-anchor" href="#更多">#</a></h2><p><a href="https://www.runoob.com/linux/linux-vim.html">菜鸟教程</a></p><p><a href="https://www.vim.org/docs.php">官方文档</a></p><p><img src="http://qiniu.yujing.fit/typora_img/vi-vim-cheat-sheet-sch.gif" alt="img"></p><blockquote><p>Vim没有菜单,只有命令</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>命令模式</p></li><li class="lvl-2"><p>插入模式  输入<code>a</code>或 <code>i</code>或<code>o</code></p></li><li class="lvl-2"><p>编辑模式</p></li></ul><h2 id="vi-vim-的使用">vi/vim 的使用<a class="header-anchor" href="#vi-vim-的使用">#</a></h2><p>基本上 vi/vim 共分为三种模式，分别是<strong>命令模式（Command mode）</strong>，<strong>输入模式（Insert mode）<strong>和</strong>底线命令模式（Last line mode）</strong>。 这三种模式的作用分别是：</p><h3 id="命令模式：">命令模式：<a class="header-anchor" href="#命令模式：">#</a></h3><p>用户刚刚启动 vi/vim，便进入了命令模式。</p><p>此状态下敲击键盘动作会被Vim识别为命令，而非输入字符。比如我们此时按下i，并不会输入一个字符，i被当作了一个命令。</p><p>以下是常用的几个命令：</p><ul class="lvl-0"><li class="lvl-2"><p><strong>i</strong> 切换到输入模式，以输入字符。</p></li><li class="lvl-2"><p><strong>x</strong> 删除当前光标所在处的字符。</p></li><li class="lvl-2"><p><strong>:</strong> 切换到底线命令模式，以在最底一行输入命令。</p></li></ul><p>若想要编辑文本：启动Vim，进入了命令模式，按下i，切换到输入模式。</p><p>命令模式只有一些最基本的命令，因此仍要依靠底线命令模式输入更多命令。</p><h3 id="输入模式">输入模式<a class="header-anchor" href="#输入模式">#</a></h3><p>在命令模式下按下i就进入了输入模式。</p><p>在输入模式中，可以使用以下按键：</p><ul class="lvl-0"><li class="lvl-2"><p><strong>字符按键以及Shift组合</strong>，输入字符</p></li><li class="lvl-2"><p><strong>ENTER</strong>，回车键，换行</p></li><li class="lvl-2"><p><strong>BACK SPACE</strong>，退格键，删除光标前一个字符</p></li><li class="lvl-2"><p><strong>DEL</strong>，删除键，删除光标后一个字符</p></li><li class="lvl-2"><p><strong>方向键</strong>，在文本中移动光标</p></li><li class="lvl-2"><p><strong>HOME</strong>/<strong>END</strong>，移动光标到行首/行尾</p></li><li class="lvl-2"><p><strong>Page Up</strong>/<strong>Page Down</strong>，上/下翻页</p></li><li class="lvl-2"><p><strong>Insert</strong>，切换光标为输入/替换模式，光标将变成竖线/下划线</p></li><li class="lvl-2"><p><strong>ESC</strong>，退出输入模式，切换到命令模式</p></li></ul><h3 id="底线命令模式">底线命令模式<a class="header-anchor" href="#底线命令模式">#</a></h3><p>在命令模式下按下:（英文冒号）就进入了底线命令模式。</p><p>底线命令模式可以输入单个或多个字符的命令，可用的命令非常多。</p><p>在底线命令模式中，基本的命令有（已经省略了冒号）：</p><ul class="lvl-0"><li class="lvl-2"><p>q 退出程序</p></li><li class="lvl-2"><p>w 保存文件</p></li></ul><p>按ESC键可随时退出底线命令模式。</p><p>简单的说，我们可以将这三个模式想成底下的图标来表示：</p><p><img src="https://www.runoob.com/wp-content/uploads/2014/07/vim-vi-workmodel.png" alt="img"></p><h2 id=""><a class="header-anchor" href="#">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">help.txt        For Vim version 7.4.  Last change: 2012 Dec 06</span><br><span class="line"></span><br><span class="line">                        VIM - main help file</span><br><span class="line">                                                                         k</span><br><span class="line">      Move around:  Use the cursor keys, or &quot;h&quot; to go left,            h   l</span><br><span class="line">                    &quot;j&quot; to go down, &quot;k&quot; to go up, &quot;l&quot; to go right.       j</span><br><span class="line">Close this window:  Use &quot;:q&lt;Enter&gt;&quot;.</span><br><span class="line">   Get out of Vim:  Use &quot;:qa!&lt;Enter&gt;&quot; (careful, all changes are lost!).</span><br><span class="line"></span><br><span class="line">Jump to a subject:  Position the cursor on a tag (e.g. bars) and hit CTRL-].</span><br><span class="line">   With the mouse:  &quot;:set mouse=a&quot; to enable the mouse (in xterm or GUI).</span><br><span class="line">                    Double-click the left mouse button on a tag, e.g. bars.</span><br><span class="line">        Jump back:  Type CTRL-T or CTRL-O (repeat to go further back).</span><br><span class="line"></span><br><span class="line">Get specific help:  It is possible to go directly to whatever you want help</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示行号</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">:<span class="built_in">set</span> nu</span></span><br></pre></td></tr></table></figure><p><img src="http://qiniu.yujing.fit/typora_img/image-20211222212124909.png" alt="image-20211222212124909"></p><p><img src="http://qiniu.yujing.fit/typora_img/image-20211222212149195.png" alt="image-20211222212149195"></p><p><img src="http://qiniu.yujing.fit/typora_img/image-20211222212707820.png" alt="image-20211222212707820"></p><p><img src="http://qiniu.yujing.fit/typora_img/image-20211222212915996.png" alt="image-20211222212915996"></p><h2 id="使用技巧">使用技巧<a class="header-anchor" href="#使用技巧">#</a></h2><p>将 date命令返回的结果,写入文件中.</p><p><img src="http://qiniu.yujing.fit/typora_img/image-20211222214756084.png" alt="image-20211222214756084"></p><h1>npm包管理</h1><ul class="lvl-0"><li class="lvl-2"><p>包全名 – 未安装的软件包,使用包全名,且要注意路径</p></li><li class="lvl-2"><p>包名  – /var/lib/rpm/中的数据库 , 已安装的软件包</p></li></ul><h2 id="rpm-ivh">rpm -ivh<a class="header-anchor" href="#rpm-ivh">#</a></h2><blockquote><p>$ rpm -ivh 全包名   #rpm包安装</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p><code>-i</code> 安装 install</p></li><li class="lvl-2"><p><code>-v</code> 显示详细信息  verbose</p></li><li class="lvl-2"><p><code>-h</code> 显示进度  hash</p></li><li class="lvl-2"><p><code>-nodeps</code> 不检测依赖性</p></li></ul><h2 id="rpm-Uvh">rpm -Uvh<a class="header-anchor" href="#rpm-Uvh">#</a></h2><blockquote><p>$ rpm -Uvh  包名    #rpm包升级</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p><code>-U</code> Update</p></li></ul><h2 id="rpm-e">rpm -e<a class="header-anchor" href="#rpm-e">#</a></h2><blockquote><p>$ rpm -e 包名     # 卸载包</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p><code>-e</code> 卸载 erase</p></li><li class="lvl-2"><p><code>--nodeps</code> 不检测依赖性</p></li></ul><h2 id="rpm-q">rpm -q*<a class="header-anchor" href="#rpm-q">#</a></h2><blockquote><p>$ rpm -q 包名  # 查询是否安装</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p><code>-q</code> 查询 query</p></li><li class="lvl-2"><p><code>-a</code> 查看全部已安装的包 all</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos ~]# rpm -q yum</span><br><span class="line">未安装软件包 yum </span><br><span class="line">[root@VM-0-9-centos ~]# rpm -qa</span><br><span class="line">ustr-1.0.4-16.el7.x86_64</span><br><span class="line">libselinux-devel-2.5-15.el7.x86_64</span><br><span class="line">libdaemon-0.14-7.el7.x86_64</span><br><span class="line">libXft-2.3.2-2.el7.x86_64</span><br><span class="line">python-2.7.5-90.el7.x86_64</span><br><span class="line">keyutils-libs-devel-1.5.8-3.el7.x86_64</span><br><span class="line">ncurses-5.9-14.20130511.el7_4.x86_64</span><br><span class="line">iptables-1.4.21-35.el7.x86_64</span><br><span class="line">tk-devel-8.5.13-6.el7.x86_64</span><br><span class="line">hostname-3.13-3.el7_7.1.x86_64</span><br><span class="line">satyr-0.13-15.el7.x86_64</span><br><span class="line">libdb4-devel-4.8.30-13.el7.x86_64</span><br><span class="line">info-5.1-5.el7.x86_64</span><br><span class="line">......</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查出所有带有python关键字的软件包</span></span><br><span class="line">[root@VM-0-9-centos ~]# rpm -qa | grep python</span><br><span class="line">python-2.7.5-90.el7.x86_64</span><br><span class="line">abrt-python-2.1.11-60.el7.centos.x86_64</span><br><span class="line">python-slip-dbus-0.4.0-4.el7.noarch</span><br><span class="line">newt-python-0.52.15-4.el7.x86_64</span><br><span class="line">python-iniparse-0.4-9.el7.noarch</span><br><span class="line">python-configobj-4.7.2-7.el7.noarch</span><br><span class="line">python-jinja2-2.7.2-4.el7.noarch</span><br><span class="line">python-ipaddress-1.0.16-2.el7.noarch</span><br><span class="line">.......</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查询已安装相关信息.</span></span><br><span class="line">[root@VM-0-9-centos ~]# rpm -qi python</span><br><span class="line">Name        : python</span><br><span class="line">Version     : 2.7.5</span><br><span class="line">Release     : 90.el7</span><br><span class="line">Architecture: x86_64</span><br><span class="line">Install Date: 2021年01月19日 星期二 18时23分40秒</span><br><span class="line">Group       : Development/Languages</span><br><span class="line">Size        : 80835</span><br><span class="line">License     : Python</span><br><span class="line">Signature   : RSA/SHA256, 2020年11月18日 星期三 22时19分50秒, Key ID 24c6a8a7f4a80eb5</span><br><span class="line">Source RPM  : python-2.7.5-90.el7.src.rpm</span><br><span class="line">Build Date  : 2020年11月17日 星期二 06时47分32秒</span><br><span class="line">Build Host  : x86-01.bsys.centos.org</span><br><span class="line">Relocations : (not relocatable)</span><br><span class="line">Packager    : CentOS BuildSystem &lt;http://bugs.centos.org&gt;</span><br><span class="line">Vendor      : CentOS</span><br><span class="line">URL         : http://www.python.org/</span><br><span class="line">Summary     : An interpreted, interactive, object-oriented programming language</span><br><span class="line">Description :</span><br><span class="line">Python is an interpreted, interactive, object-oriented programming</span><br><span class="line">language often compared to Tcl, Perl, Scheme or Java. Python includes</span><br><span class="line">modules, classes, exceptions, very high level dynamic data types and</span><br><span class="line">dynamic typing. Python supports interfaces to many system calls and</span><br><span class="line">libraries, as well as to various windowing systems (X11, Motif, Tk,</span><br><span class="line">Mac and MFC).</span><br><span class="line"></span><br><span class="line">Programmers can write new built-in modules for Python in C or C++.</span><br><span class="line">Python can be used as an extension language for applications that need</span><br><span class="line">a programmable interface.</span><br><span class="line"></span><br><span class="line">Note that documentation for Python is provided in the python-docs</span><br><span class="line">package.</span><br><span class="line"></span><br><span class="line">This package provides the &quot;python&quot; executable; most of the actual</span><br><span class="line">implementation is within the &quot;python-libs&quot; package.</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-p 查询未安装软件包信息</span></span><br><span class="line">[root@VM-0-9-centos ~]# rpm -qip yum-cron-3.4.3-168.el7.centos.noarch.rpm</span><br><span class="line">Name        : yum-cron</span><br><span class="line">Version     : 3.4.3</span><br><span class="line">Release     : 168.el7.centos</span><br><span class="line">Architecture: noarch</span><br><span class="line">Install Date: (not installed)</span><br><span class="line">Group       : System Environment/Base</span><br><span class="line">Size        : 52190</span><br><span class="line">License     : GPLv2+</span><br><span class="line">Signature   : RSA/SHA256, 2020年10月15日 星期四 03时21分12秒, Key ID 24c6a8a7f4a80eb5</span><br><span class="line">Source RPM  : yum-3.4.3-168.el7.centos.src.rpm</span><br><span class="line">Build Date  : 2020年10月02日 星期五 01时03分49秒</span><br><span class="line">Build Host  : x86-02.bsys.centos.org</span><br><span class="line">Relocations : (not relocatable)</span><br><span class="line">Packager    : CentOS BuildSystem &lt;http://bugs.centos.org&gt;</span><br><span class="line">Vendor      : CentOS</span><br><span class="line">URL         : http://yum.baseurl.org/</span><br><span class="line">Summary     : Files needed to run yum updates as a cron job</span><br><span class="line">Description :</span><br><span class="line">These are the files needed to run yum updates as a cron job.</span><br><span class="line">Install this package if you want auto yum updates nightly via cron.</span><br></pre></td></tr></table></figure><h2 id="rpm-ql">rpm -ql<a class="header-anchor" href="#rpm-ql">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p><code>-l</code>  列表 list</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查询已安装软件包的位置</span></span><br><span class="line">[root@VM-0-9-centos ~]# rpm -ql python</span><br><span class="line">/usr/bin/pydoc</span><br><span class="line">/usr/bin/python</span><br><span class="line">/usr/bin/python2</span><br><span class="line">/usr/bin/python2.7</span><br><span class="line">/usr/libexec/platform-python</span><br><span class="line">/usr/share/doc/python-2.7.5</span><br><span class="line">/usr/share/doc/python-2.7.5/LICENSE</span><br><span class="line">/usr/share/doc/python-2.7.5/README</span><br><span class="line">/usr/share/man/man1/python.1.gz</span><br><span class="line">/usr/share/man/man1/python2.1.gz</span><br><span class="line">/usr/share/man/man1/python2.7.1.gz</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-p 查询未安装的软件包,默认安装位置.</span></span><br><span class="line">[root@VM-0-9-centos ~]# rpm -qlp yum-cron-3.4.3-168.el7.centos.noarch.rpm</span><br><span class="line">/etc/cron.daily/0yum-daily.cron</span><br><span class="line">/etc/cron.hourly/0yum-hourly.cron</span><br><span class="line">/etc/yum/yum-cron-hourly.conf</span><br><span class="line">/etc/yum/yum-cron.conf</span><br><span class="line">/usr/lib/systemd/system/yum-cron.service</span><br><span class="line">/usr/sbin/yum-cron</span><br><span class="line">/usr/share/doc/yum-cron-3.4.3</span><br><span class="line">/usr/share/doc/yum-cron-3.4.3/COPYING</span><br><span class="line">/usr/share/man/man8/yum-cron.8</span><br></pre></td></tr></table></figure><h2 id="rpm-qf">rpm -qf<a class="header-anchor" href="#rpm-qf">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos ~]#  rpm -ql python</span><br><span class="line">/usr/bin/pydoc</span><br><span class="line">/usr/bin/python</span><br><span class="line">/usr/bin/python2</span><br><span class="line">/usr/bin/python2.7</span><br><span class="line">/usr/libexec/platform-python</span><br><span class="line">/usr/share/doc/python-2.7.5</span><br><span class="line">/usr/share/doc/python-2.7.5/LICENSE</span><br><span class="line">/usr/share/doc/python-2.7.5/README</span><br><span class="line">/usr/share/man/man1/python.1.gz</span><br><span class="line">/usr/share/man/man1/python2.1.gz</span><br><span class="line">/usr/share/man/man1/python2.7.1.gz</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">反向查询 <span class="string">&#x27;系统文件&#x27;</span> 属于哪一个软件包下.</span></span><br><span class="line">[root@VM-0-9-centos ~]# rpm -qf /usr/share/man/man1/python2.7.1.gz</span><br><span class="line">python-2.7.5-90.el7.x86_64</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-0-9-centos rpm]# rpm</span><br><span class="line">RPM 版本 4.11.3</span><br><span class="line">版权所有 (C) 1998-2002 - 红帽公司。</span><br><span class="line">该程序可以在 GNU GPL 条款下自由分发</span><br><span class="line"></span><br><span class="line">用法: rpm [-aKfgpqVcdLilsiv?] [-a|--all] [-f|--file] [-g|--group] [-p|--package] [--pkgid] [--hdrid]</span><br><span class="line">        [--triggeredby] [--whatrequires] [--whatprovides] [--nomanifest] [-c|--configfiles]</span><br><span class="line">        [-d|--docfiles] [-L|--licensefiles] [--dump] [-l|--list] [--queryformat=QUERYFORMAT]</span><br><span class="line">        [-s|--state] [--nofiledigest] [--nofiles] [--nodeps] [--noscript] [--allfiles]</span><br><span class="line">        [--allmatches] [--badreloc] [-e|--erase &lt;package&gt;+] [--excludedocs] [--excludepath=&lt;path&gt;]</span><br><span class="line">        [--force] [-F|--freshen &lt;packagefile&gt;+] [-h|--hash] [--ignorearch] [--ignoreos]</span><br><span class="line">        [--ignoresize] [-i|--install] [--justdb] [--nodeps] [--nofiledigest] [--nocontexts]</span><br><span class="line">        [--noorder] [--noscripts] [--notriggers] [--nocollections] [--oldpackage] [--percent]</span><br><span class="line">        [--prefix=&lt;dir&gt;] [--relocate=&lt;old&gt;=&lt;new&gt;] [--replacefiles] [--replacepkgs] [--test]</span><br><span class="line">        [-U|--upgrade &lt;packagefile&gt;+] [--reinstall=&lt;packagefile&gt;+] [-D|--define “MACRO EXPR”]</span><br><span class="line">        [--undefine=MACRO] [-E|--eval “EXPR”] [--macros=&lt;FILE:…&gt;] [--noplugins] [--nodigest]</span><br><span class="line">        [--nosignature] [--rcfile=&lt;FILE:…&gt;] [-r|--root ROOT] [--dbpath=DIRECTORY] [--querytags]</span><br><span class="line">        [--showrc] [--quiet] [-v|--verbose] [--version] [-?|--help] [--usage] [--scripts]</span><br><span class="line">        [--setperms] [--setugids] [--setcaps] [--restore] [--conflicts] [--obsoletes]</span><br><span class="line">        [--provides] [--requires] [--info] [--changelog] [--xml] [--triggers] [--last] [--dupes]</span><br><span class="line">        [--filesbypkg] [--fileclass] [--filecolor] [--fscontext] [--fileprovide] [--filerequire]</span><br><span class="line">        [--filecaps]</span><br><span class="line"><span class="meta prompt_"> # </span><span class="language-bash">-p 查看未安装软件包的依赖性</span></span><br><span class="line">[root@VM-0-9-centos rpm]# rpm -qRp yum-cron-3.4.3-168.el7.centos.noarch.rpm</span><br><span class="line">错误：打开 yum-cron-3.4.3-168.el7.centos.noarch.rpm 失败： 没有那个文件或目录</span><br></pre></td></tr></table></figure><h2 id="rpm-V">rpm -V<a class="header-anchor" href="#rpm-V">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看软件包是否被修改,无信息表示未被修改.</span></span><br><span class="line">[root@VM-0-9-centos rpm]# rpm -V python</span><br><span class="line">[root@VM-0-9-centos rpm]# rpm -V yum</span><br><span class="line">未安装软件包 yum </span><br><span class="line">[root@VM-0-9-centos rpm]# rpm -V httped</span><br><span class="line">未安装软件包 httped </span><br></pre></td></tr></table></figure><p><img src="http://qiniu.yujing.fit/typora_img/image-20211226133114942.png" alt="image-20211226133114942"></p><p><img src="http://qiniu.yujing.fit/typora_img/image-20211226133322261.png" alt="image-20211226133322261"></p><h2 id="rpm2cpio-全包名-cpio-idv-文件绝对路径">rpm2cpio 全包名 | \ cpio -idv .文件绝对路径<a class="header-anchor" href="#rpm2cpio-全包名-cpio-idv-文件绝对路径">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p><code>|</code> 管道符</p></li><li class="lvl-2"><p><code>\</code> 表示换行,一行命令为输入完全</p></li><li class="lvl-2"><p><code>.</code> 表示文件</p></li></ul><blockquote><p>rpm包中文件提取  , 一般用于误删除的修复.</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>rpm2cpio  将rpm包转换为cpio格式的命令</p></li><li class="lvl-2"><p>cpio 标准工具,用于创建软件档案文件和冲档案中提取文件</p></li></ul><blockquote><p>$ cpio 选项 &lt; [文件] [设备]</p></blockquote><h1>yum管理</h1><p><img src="http://qiniu.yujing.fit/typora_img/image-20211226135954726.png" alt="image-20211226135954726"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">已安装yum</span> </span><br><span class="line">[root@bogon ~]# yum -v</span><br><span class="line">加载 &quot;fastestmirror&quot; 插件</span><br><span class="line">Config time: 0.030</span><br><span class="line">Yum version: 3.4.3</span><br><span class="line">您需要给出命令</span><br><span class="line">Usage: yum [options] COMMAND</span><br><span class="line"></span><br><span class="line">List of Commands:</span><br><span class="line"></span><br><span class="line">check          检查 RPM 数据库问题</span><br><span class="line">check-update   检查是否有可用的软件包更新</span><br><span class="line">clean          删除缓存数据</span><br><span class="line">deplist        列出软件包的依赖关系</span><br><span class="line">distribution-synchronization 已同步软件包到最新可用版本</span><br><span class="line">downgrade      降级软件包</span><br><span class="line">erase          从系统中移除一个或多个软件包</span><br><span class="line">fs             Acts on the filesystem data of the host, mainly for removing docs/lanuages for minimal hosts.</span><br><span class="line">fssnapshot     Creates filesystem snapshots, or lists/deletes current snapshots.</span><br><span class="line">groups         显示或使用、组信息</span><br><span class="line">help           显示用法提示</span><br><span class="line">history        显示或使用事务历史</span><br><span class="line">info           显示关于软件包或组的详细信息</span><br><span class="line">install        向系统中安装一个或多个软件包</span><br><span class="line">list           列出一个或一组软件包</span><br><span class="line">load-transaction 从文件名中加载一个已存事务</span><br><span class="line">makecache      创建元数据缓存</span><br><span class="line">provides       查找提供指定内容的软件包</span><br><span class="line">reinstall      覆盖安装软件包</span><br><span class="line">repo-pkgs      将一个源当作一个软件包组，这样我们就可以一次性安装/移除全部软件包。</span><br><span class="line">repolist       显示已配置的源</span><br><span class="line">search         在软件包详细信息中搜索指定字符串</span><br><span class="line">shell          运行交互式的 yum shell</span><br><span class="line">swap           Simple way to swap packages, instead of using shell</span><br><span class="line">update         更新系统中的一个或多个软件包</span><br><span class="line">update-minimal Works like upgrade, but goes to the &#x27;newest&#x27; package match which fixes a problem that affects your system</span><br><span class="line">updateinfo     Acts on repository update information</span><br><span class="line">upgrade        更新软件包同时考虑软件包取代关系</span><br><span class="line">version        显示机器和/或可用的源版本。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -h, --help            显示此帮助消息并退出</span><br><span class="line">  -t, --tolerant        忽略错误</span><br><span class="line">  -C, --cacheonly       完全从系统缓存运行，不升级缓存</span><br><span class="line">  -c [config file], --config=[config file]</span><br><span class="line">                        配置文件路径</span><br><span class="line">  -R [minutes], --randomwait=[minutes]</span><br><span class="line">                        命令最长等待时间</span><br><span class="line">  -d [debug level], --debuglevel=[debug level]</span><br><span class="line">                        调试输出级别</span><br><span class="line">  --showduplicates      在 list/search 命令下，显示源里重复的条目</span><br><span class="line">  -e [error level], --errorlevel=[error level]</span><br><span class="line">                        错误输出级别</span><br><span class="line">  --rpmverbosity=[debug level name]</span><br><span class="line">                        RPM 调试输出级别</span><br><span class="line">  -q, --quiet           静默执行</span><br><span class="line">  -v, --verbose         详尽的操作过程</span><br><span class="line">  -y, --assumeyes       回答全部问题为是</span><br><span class="line">  --assumeno            回答全部问题为否</span><br><span class="line">  --version             显示 Yum 版本然后退出</span><br><span class="line">  --installroot=[path]  设置安装根目录</span><br><span class="line">  --enablerepo=[repo]   启用一个或多个软件源(支持通配符)</span><br><span class="line">  --disablerepo=[repo]  禁用一个或多个软件源(支持通配符)</span><br><span class="line">  -x [package], --exclude=[package]</span><br><span class="line">                        采用全名或通配符排除软件包</span><br><span class="line">  --disableexcludes=[repo]</span><br><span class="line">                        禁止从主配置，从源或者从任何位置排除</span><br><span class="line">  --disableincludes=[repo]</span><br><span class="line">                        disable includepkgs for a repo or for everything</span><br><span class="line">  --obsoletes           更新时处理软件包取代关系</span><br><span class="line">  --noplugins           禁用 Yum 插件</span><br><span class="line">  --nogpgcheck          禁用 GPG 签名检查</span><br><span class="line">  --disableplugin=[plugin]</span><br><span class="line">                        禁用指定名称的插件</span><br><span class="line">  --enableplugin=[plugin]</span><br><span class="line">                        启用指定名称的插件</span><br><span class="line">  --skip-broken         忽略存在依赖关系问题的软件包</span><br><span class="line">  --color=COLOR         配置是否使用颜色</span><br><span class="line">  --releasever=RELEASEVER</span><br><span class="line">                        在 yum 配置和 repo 文件里设置 $releasever 的值</span><br><span class="line">  --downloadonly        仅下载而不更新</span><br><span class="line">  --downloaddir=DLDIR   指定一个其他文件夹用于保存软件包</span><br><span class="line">  --setopt=SETOPTS      设置任意配置和源选项</span><br><span class="line">  --bugfix              Include bugfix relevant packages, in updates</span><br><span class="line">  --security            Include security relevant packages, in updates</span><br><span class="line">  --advisory=ADVS, --advisories=ADVS</span><br><span class="line">                        Include packages needed to fix the given advisory, in</span><br><span class="line">                        updates</span><br><span class="line">  --bzs=BZS             Include packages needed to fix the given BZ, in</span><br><span class="line">                        updates</span><br><span class="line">  --cves=CVES           Include packages needed to fix the given CVE, in</span><br><span class="line">                        updates</span><br><span class="line">  --sec-severity=SEVS, --secseverity=SEVS</span><br><span class="line">                        Include security relevant packages matching the</span><br><span class="line">                        severity, in updates</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">未安装</span></span><br><span class="line">[root@VM-0-9-centos ~]# yum -v</span><br><span class="line">-bash: yum: 未找到命令</span><br></pre></td></tr></table></figure><blockquote><p>IP地址配置与yum源配置</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看配置文件</span></span><br><span class="line">[root@bogon ~]# cat /etc/yum.repos.d/CentOS-Base.repo</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">CentOS-Base.repo</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># The mirror system uses the connecting IP address of the client and the</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">update status of each mirror to pick mirrors that are updated to and</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">geographically close to the client.  You should use this <span class="keyword">for</span> CentOS updates</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">unless you are manually picking other mirrors.</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># If the mirrorlist= does not work for you, as a fall back you can try the</span></span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">remarked out baseurl= line instead.</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment">#</span></span></span><br><span class="line"></span><br><span class="line">[base]  # 容器名</span><br><span class="line">name=CentOS-$releasever - Base</span><br><span class="line">mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=os&amp;infra=$infra</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">baseurl=http://mirror.centos.org/centos/<span class="variable">$releasever</span>/os/<span class="variable">$basearch</span>/</span></span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">released updates</span> </span><br><span class="line">[updates]</span><br><span class="line">name=CentOS-$releasever - Updates</span><br><span class="line">mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=updates&amp;infra=$infra</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">baseurl=http://mirror.centos.org/centos/<span class="variable">$releasever</span>/updates/<span class="variable">$basearch</span>/</span></span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">additional packages that may be useful</span></span><br><span class="line">[extras]</span><br><span class="line">name=CentOS-$releasever - Extras</span><br><span class="line">mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=extras&amp;infra=$infra</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">baseurl=http://mirror.centos.org/centos/<span class="variable">$releasever</span>/extras/<span class="variable">$basearch</span>/</span></span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">additional packages that extend functionality of existing packages</span></span><br><span class="line">[centosplus]</span><br><span class="line">name=CentOS-$releasever - Plus</span><br><span class="line">mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=centosplus&amp;infra=$infra</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">baseurl=http://mirror.centos.org/centos/<span class="variable">$releasever</span>/centosplus/<span class="variable">$basearch</span>/</span></span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=0</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="yum-list">yum list<a class="header-anchor" href="#yum-list">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查询yum源可安装的软件包列表</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">yum list</span> </span><br><span class="line">alsa-plugins-maemo.x86_64                                1.1.6-1.el7                           base     </span><br><span class="line">alsa-plugins-oss.i686                                    1.1.6-1.el7                           base     </span><br><span class="line">alsa-plugins-oss.x86_64                                  1.1.6-1.el7                           base     </span><br><span class="line">alsa-plugins-pulseaudio.i686                             1.1.6-1.el7                           base     </span><br><span class="line">alsa-plugins-pulseaudio.x86_64                           1.1.6-1.el7                           base     </span><br><span class="line">alsa-plugins-samplerate.i686                             1.1.6-1.el7                           base     </span><br><span class="line">alsa-plugins-samplerate.x86_64                           1.1.6-1.el7                           base     </span><br><span class="line">.......</span><br></pre></td></tr></table></figure><h2 id="yum-search">yum search<a class="header-anchor" href="#yum-search">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">搜索软件包</span></span><br><span class="line">[root@bogon ~]# yum search gcc</span><br><span class="line">已加载插件：fastestmirror</span><br><span class="line">Repodata is over 2 weeks old. Install yum-cron? Or run: yum makecache fast</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirrors.bupt.edu.cn</span><br><span class="line"> * extras: mirrors.bupt.edu.cn</span><br><span class="line"> * updates: mirrors.neusoft.edu.cn</span><br><span class="line">=========================================== N/S matched: gcc ===========================================</span><br><span class="line">gcc-c++.x86_64 : C++ support for GCC</span><br><span class="line">gcc-gnat.x86_64 : Ada 95 support for GCC</span><br><span class="line">gcc-objc.x86_64 : Objective-C support for GCC</span><br><span class="line">gcc-objc++.x86_64 : Objective-C++ support for GCC</span><br><span class="line">gcc-plugin-devel.x86_64 : Support for compiling GCC plugins</span><br><span class="line">libgcc.i686 : GCC version 4.8 shared support library</span><br><span class="line">libgcc.x86_64 : GCC version 4.8 shared support library</span><br><span class="line">relaxngcc-javadoc.noarch : Javadoc for relaxngcc</span><br><span class="line">compat-gcc-44.x86_64 : Compatibility GNU Compiler Collection</span><br><span class="line">compat-gcc-44-c++.x86_64 : C++ support for compatibility compiler</span><br><span class="line">compat-gcc-44-gfortran.x86_64 : Fortran support for compatibility compiler</span><br><span class="line">gcc.x86_64 : Various compilers (C, C++, Objective-C, Java, ...)</span><br><span class="line">gcc-gfortran.x86_64 : Fortran support</span><br><span class="line">gcc-go.x86_64 : Go support</span><br><span class="line">libgomp.i686 : GCC OpenMP v3.0 shared support library</span><br><span class="line">libgomp.x86_64 : GCC OpenMP v3.0 shared support library</span><br><span class="line">libmudflap.i686 : GCC mudflap shared support library</span><br><span class="line">libmudflap.x86_64 : GCC mudflap shared support library</span><br><span class="line">libmudflap-devel.i686 : GCC mudflap support</span><br><span class="line">libmudflap-devel.x86_64 : GCC mudflap support</span><br><span class="line">libquadmath.i686 : GCC __float128 shared support library</span><br><span class="line">libquadmath.x86_64 : GCC __float128 shared support library</span><br><span class="line">libquadmath-devel.i686 : GCC __float128 support</span><br><span class="line">libquadmath-devel.x86_64 : GCC __float128 support</span><br><span class="line">relaxngcc.noarch : RELAX NG Compiler Compiler</span><br><span class="line"></span><br><span class="line">  名称和简介匹配 only，使用“search all”试试。</span><br></pre></td></tr></table></figure><h2 id="yum-install">yum install<a class="header-anchor" href="#yum-install">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p><code>-y</code> 自动回答yes</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装c语言编译器gcc</span></span><br><span class="line">[root@bogon ~]# yum -y install gcc</span><br><span class="line">已加载插件：fastestmirror</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirrors.bupt.edu.cn</span><br><span class="line"> * extras: mirrors.bupt.edu.cn</span><br><span class="line"> * updates: mirrors.neusoft.edu.cn</span><br><span class="line">base                                                                             | 3.6 kB  00:00:00     </span><br><span class="line">extras                                                                           | 2.9 kB  00:00:00     </span><br><span class="line">updates                                                                          | 2.9 kB  00:00:00     </span><br><span class="line">updates/7/x86_64/primary_db                                                      |  13 MB  00:00:19     </span><br><span class="line">正在解决依赖关系</span><br><span class="line"><span class="meta prompt_">--&gt; </span><span class="language-bash">正在检查事务</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">软件包 gcc.x86_64.0.4.8.5-44.el7 将被 安装</span></span><br><span class="line"><span class="meta prompt_">--&gt; </span><span class="language-bash">正在处理依赖关系 cpp = 4.8.5-44.el7，它被软件包 gcc-4.8.5-44.el7.x86_64 需要</span></span><br><span class="line"><span class="meta prompt_">--&gt; </span><span class="language-bash">正在处理依赖关系 glibc-devel &gt;= 2.2.90-12，它被软件包 gcc-4.8.5-44.el7.x86_64 需要</span></span><br><span class="line"><span class="meta prompt_">--&gt; </span><span class="language-bash">正在处理依赖关系 libmpfr.so.4()(64bit)，它被软件包 gcc-4.8.5-44.el7.x86_64 需要</span></span><br><span class="line"><span class="meta prompt_">--&gt; </span><span class="language-bash">正在处理依赖关系 libmpc.so.3()(64bit)，它被软件包 gcc-4.8.5-44.el7.x86_64 需要</span></span><br><span class="line"><span class="meta prompt_">--&gt; </span><span class="language-bash">正在检查事务</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">软件包 cpp.x86_64.0.4.8.5-44.el7 将被 安装</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">软件包 glibc-devel.x86_64.0.2.17-325.el7_9 将被 安装</span></span><br><span class="line"><span class="meta prompt_">--&gt; </span><span class="language-bash">正在处理依赖关系 glibc-headers = 2.17-325.el7_9，它被软件包 glibc-devel-2.17-325.el7_9.x86_64 需要</span></span><br><span class="line"><span class="meta prompt_">--&gt; </span><span class="language-bash">正在处理依赖关系 glibc = 2.17-325.el7_9，它被软件包 glibc-devel-2.17-325.el7_9.x86_64 需要</span></span><br><span class="line"><span class="meta prompt_">--&gt; </span><span class="language-bash">正在处理依赖关系 glibc-headers，它被软件包 glibc-devel-2.17-325.el7_9.x86_64 需要</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">软件包 libmpc.x86_64.0.1.0.1-3.el7 将被 安装</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">软件包 mpfr.x86_64.0.3.1.1-4.el7 将被 安装</span></span><br><span class="line"><span class="meta prompt_">--&gt; </span><span class="language-bash">正在检查事务</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">软件包 glibc.x86_64.0.2.17-317.el7 将被 升级</span></span><br><span class="line"><span class="meta prompt_">--&gt; </span><span class="language-bash">正在处理依赖关系 glibc = 2.17-317.el7，它被软件包 glibc-common-2.17-317.el7.x86_64 需要</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">软件包 glibc.x86_64.0.2.17-325.el7_9 将被 更新</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">软件包 glibc-headers.x86_64.0.2.17-325.el7_9 将被 安装</span></span><br><span class="line"><span class="meta prompt_">--&gt; </span><span class="language-bash">正在处理依赖关系 kernel-headers &gt;= 2.2.1，它被软件包 glibc-headers-2.17-325.el7_9.x86_64 需要</span></span><br><span class="line"><span class="meta prompt_">--&gt; </span><span class="language-bash">正在处理依赖关系 kernel-headers，它被软件包 glibc-headers-2.17-325.el7_9.x86_64 需要</span></span><br><span class="line"><span class="meta prompt_">--&gt; </span><span class="language-bash">正在检查事务</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">软件包 glibc-common.x86_64.0.2.17-317.el7 将被 升级</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">软件包 glibc-common.x86_64.0.2.17-325.el7_9 将被 更新</span></span><br><span class="line"><span class="meta prompt_">---&gt; </span><span class="language-bash">软件包 kernel-headers.x86_64.0.3.10.0-1160.49.1.el7 将被 安装</span></span><br><span class="line"><span class="meta prompt_">--&gt; </span><span class="language-bash">解决依赖关系完成</span></span><br><span class="line"></span><br><span class="line">依赖关系解决</span><br><span class="line"></span><br><span class="line">========================================================================================================</span><br><span class="line"> Package                   架构              版本                              源                  大小</span><br><span class="line">========================================================================================================</span><br><span class="line">正在安装:</span><br><span class="line"> gcc                       x86_64            4.8.5-44.el7                      base                16 M</span><br><span class="line">为依赖而安装:</span><br><span class="line"> cpp                       x86_64            4.8.5-44.el7                      base               5.9 M</span><br><span class="line"> glibc-devel               x86_64            2.17-325.el7_9                    updates            1.1 M</span><br><span class="line"> glibc-headers             x86_64            2.17-325.el7_9                    updates            691 k</span><br><span class="line"> kernel-headers            x86_64            3.10.0-1160.49.1.el7              updates            9.0 M</span><br><span class="line"> libmpc                    x86_64            1.0.1-3.el7                       base                51 k</span><br><span class="line"> mpfr                      x86_64            3.1.1-4.el7                       base               203 k</span><br><span class="line">为依赖而更新:</span><br><span class="line"> glibc                     x86_64            2.17-325.el7_9                    updates            3.6 M</span><br><span class="line"> glibc-common              x86_64            2.17-325.el7_9                    updates             12 M</span><br><span class="line"></span><br><span class="line">事务概要</span><br><span class="line">========================================================================================================</span><br><span class="line">安装  1 软件包 (+6 依赖软件包)</span><br><span class="line">升级           ( 2 依赖软件包)</span><br><span class="line"></span><br><span class="line">总下载量：48 M</span><br><span class="line">Downloading packages:</span><br><span class="line">Delta RPMs disabled because /usr/bin/applydeltarpm not installed.</span><br><span class="line">(1/9): glibc-devel-2.17-325.el7_9.x86_64.rpm                                     | 1.1 MB  00:00:01     </span><br><span class="line">(2/9): glibc-headers-2.17-325.el7_9.x86_64.rpm                                   | 691 kB  00:00:00     </span><br><span class="line">(3/9): kernel-headers-3.10.0-1160.49.1.el7.x86_64.rpm                            | 9.0 MB  00:00:04     </span><br><span class="line">(4/9): libmpc-1.0.1-3.el7.x86_64.rpm                                             |  51 kB  00:00:00     </span><br><span class="line">(5/9): mpfr-3.1.1-4.el7.x86_64.rpm                                               | 203 kB  00:00:00     </span><br><span class="line">(6/9): glibc-2.17-325.el7_9.x86_64.rpm                                           | 3.6 MB  00:00:18     </span><br><span class="line">(7/9): cpp-4.8.5-44.el7.x86_64.rpm                                               | 5.9 MB  00:00:23     </span><br><span class="line">(8/9): glibc-common-2.17-325.el7_9.x86_64.rpm                                    |  12 MB  00:00:26     </span><br><span class="line">(9/9): gcc-4.8.5-44.el7.x86_64.rpm                                               |  16 MB  00:00:28     </span><br><span class="line">--------------------------------------------------------------------------------------------------------</span><br><span class="line">总计                                                                    1.7 MB/s |  48 MB  00:00:28     </span><br><span class="line">Running transaction check</span><br><span class="line">Running transaction test</span><br><span class="line">Transaction test succeeded</span><br><span class="line">Running transaction</span><br><span class="line">  正在更新    : glibc-2.17-325.el7_9.x86_64                                                        1/11 </span><br><span class="line">  正在更新    : glibc-common-2.17-325.el7_9.x86_64                                                 2/11 </span><br><span class="line">  正在安装    : mpfr-3.1.1-4.el7.x86_64                                                            3/11 </span><br><span class="line">  正在安装    : libmpc-1.0.1-3.el7.x86_64                                                          4/11 </span><br><span class="line">  正在安装    : cpp-4.8.5-44.el7.x86_64                                                            5/11 </span><br><span class="line">  正在安装    : kernel-headers-3.10.0-1160.49.1.el7.x86_64                                         6/11 </span><br><span class="line">  正在安装    : glibc-headers-2.17-325.el7_9.x86_64                                                7/11 </span><br><span class="line">  正在安装    : glibc-devel-2.17-325.el7_9.x86_64                                                  8/11 </span><br><span class="line">  正在安装    : gcc-4.8.5-44.el7.x86_64                                                            9/11 </span><br><span class="line">  清理        : glibc-2.17-317.el7.x86_64                                                         10/11 </span><br><span class="line">  清理        : glibc-common-2.17-317.el7.x86_64                                                  11/11 </span><br><span class="line">  验证中      : mpfr-3.1.1-4.el7.x86_64                                                            1/11 </span><br><span class="line">  验证中      : glibc-devel-2.17-325.el7_9.x86_64                                                  2/11 </span><br><span class="line">  验证中      : gcc-4.8.5-44.el7.x86_64                                                            3/11 </span><br><span class="line">  验证中      : glibc-headers-2.17-325.el7_9.x86_64                                                4/11 </span><br><span class="line">  验证中      : kernel-headers-3.10.0-1160.49.1.el7.x86_64                                         5/11 </span><br><span class="line">  验证中      : libmpc-1.0.1-3.el7.x86_64                                                          6/11 </span><br><span class="line">  验证中      : glibc-common-2.17-325.el7_9.x86_64                                                 7/11 </span><br><span class="line">  验证中      : glibc-2.17-325.el7_9.x86_64                                                        8/11 </span><br><span class="line">  验证中      : cpp-4.8.5-44.el7.x86_64                                                            9/11 </span><br><span class="line">  验证中      : glibc-2.17-317.el7.x86_64                                                         10/11 </span><br><span class="line">  验证中      : glibc-common-2.17-317.el7.x86_64                                                  11/11 </span><br><span class="line"></span><br><span class="line">已安装:</span><br><span class="line">  gcc.x86_64 0:4.8.5-44.el7                                                                             </span><br><span class="line"></span><br><span class="line">作为依赖被安装:</span><br><span class="line">  cpp.x86_64 0:4.8.5-44.el7                       glibc-devel.x86_64 0:2.17-325.el7_9                   </span><br><span class="line">  glibc-headers.x86_64 0:2.17-325.el7_9           kernel-headers.x86_64 0:3.10.0-1160.49.1.el7          </span><br><span class="line">  libmpc.x86_64 0:1.0.1-3.el7                     mpfr.x86_64 0:3.1.1-4.el7                             </span><br><span class="line"></span><br><span class="line">作为依赖被升级:</span><br><span class="line">  glibc.x86_64 0:2.17-325.el7_9                   glibc-common.x86_64 0:2.17-325.el7_9                  </span><br><span class="line"></span><br><span class="line">完毕！</span><br></pre></td></tr></table></figure><h2 id="yum-y-update">yum -y update<a class="header-anchor" href="#yum-y-update">#</a></h2><blockquote><p>升级包名</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p><mark>注意!</mark> yum update 如果后不加包名,默认升级全部软件,包括Linux内核,可能会导致远程服务器无法正常运行.</p></li><li class="lvl-2"><p><mark>慎用</mark></p></li></ul><h2 id="yum-y-remove">yum -y remove<a class="header-anchor" href="#yum-y-remove">#</a></h2><ul class="lvl-0"><li class="lvl-2"><p><mark>注意</mark> yum remove 卸载软件将会自动卸载所依赖的所有软件!!!</p></li><li class="lvl-2"><p><mark>慎用</mark></p></li></ul><h2 id="yum-grouplist">yum grouplist<a class="header-anchor" href="#yum-grouplist">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示所有可用的软件包组</span></span><br><span class="line">[root@bogon ~]# yum grouplist</span><br><span class="line">已加载插件：fastestmirror</span><br><span class="line">没有安装组信息文件</span><br><span class="line">Maybe run: yum groups mark convert (see man yum)</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirrors.bupt.edu.cn</span><br><span class="line"> * extras: mirrors.bupt.edu.cn</span><br><span class="line"> * updates: mirrors.neusoft.edu.cn</span><br><span class="line">可用的环境分组：</span><br><span class="line">   最小安装</span><br><span class="line">   基础设施服务器</span><br><span class="line">   计算节点</span><br><span class="line">   文件及打印服务器</span><br><span class="line">   基本网页服务器</span><br><span class="line">   虚拟化主机</span><br><span class="line">   带 GUI 的服务器</span><br><span class="line">   GNOME 桌面</span><br><span class="line">   KDE Plasma Workspaces</span><br><span class="line">   开发及生成工作站</span><br><span class="line">可用组：</span><br><span class="line">   传统 UNIX 兼容性</span><br><span class="line">   兼容性程序库</span><br><span class="line">   图形管理工具</span><br><span class="line">   安全性工具</span><br><span class="line">   开发工具</span><br><span class="line">   控制台互联网工具</span><br><span class="line">   智能卡支持</span><br><span class="line">   科学记数法支持</span><br><span class="line">   系统管理</span><br><span class="line">   系统管理工具</span><br><span class="line">完成</span><br></pre></td></tr></table></figure><h2 id="以本地光盘作为yum源">以本地光盘作为yum源<a class="header-anchor" href="#以本地光盘作为yum源">#</a></h2><p>…</p><h2 id="RPM包默认安装位置">RPM包默认安装位置<a class="header-anchor" href="#RPM包默认安装位置">#</a></h2><p><img src="http://qiniu.yujing.fit/typora_img/image-20211226183626980.png" alt="image-20211226183626980"></p><blockquote><p>服务管理命令  <code>service 服务名 start</code>  启动服务</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>在默认安装位置寻找服务</p></li></ul><blockquote><p>源码安装</p></blockquote><ul class="lvl-0"><li class="lvl-2"><p>源代码保存位置 /usr/local/src/</p></li><li class="lvl-2"><p>软件安装位置 /usr/local/</p></li><li class="lvl-2"><p>安装报错条件:  二者缺一不可</p></li><li class="lvl-2"><ul class="lvl-2"><li class="lvl-5">安装停止</li><li class="lvl-5">出现error , no 等提示</li></ul></li></ul><p><code>make</code> 编译</p><p><code>make install</code> 编译安装</p><p>源码包卸载: 直接删除源码包安装所在目录即可</p><blockquote><p>脚本安装</p></blockquote><p>…</p><h1>用户(组)管理</h1><p><strong>Shell 是Linux默认命令解释器.</strong></p><ul class="lvl-0"><li class="lvl-2"><p>用户信息文件 /etc/passwd</p></li><li class="lvl-2"><p>影子文件 /etc/shadow</p></li><li class="lvl-2"><p>组信息文件 /etc/group</p></li><li class="lvl-2"><p>组密码文件 /etc/gshadow</p></li></ul><blockquote><p>字段说明</p></blockquote><p><code>root:x:0:0:root:/root:/bin/bash</code></p><ol><li class="lvl-3"><p>用户名</p></li><li class="lvl-3"><p>密码标识<code>x</code> 标示存在密码</p></li><li class="lvl-3"><p>数字标识UID</p></li></ol><blockquote><p><code>0</code> 超级用户</p><p><code>1~499</code> 系统用户(伪用户),不能登录,不能删除.</p><p><code>500~65535</code> 普通用户</p></blockquote><ol start="4"><li class="lvl-3"><p>用户初始组ID  --GID</p></li><li class="lvl-3"><p>用户说明(备注)</p></li><li class="lvl-3"><p>家目录–初始登录位置</p></li></ol><blockquote><p>普通用户: /home/用户名</p><p>超级用户: /root</p></blockquote><ol start="7"><li class="lvl-3"><p>shell默认命令解释器 /bin/bash</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">用户配置文件信息</span></span><br><span class="line">[root@bogon ~]# cat /etc/passwd</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">用户名:密码标志:数字标识:</span></span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line">sync:x:5:0:sync:/sbin:/bin/sync</span><br><span class="line">shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">halt:x:7:0:halt:/sbin:/sbin/halt</span><br><span class="line">mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">games:x:12:100:games:/usr/games:/sbin/nologin</span><br><span class="line">ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin</span><br><span class="line">nobody:x:99:99:Nobody:/:/sbin/nologin</span><br><span class="line">systemd-network:x:192:192:systemd Network Management:/:/sbin/nologin</span><br><span class="line">dbus:x:81:81:System message bus:/:/sbin/nologin</span><br><span class="line">polkitd:x:999:998:User for polkitd:/:/sbin/nologin</span><br><span class="line">sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin</span><br><span class="line">postfix:x:89:89::/var/spool/postfix:/sbin/nologin</span><br><span class="line">chrony:x:998:996::/var/lib/chrony:/sbin/nologin</span><br><span class="line">tiam_beta:x:1000:1000:Tiam_Beta:/home/tiam_beta:/bin/bash</span><br><span class="line">tiam:x:1001:1001::/home/tiam:/bin/bash</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看配置文件帮助</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">man passwd</span></span><br><span class="line">PASSWD(1)                                   User utilities                                  PASSWD(1)</span><br><span class="line"></span><br><span class="line">NAME</span><br><span class="line">       passwd - update user&#x27;s authentication tokens</span><br><span class="line"></span><br><span class="line">SYNOPSIS</span><br><span class="line">       passwd [-k] [-l] [-u [-f]] [-d] [-e] [-n mindays] [-x maxdays] [-w warndays] [-i inactivedays]</span><br><span class="line">       [-S] [--stdin] [username]</span><br><span class="line"></span><br><span class="line">DESCRIPTION</span><br><span class="line">       The passwd utility is used to update user&#x27;s authentication token(s).</span><br><span class="line"></span><br><span class="line">       This task is achieved through calls to the Linux-PAM and Libuser API.   Essentially,  it  ini‐</span><br><span class="line">       tializes  itself as a &quot;passwd&quot; service with Linux-PAM and utilizes configured password modules</span><br><span class="line">       to authenticate and then update a user&#x27;s password.</span><br><span class="line"></span><br><span class="line">       A simple entry in the global Linux-PAM configuration file for this service would be:</span><br><span class="line">......</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">无操作权限,密码存放地址,只有root用户可查看.</span></span><br><span class="line">[root@bogon etc]# ll /etc/shadow</span><br><span class="line">----------. 1 root root 839 12月 16 01:25 /etc/shadow</span><br><span class="line">[root@bogon etc]# ll /etc/passwd</span><br><span class="line">-rw-r--r--. 1 root root 943 12月 16 01:20 /etc/passwd</span><br></pre></td></tr></table></figure><blockquote><p>字段说明</p></blockquote><ol><li class="lvl-3"><p>用户名</p></li><li class="lvl-3"><p>SHA512散列加密算法  加密的密码</p></li></ol><p>​<code>!</code>或<code>*</code> 则不能登录</p><pre><code>3. 密码最后修改日期</code></pre><blockquote><p>1970年1月1日起 , 每过一天加 1</p></blockquote><ol start="4"><li class="lvl-3"><p>密码间隔 , 规定密码修改的时间间隔.单位天</p></li><li class="lvl-3"><p>密码生效时间, 则生效时间过后必须更改密码.</p></li><li class="lvl-3"><p>到期前警告时间.</p></li><li class="lvl-3"><p>密码到期之后的可延期时间.</p></li></ol><blockquote><p>0: 密码过期立即失效</p><p>-1:密码永不失效</p></blockquote><ol start="8"><li class="lvl-3"><p>账号失效时间 , 以时间戳表示.</p></li><li class="lvl-3"><p>保留</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon etc]# cat /etc/shadow</span><br><span class="line">root:$6$v39kajRiQ7R.ifft$KkJZJT.3M8ef6T/MB53GaCFcbNt3dsO17lkhNRhIrijOS1rKYI5x8Wkx7iBRkXpkyWQKKG6.s2.Y5fnbxiC7C/::0:99999:7:::</span><br><span class="line">bin:*:18353:0:99999:7:::</span><br><span class="line">daemon:*:18353:0:99999:7:::</span><br><span class="line">adm:*:18353:0:99999:7:::</span><br><span class="line">lp:*:18353:0:99999:7:::</span><br><span class="line">sync:*:18353:0:99999:7:::</span><br><span class="line">shutdown:*:18353:0:99999:7:::</span><br><span class="line">halt:*:18353:0:99999:7:::</span><br><span class="line">mail:*:18353:0:99999:7:::</span><br><span class="line">operator:*:18353:0:99999:7:::</span><br><span class="line">games:*:18353:0:99999:7:::</span><br><span class="line">ftp:*:18353:0:99999:7:::</span><br><span class="line">nobody:*:18353:0:99999:7:::</span><br><span class="line">systemd-network:!!:18968::::::</span><br><span class="line">dbus:!!:18968::::::</span><br><span class="line">polkitd:!!:18968::::::</span><br><span class="line">sshd:!!:18968::::::</span><br><span class="line">postfix:!!:18968::::::</span><br><span class="line">chrony:!!:18968::::::</span><br><span class="line">tiam_beta:$6$Bo705/gRY3GbW3Zo$v39G56h686s/bY0rvxlSvBHUV/nzAl40UNGlLbhgVGX1kLRsOUVKUobRlPo0gzlf9I/Jmnklyh/WGDg9HCniS/::0:99999:7:::</span><br><span class="line">tiam:$6$4UGm5os7$HK.tR.wNXG9LW.QYzbkCEqmRTHrJTzeKpAgEOqtnNfQba7qAZk55Y2jzT.lCK2cm0nq3ST.PyWB7cRNhXo/CU.:18976:0:99999:7:::</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">时间戳转换</span></span><br><span class="line">[root@bogon etc]# date -d &quot;1970-01-01 18968 days&quot;</span><br><span class="line">2021年 12月 07日 星期二 00:00:00 CST</span><br></pre></td></tr></table></figure><blockquote><p>group 组用户信息 ,字段说明</p></blockquote><ol><li class="lvl-3"><p>组名 默认以用户名相同</p></li><li class="lvl-3"><p>组密码标志</p></li><li class="lvl-3"><p>GID   唯一标识,索引</p></li><li class="lvl-3"><p>组中附加用户</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon etc]# cat /etc/group</span><br><span class="line">root:x:0:</span><br><span class="line">bin:x:1:</span><br><span class="line">daemon:x:2:</span><br><span class="line">sys:x:3:</span><br><span class="line">adm:x:4:</span><br><span class="line">tty:x:5:</span><br><span class="line">disk:x:6:</span><br><span class="line">lp:x:7:</span><br><span class="line">mem:x:8:</span><br><span class="line">kmem:x:9:</span><br><span class="line">wheel:x:10:</span><br><span class="line">cdrom:x:11:</span><br><span class="line">mail:x:12:postfix</span><br><span class="line">man:x:15:</span><br><span class="line">dialout:x:18:</span><br><span class="line">floppy:x:19:</span><br><span class="line">games:x:20:</span><br><span class="line">tape:x:33:</span><br><span class="line">video:x:39:</span><br><span class="line">ftp:x:50:</span><br><span class="line">lock:x:54:</span><br><span class="line">audio:x:63:</span><br><span class="line">nobody:x:99:</span><br><span class="line">users:x:100:</span><br><span class="line">utmp:x:22:</span><br><span class="line">utempter:x:35:</span><br><span class="line">input:x:999:</span><br><span class="line">systemd-journal:x:190:</span><br><span class="line">systemd-network:x:192:</span><br><span class="line">dbus:x:81:</span><br><span class="line">polkitd:x:998:</span><br><span class="line">ssh_keys:x:997:</span><br><span class="line">sshd:x:74:</span><br><span class="line">postdrop:x:90:</span><br><span class="line">postfix:x:89:</span><br><span class="line">chrony:x:996:</span><br><span class="line">tiam_beta:x:1000:tiam_beta</span><br><span class="line">tiam:x:1001:</span><br><span class="line">softwareclass:x:1002:</span><br></pre></td></tr></table></figure><blockquote><p>字段说明</p></blockquote><ol><li class="lvl-3"><p>组名</p></li><li class="lvl-3"><p>组密码</p></li><li class="lvl-3"><p>组管理员用户名</p></li><li class="lvl-3"><p>组中附加用户</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">[root@bogon etc]# cat /etc/gshadow</span><br><span class="line">root:::</span><br><span class="line">bin:::</span><br><span class="line">daemon:::</span><br><span class="line">sys:::</span><br><span class="line">adm:::</span><br><span class="line">tty:::</span><br><span class="line">disk:::</span><br><span class="line">lp:::</span><br><span class="line">mem:::</span><br><span class="line">kmem:::</span><br><span class="line">wheel:::</span><br><span class="line">cdrom:::</span><br><span class="line">mail:::postfix</span><br><span class="line">man:::</span><br><span class="line">dialout:::</span><br><span class="line">floppy:::</span><br><span class="line">games:::</span><br><span class="line">tape:::</span><br><span class="line">video:::</span><br><span class="line">ftp:::</span><br><span class="line">lock:::</span><br><span class="line">audio:::</span><br><span class="line">nobody:::</span><br><span class="line">users:::</span><br><span class="line">utmp:!::</span><br><span class="line">utempter:!::</span><br><span class="line">input:!::</span><br><span class="line">systemd-journal:!::</span><br><span class="line">systemd-network:!::</span><br><span class="line">dbus:!::</span><br><span class="line">polkitd:!::</span><br><span class="line">ssh_keys:!::</span><br><span class="line">sshd:!::</span><br><span class="line">postdrop:!::</span><br><span class="line">postfix:!::</span><br><span class="line">chrony:!::</span><br><span class="line">tiam_beta:!!::tiam_beta</span><br><span class="line">tiam:!::</span><br><span class="line">softwareclass:!::</span><br></pre></td></tr></table></figure><p>提示用户标识</p><blockquote><p><code>#</code> 提示为超级用户</p><p><code>$</code> 提示的为普通用户</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">用户默认邮箱位置</span></span><br><span class="line">[root@VM-0-9-centos ~]# cd /var/spool/mail</span><br><span class="line">[root@VM-0-9-centos mail]# ll</span><br><span class="line">总用量 116</span><br><span class="line">-rw-rw----  1 lighthouse mail      0 10月 23 02:40 lighthouse</span><br><span class="line">-rw-rw----  1 mysql      mail      0 10月 23 02:53 mysql</span><br><span class="line">-rw-rw----  1 redis      mail      0 11月  5 15:21 redis</span><br><span class="line">-rw-------  1 root       mail 109450 12月 26 20:01 root</span><br><span class="line">-rw-rw----. 1 rpc        mail      0 3月   7 2019 rpc</span><br><span class="line">-rw-rw----  1 springboot mail      0 10月 23 11:21 springboot</span><br><span class="line">-rw-rw----  1 tiam       mail    656 12月 22 20:33 tiam</span><br><span class="line">-rw-rw----  1 www        mail      0 10月 23 02:51 www</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加用户时 默认产生的文件--&gt;默认模板配置位置.</span></span><br><span class="line">[root@VM-0-9-centos mail]# cd /etc/skel</span><br></pre></td></tr></table></figure><h2 id="新年快乐">新年快乐<a class="header-anchor" href="#新年快乐">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">[root@iZbp1244h71ferqzghq7m4Z ~]# help</span><br><span class="line">GNU bash， 版本 4.2.46(2)-release (x86_64-redhat-linux-gnu)</span><br><span class="line">这些 shell 命令是内部定义的。请输入 `help&#x27; 以获取一个列表.</span><br><span class="line">输入 `help 名称&#x27; 以得到有关函数`名称&#x27;的更多信息.</span><br><span class="line">使用 `info bash&#x27; 来获得关于 shell 的更多一般性信息</span><br><span class="line">使用 `man -k&#x27; 或 `info&#x27; 来获取不在列表中的命令的更多信息.</span><br><span class="line"></span><br><span class="line">名称旁边的星号 (*) 意味着该命令被禁用.</span><br><span class="line"></span><br><span class="line"> job_spec [&amp;]                               history [-c] [-d 偏移量] [n] 或 his&gt;</span><br><span class="line"> (( 表达式 ))                            if 命令; then 命令; [ elif 命令; &gt;</span><br><span class="line"> . 文件名 [参数]                       jobs [-lnprs] [任务声明 ...] 或 jo&gt;</span><br><span class="line"> :                                          kill [-s 信号声明 | -n 信号编号&gt;</span><br><span class="line"> [ 参数... ]                              let 参数 [参数 ...]</span><br><span class="line"> [[ 表达式 ]]                            local [option] 名称[=值] ...</span><br><span class="line"> alias [-p] [名称[=值] ... ]             logout [n]</span><br><span class="line"> bg [任务声明 ...]                      mapfile [-n 计数] [-O 起始序号] [&gt;</span><br><span class="line"> bind [-lpvsPVS] [-m 键映射] [-f 文�&gt;  popd [-n] [+N | -N]</span><br><span class="line"> break [n]                                  printf [-v var] 格式 [参数]</span><br><span class="line"> builtin [shell 内嵌 [参数 ...]]        pushd [-n] [+N | -N | 目录]</span><br><span class="line"> caller [表达式]                         pwd [-LP]</span><br><span class="line"> case 词 in [模式 [| 模式]...) 命�&gt;  read [-ers] [-a 数组] [-d 分隔符] &gt;</span><br><span class="line"> cd [-L|[-P [-e]]] [dir]                    readarray [-n 计数] [-O 起始序号]&gt;</span><br><span class="line"> command [-pVv] 命令 [参数 ...]         readonly [-aAf] [name[=value] ...] or r&gt;</span><br><span class="line"> compgen [-abcdefgjksuv] [-o 选项]  [-A&gt;  return [n]</span><br><span class="line"> complete [-abcdefgjksuv] [-pr] [-DE] [-o&gt;  select NAME [in 词语 ... ;] do 命令&gt;</span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z ~]# date</span><br><span class="line">2022年 01月 02日 星期日 10:19:21 CST</span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z ~]# cal</span><br><span class="line">      一月 2022     </span><br><span class="line">日 一 二 三 四 五 六</span><br><span class="line">                   1</span><br><span class="line"> 2  3  4  5  6  7  8</span><br><span class="line"> 9 10 11 12 13 14 15</span><br><span class="line">16 17 18 19 20 21 22</span><br><span class="line">23 24 25 26 27 28 29</span><br><span class="line">30 31</span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z ~]# time</span><br><span class="line"></span><br><span class="line">real    0m0.000s</span><br><span class="line">user    0m0.000s</span><br><span class="line">sys     0m0.000s</span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z ~]# free</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:        3880180      302164     3270568        4344      307448     3354928</span><br><span class="line">Swap:             0           0           0</span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z ~]# df</span><br><span class="line">文件系统          1K-块    已用     可用 已用% 挂载点</span><br><span class="line">devtmpfs        1929540       0  1929540    0% /dev</span><br><span class="line">tmpfs           1940088       0  1940088    0% /dev/shm</span><br><span class="line">tmpfs           1940088     512  1939576    1% /run</span><br><span class="line">tmpfs           1940088       0  1940088    0% /sys/fs/cgroup</span><br><span class="line">/dev/vda1      41152812 7555752 31693352   20% /</span><br><span class="line">tmpfs            388020       0   388020    0% /run/user/0</span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z ~]# ls</span><br><span class="line">oneinstack  ReadMe</span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z ~]# file oneinstack/</span><br><span class="line">oneinstack/: directory</span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z ~]# less ReadMe </span><br></pre></td></tr></table></figure><h1>查看命令帮助</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">[root@iZbp1244h71ferqzghq7m4Z ~]# type rm</span><br><span class="line">rm 是 `rm -i&#x27; 的别名</span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z ~]# which rm</span><br><span class="line">alias rm=&#x27;rm -i&#x27;</span><br><span class="line">        /usr/bin/rm</span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z ~]# whatis rm</span><br><span class="line">rm (1)               - remove files or directories</span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z ~]# man rm</span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z ~]# info rm</span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z ~]# apropos rm</span><br><span class="line">usermod (8)          - 修改一个用户账户</span><br><span class="line">hashkit_murmur (3)   - libhashkit Documentation</span><br><span class="line">memrm (1)            - libmemcached Documentation</span><br><span class="line">zip_source_stat (3)  - get information about zip_source</span><br><span class="line">zip_stat (3)         - get information about file</span><br><span class="line">zip_stat_index (3)   - get information about file</span><br><span class="line">......</span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z ~]# rm --help</span><br><span class="line">用法：rm [选项]... 文件...</span><br><span class="line">Remove (unlink) the FILE(s).</span><br><span class="line"></span><br><span class="line">  -f, --force           ignore nonexistent files and arguments, never prompt</span><br><span class="line">  -i                    prompt before every removal</span><br><span class="line">  -I                    prompt once before removing more than three files, or</span><br><span class="line">                          when removing recursively; less intrusive than -i,</span><br><span class="line">                          while still giving protection against most mistakes</span><br><span class="line">      --interactive[=WHEN]  prompt according to WHEN: never, once (-I), or</span><br><span class="line">                          always (-i); without WHEN, prompt always</span><br><span class="line">      --one-file-system         递归删除一个层级时，跳过所有不符合命令行参</span><br><span class="line">                                数的文件系统上的文件</span><br><span class="line">      --no-preserve-root  do not treat &#x27;/&#x27; specially</span><br><span class="line">      --preserve-root   do not remove &#x27;/&#x27; (default)</span><br><span class="line">  -r, -R, --recursive   remove directories and their contents recursively</span><br><span class="line">  -d, --dir             remove empty directories</span><br><span class="line">  -v, --verbose         explain what is being done</span><br><span class="line">      --help            显示此帮助信息并退出</span><br><span class="line">      --version         显示版本信息并退出</span><br><span class="line"></span><br><span class="line">默认时，rm 不会删除目录。使用--recursive(-r 或-R)选项可删除每个给定</span><br><span class="line">的目录，以及其下所有的内容。</span><br><span class="line"></span><br><span class="line">To remove a file whose name starts with a &#x27;-&#x27;, for example &#x27;-foo&#x27;,</span><br><span class="line">use one of these commands:</span><br><span class="line">  rm -- -foo</span><br><span class="line"></span><br><span class="line">  rm ./-foo</span><br><span class="line"></span><br><span class="line">请注意，如果使用rm 来删除文件，通常仍可以将该文件恢复原状。如果想保证</span><br><span class="line">该文件的内容无法还原，请考虑使用shred。</span><br><span class="line"></span><br><span class="line">GNU coreutils online help: &lt;http://www.gnu.org/software/coreutils/&gt;</span><br><span class="line">请向&lt;http://translationproject.org/team/zh_CN.html&gt; 报告rm 的翻译错误</span><br><span class="line">要获取完整文档，请运行：info coreutils &#x27;rm invocation&#x27;</span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z ~]# help cd</span><br><span class="line">cd: cd [-L|[-P [-e]]] [dir]</span><br><span class="line">    Change the shell working directory.</span><br><span class="line">    </span><br><span class="line">    Change the current directory to DIR.  The default DIR is the value of the</span><br><span class="line">    HOME shell variable.</span><br><span class="line">    </span><br><span class="line">    The variable CDPATH defines the search path for the directory containing</span><br><span class="line">    DIR.  Alternative directory names in CDPATH are separated by a colon (:).</span><br><span class="line">    A null directory name is the same as the current directory.  If DIR begins</span><br><span class="line">    with a slash (/), then CDPATH is not used.</span><br><span class="line">    </span><br><span class="line">    If the directory is not found, and the shell option `cdable_vars&#x27; is set,</span><br><span class="line">    the word is assumed to be  a variable name.  If that variable has a value,</span><br><span class="line">    its value is used for DIR.</span><br><span class="line">    </span><br><span class="line">    Options:</span><br><span class="line">        -L      force symbolic links to be followed</span><br><span class="line">        -P      use the physical directory structure without following symbolic</span><br><span class="line">        links</span><br><span class="line">        -e      if the -P option is supplied, and the current working directory</span><br><span class="line">        cannot be determined successfully, exit with a non-zero status</span><br><span class="line">    </span><br><span class="line">    The default is to follow symbolic links, as if `-L&#x27; were specified.</span><br><span class="line">    </span><br><span class="line">    Exit Status:</span><br><span class="line">    Returns 0 if the directory is changed, and if $PWD is set successfully when</span><br><span class="line">    -P is used; non-zero otherwise.</span><br></pre></td></tr></table></figure><h1>创建命令alias</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@iZbp1244h71ferqzghq7m4Z ~]# alias foo=&#x27;cd /data;ll&#x27;</span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z ~]# foo</span><br><span class="line">总用量 12</span><br><span class="line">drwxr-xr-x 5 mysql mysql 4096 1月   2 10:11 mysql</span><br><span class="line">drwxr-xr-x 2 www   www   4096 8月  21 13:20 wwwlogs</span><br><span class="line">drwxr-xr-x 3 www   www   4096 8月  21 11:31 wwwroot</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查命令关键字是否被使用</span></span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z data]# type foo</span><br><span class="line">foo 是 `cd /data;ll&#x27; 的别名</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除别名</span></span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z data]# unalias foo</span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z data]# type foo</span><br><span class="line">-bash: type: foo: 未找到</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看系统内建命令别名</span></span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z data]# alias</span><br><span class="line">alias acme.sh=&#x27;/root/.acme.sh/acme.sh&#x27;</span><br><span class="line">alias cp=&#x27;cp -i&#x27;</span><br><span class="line">alias egrep=&#x27;egrep --color&#x27;</span><br><span class="line">alias fgrep=&#x27;fgrep --color&#x27;</span><br><span class="line">alias grep=&#x27;grep --color&#x27;</span><br><span class="line">alias l=&#x27;ls -AFhlt&#x27;</span><br><span class="line">alias l.=&#x27;ls -d .* --color=auto&#x27;</span><br><span class="line">alias lh=&#x27;l | head&#x27;</span><br><span class="line">alias ll=&#x27;ls -l --color=auto&#x27;</span><br><span class="line">alias ls=&#x27;ls --color=auto&#x27;</span><br><span class="line">alias mv=&#x27;mv -i&#x27;</span><br><span class="line">alias rm=&#x27;rm -i&#x27;</span><br><span class="line">alias vi=&#x27;vim&#x27;</span><br><span class="line">alias which=&#x27;alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde&#x27;</span><br></pre></td></tr></table></figure><h2 id="输出存入">输出存入<a class="header-anchor" href="#输出存入">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将<span class="built_in">alias</span>命令的输出内容存入 output.txt 的文件中.</span></span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z data]# alias &gt; output.txt</span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z data]# ls</span><br><span class="line">mysql  output.txt  wwwlogs  wwwroot</span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z data]# cat output.txt </span><br><span class="line">alias acme.sh=&#x27;/root/.acme.sh/acme.sh&#x27;</span><br><span class="line">alias cp=&#x27;cp -i&#x27;</span><br><span class="line">alias egrep=&#x27;egrep --color&#x27;</span><br><span class="line">alias fgrep=&#x27;fgrep --color&#x27;</span><br><span class="line">alias grep=&#x27;grep --color&#x27;</span><br><span class="line">alias l=&#x27;ls -AFhlt&#x27;</span><br><span class="line">alias l.=&#x27;ls -d .* --color=auto&#x27;</span><br><span class="line">alias lh=&#x27;l | head&#x27;</span><br><span class="line">alias ll=&#x27;ls -l --color=auto&#x27;</span><br><span class="line">alias ls=&#x27;ls --color=auto&#x27;</span><br><span class="line">alias mv=&#x27;mv -i&#x27;</span><br><span class="line">alias rm=&#x27;rm -i&#x27;</span><br><span class="line">alias vi=&#x27;vim&#x27;</span><br><span class="line">alias which=&#x27;alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde&#x27;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">以追加的方式添加到文件中, &gt; 一个将会覆盖.</span></span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z data]# whatis rm &gt;&gt; output.txt </span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z data]# cat output.txt </span><br><span class="line">alias acme.sh=&#x27;/root/.acme.sh/acme.sh&#x27;</span><br><span class="line">alias cp=&#x27;cp -i&#x27;</span><br><span class="line">alias egrep=&#x27;egrep --color&#x27;</span><br><span class="line">alias fgrep=&#x27;fgrep --color&#x27;</span><br><span class="line">alias grep=&#x27;grep --color&#x27;</span><br><span class="line">alias l=&#x27;ls -AFhlt&#x27;</span><br><span class="line">alias l.=&#x27;ls -d .* --color=auto&#x27;</span><br><span class="line">alias lh=&#x27;l | head&#x27;</span><br><span class="line">alias ll=&#x27;ls -l --color=auto&#x27;</span><br><span class="line">alias ls=&#x27;ls --color=auto&#x27;</span><br><span class="line">alias mv=&#x27;mv -i&#x27;</span><br><span class="line">alias rm=&#x27;rm -i&#x27;</span><br><span class="line">alias vi=&#x27;vim&#x27;</span><br><span class="line">alias which=&#x27;alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde&#x27;</span><br><span class="line">rm (1)               - remove files or directories</span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z data]# whatis rm</span><br><span class="line">rm (1)               - remove files or directories</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@iZbp1244h71ferqzghq7m4Z data]# lsas</span><br><span class="line">-bash: lsas: 未找到命令</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将错误信息追加到文件后.</span></span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z data]# lsas &amp;&gt;&gt; output.txt </span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z data]# cat output.txt </span><br><span class="line">alias acme.sh=&#x27;/root/.acme.sh/acme.sh&#x27;</span><br><span class="line">alias cp=&#x27;cp -i&#x27;</span><br><span class="line">alias egrep=&#x27;egrep --color&#x27;</span><br><span class="line">alias fgrep=&#x27;fgrep --color&#x27;</span><br><span class="line">alias grep=&#x27;grep --color&#x27;</span><br><span class="line">alias l=&#x27;ls -AFhlt&#x27;</span><br><span class="line">alias l.=&#x27;ls -d .* --color=auto&#x27;</span><br><span class="line">alias lh=&#x27;l | head&#x27;</span><br><span class="line">alias ll=&#x27;ls -l --color=auto&#x27;</span><br><span class="line">alias ls=&#x27;ls --color=auto&#x27;</span><br><span class="line">alias mv=&#x27;mv -i&#x27;</span><br><span class="line">alias rm=&#x27;rm -i&#x27;</span><br><span class="line">alias vi=&#x27;vim&#x27;</span><br><span class="line">alias which=&#x27;alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde&#x27;</span><br><span class="line">rm (1)               - remove files or directories</span><br><span class="line">-bash: lsas: 未找到命令</span><br></pre></td></tr></table></figure><h2 id="stat">stat<a class="header-anchor" href="#stat">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@iZbp1244h71ferqzghq7m4Z data]# stat output.txt </span><br><span class="line">  文件：&quot;output.txt&quot;</span><br><span class="line">  大小：482             块：8          IO 块：4096   普通文件</span><br><span class="line">设备：fd01h/64769d      Inode：524589      硬链接：1</span><br><span class="line">权限：(0644/-rw-r--r--)  Uid：(    0/    root)   Gid：(    0/    root)</span><br><span class="line">最近访问：2022-01-02 11:45:49.604338061 +0800</span><br><span class="line">最近更改：2022-01-02 11:45:42.309277245 +0800</span><br><span class="line">最近改动：2022-01-02 11:45:42.309277245 +0800</span><br><span class="line">创建时间：-</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">特殊文件.</span></span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z data]# stat /dev/null</span><br><span class="line">  文件：&quot;/dev/null&quot;</span><br><span class="line">  大小：0               块：0          IO 块：4096   字符特殊文件</span><br><span class="line">设备：5h/5d     Inode：1042        硬链接：1     设备类型：1,3</span><br><span class="line">权限：(0666/crw-rw-rw-)  Uid：(    0/    root)   Gid：(    0/    root)</span><br><span class="line">最近访问：2022-01-02 10:11:08.052112934 +0800</span><br><span class="line">最近更改：2022-01-02 10:11:08.052112934 +0800</span><br><span class="line">最近改动：2022-01-02 10:11:08.052112934 +0800</span><br><span class="line">创建时间：-</span><br></pre></td></tr></table></figure><h2 id="cat">cat<a class="header-anchor" href="#cat">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@iZbp1244h71ferqzghq7m4Z data]# cat</span><br><span class="line">nihao , hello worldnihao , hello world[root@iZbp1244h71ferqzghq7m4Z data]# </span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z data]# </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将文本写入 testcat.txt文件中.  Ctrl+D 停止输入.</span></span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z data]# cat &gt; testcat.txt</span><br><span class="line">nigedashabi , hello world ,ruguo,nizai ,youyiho </span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z data]# cat testcat.txt </span><br><span class="line">nigedashabi , hello world ,ruguo,nizai ,youyiho </span><br></pre></td></tr></table></figure><h2 id="wc">wc<a class="header-anchor" href="#wc">#</a></h2><blockquote><p>word count , 统计文件中换行符,单词,以及字节的数量.</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@iZbp1244h71ferqzghq7m4Z data]# wc output.txt </span><br><span class="line"> 16  59 482 output.txt</span><br></pre></td></tr></table></figure><h2 id="echo妙用">echo妙用<a class="header-anchor" href="#echo妙用">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@iZbp1244h71ferqzghq7m4Z data]# echo *</span><br><span class="line">mysql output.txt testcat.txt wwwlogs wwwroot</span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z data]# ls</span><br><span class="line">mysql  output.txt  testcat.txt  wwwlogs  wwwroot</span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z data]# pwd</span><br><span class="line">/data</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">筛选文件.</span></span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z data]# echo www*</span><br><span class="line">wwwlogs wwwroot</span><br><span class="line">[tiam@iZbp1244h71ferqzghq7m4Z ~]$ echo ~tiam</span><br><span class="line">/home/tiam</span><br></pre></td></tr></table></figure><h2 id="登录环境切换">登录环境切换<a class="header-anchor" href="#登录环境切换">#</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[tiam@iZbp1244h71ferqzghq7m4Z ~]$ exit</span><br><span class="line">exit</span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z home]# su tiam</span><br><span class="line">[tiam@iZbp1244h71ferqzghq7m4Z home]$ exit</span><br><span class="line">exit</span><br><span class="line">[root@iZbp1244h71ferqzghq7m4Z home]# </span><br></pre></td></tr></table></figure><h2 id="set">set<a class="header-anchor" href="#set">#</a></h2><h2 id="printenv">printenv<a class="header-anchor" href="#printenv">#</a></h2><p>查看环境变量</p>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>application.yaml配置</title>
      <link href="/artical/d96f0873.html"/>
      <url>/artical/d96f0873.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Pet</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String type;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"><span class="comment">//setter方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span>  <span class="comment">//注入spring的bean中</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;user&quot;)</span></span><br><span class="line"><span class="comment">//在配置文件中,将以user开头的属性注入</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;  <span class="comment">//基本数据类型 int</span></span><br><span class="line">    <span class="keyword">private</span> String username;  <span class="comment">//基本数据类型 String</span></span><br><span class="line">    <span class="keyword">private</span> String password;  </span><br><span class="line">    <span class="keyword">private</span> List hobby;  <span class="comment">//集合</span></span><br><span class="line">    <span class="keyword">private</span> String\[\] song;  <span class="comment">//数组</span></span><br><span class="line">    <span class="keyword">private</span> Map map;  <span class="comment">//Map对象</span></span><br><span class="line">    <span class="keyword">private</span> Pet pet;  <span class="comment">//POJO对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//setter方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>application.yeal <strong>注意!冒号后有个空格!!!</strong> application.properties 比 application.yeal优先级高</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">user:</span></span><br><span class="line">  <span class="attr">id:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">linda</span></span><br><span class="line">  <span class="attr">password:</span> <span class="number">123</span></span><br><span class="line">  <span class="attr">hobby:</span> <span class="string">\[footboll,basketboll\]</span></span><br><span class="line">  <span class="attr">song:</span> <span class="string">\[she,where\]</span></span><br><span class="line">  <span class="attr">map:</span> &#123;<span class="attr">k1:</span> <span class="string">v1</span>,<span class="attr">k2:</span> <span class="string">v2</span>&#125;</span><br><span class="line">  <span class="attr">pet:</span> &#123;<span class="attr">type:</span> <span class="string">cat</span>,<span class="attr">age:</span> <span class="number">12</span>&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">测试类</span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Tests01</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> User user;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test01</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> spring boot </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>springboot模拟登录</title>
      <link href="/artical/e35ee2ef.html"/>
      <url>/artical/e35ee2ef.html</url>
      
        <content type="html"><![CDATA[<p>一个简单的登录判断功能，成功跳转到主页面，显示用户表，否则跳回登录页。如直接访问主页，想跳过登录页，会判断session是否存在用户，有则进入主页面,没有则不显示页面,显示空白。</p><h2 id="功能大致展示">功能大致展示:<a class="header-anchor" href="#功能大致展示">#</a></h2><h2 id="xmvc01数据库user表">xmvc01数据库user表<a class="header-anchor" href="#xmvc01数据库user表">#</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">SQLyog Ultimate v12.08 (64 bit)</span></span><br><span class="line"><span class="comment">MySQL - 5.5.12 </span></span><br><span class="line"><span class="comment">*********************************************************************</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*!40101 SET NAMES utf8 */</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `<span class="keyword">user</span>` (</span><br><span class="line">`id` <span class="type">varchar</span> (<span class="number">96</span>),</span><br><span class="line">`userName` <span class="type">varchar</span> (<span class="number">300</span>),</span><br><span class="line">`password` <span class="type">varchar</span> (<span class="number">300</span>)</span><br><span class="line">); </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `<span class="keyword">user</span>` (`id`, `userName`, `password`) <span class="keyword">values</span>(<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;admin&#x27;</span>,<span class="string">&#x27;123&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `<span class="keyword">user</span>` (`id`, `userName`, `password`) <span class="keyword">values</span>(<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;321&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="目录结构">目录结构<a class="header-anchor" href="#目录结构">#</a></h2><p><img src="http://yujing.fit/wp-content/uploads/2021/09/%E5%9B%BE%E7%89%87-69.png" alt=""></p><h2 id="登录表单">登录表单<a class="header-anchor" href="#登录表单">#</a></h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/login&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>  &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;userName&quot;</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">label</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">name</span>=<span class="string">&quot;userName&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;password&quot;</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">class</span>=<span class="string">&quot;form-control&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">value</span>=<span class="string">&quot;&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-inline text-right&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-primary&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default&quot;</span> <span class="attr">focus</span>&gt;</span>重置<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="用户列表">用户列表<a class="header-anchor" href="#用户列表">#</a></h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;panel-heading&quot;</span>&gt;</span>用户列表<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;table table-bordered table-hover text-center&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>用户名称<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>用户密码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">var</span>=<span class="string">&quot;u&quot;</span> <span class="attr">items</span>=<span class="string">&quot;$&#123;userList&#125;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;u.userName &#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">td</span>&gt;</span>$&#123;u.password &#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>请看注释</p><h2 id="LoginController-java">LoginController.java<a class="header-anchor" href="#LoginController-java">#</a></h2><p><img src="http://yujing.fit/wp-content/uploads/2021/09/%E5%9B%BE%E7%89%87-70.png" alt=""></p><h2 id="userService-java">userService.java<a class="header-anchor" href="#userService-java">#</a></h2><p><img src="http://yujing.fit/wp-content/uploads/2021/09/%E5%9B%BE%E7%89%87-72.png" alt=""></p><h2 id="userServiceImpl-java">userServiceImpl.java<a class="header-anchor" href="#userServiceImpl-java">#</a></h2><p><img src="http://yujing.fit/wp-content/uploads/2021/09/%E5%9B%BE%E7%89%87-73-1024x787.png" alt=""></p><h2 id="userMapper-java">userMapper.java<a class="header-anchor" href="#userMapper-java">#</a></h2><p><img src="http://yujing.fit/wp-content/uploads/2021/09/%E5%9B%BE%E7%89%87-74.png" alt=""></p><h2 id="userMapper-xml">userMapper.xml<a class="header-anchor" href="#userMapper-xml">#</a></h2><p><img src="http://yujing.fit/wp-content/uploads/2021/09/%E5%9B%BE%E7%89%87-75-1024x287.png" alt=""></p><h2 id="userController-java">userController.java<a class="header-anchor" href="#userController-java">#</a></h2><p><img src="http://yujing.fit/wp-content/uploads/2021/09/%E5%9B%BE%E7%89%87-77-1024x548.png" alt=""></p><h2 id="点击查看源码">点击查看源<a href="https://wws.lanzoui.com/iu4KDujm55g">码</a><a class="header-anchor" href="#点击查看源码">#</a></h2>]]></content>
      
      
      <categories>
          
          <category> spring boot </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>关于跨域问题</title>
      <link href="/artical/bdf2fa.html"/>
      <url>/artical/bdf2fa.html</url>
      
        <content type="html"><![CDATA[<p>嗯…最近找到个好玩的API，可以随机生成一个数独游戏谜题，刚好最近数独也玩得比较多，就想借这个试试能不能自己做一个玩玩，ran后第一步就死了，获取不到接口数据。</p><p>接口在聚合数据上找的，是免费的，应该可以用的。接口地址及说明：</p><p><a href="http://apis.juhe.cn/fapig/sudoku/generate?difficulty=normal&amp;key=34f37a2e3ebb4b7133b54264a44c6596">http://apis.juhe.cn/fapig/sudoku/generate?key=34f37a2e3ebb4b7133b54264a44c6596&amp;difficulty=normal</a></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>WX小程序--音乐播放器</title>
      <link href="/artical/ed803555.html"/>
      <url>/artical/ed803555.html</url>
      
        <content type="html"><![CDATA[<p>从最开始了解微信小程序到萌生想法想自己做一个发布到自己的公众号，中间还是隔了蛮久，近几天突然有了想法做什么了，今天却因为个人小程序的原因审核不通过，可气。</p><p>最开始也是一点也不了解，甚至小程序用什么语言写的也不知道。萌生了想法就去找<a href="https://developers.weixin.qq.com/miniprogram/dev/framework/quickstart/">官方文档</a>查看，寥寥草草的差不多看了一晚上，知道了小程序的文件结构以及所需的编程语言，主要编程语言是JavaScript，好在JavaScript有学过一点，至少还有点基础。还有新的语言，WXML和WXSS，不过呢WXML和HTML极为相似，WXSS和CSS极为相似，正好HTML和CSS都学过一点，还记得一点基本语法。也不算新的东西。还有个配置文件的JSON格式，虽不是编程语言，也没有学过，可是之前几次做项目却用过几次，大概还记得怎么用。就这样，觉得自己应该可以做出来，第二天就开始新建项目做了。</p><p>当然过程中会遇到很多很多的困难，只能一步一步慢慢解决，慢慢来了。</p><p>实践的时候，总觉得没有之前那么逻辑顺畅，而且有了之前的经验应该会该快更好才对。上学期用Vue映入API接口做了个网页的音乐播放器，然后又用uni-app做了个表格的增删改查。虽不一样，却有很多类似的地方可以借鉴。比如：页面间传递数据、将API获取到的数据渲染到页面上等等。</p><p>虽现在还没有做得很好，但是音乐播放的基本功能还是实现了，页面样式还没有写，丑得一批，可惜没有设计的头脑，目前的想法只有借鉴其他音乐播放器的样式排版了（虽然不一定能做得出来哈哈）。</p><p>好了，记录一下到完成到现在的功能的思路及实现。（目前2021/9/18）</p><hr><hr><p>先是音乐资源，刚好可以借用到上次Vue音乐播放器用的<a href="https://autumnfish.cn">网易云API</a>，然后优先要实现最主要的基本功能，功能太少无实际作用，太多难以实现又复杂。那么初步定义的功能有什么呢？那必定要实现查询功能了，想听什么都可以查寻到，再是能让查询到歌曲能够播放出来（有声就行）。哈，就两个功能，感觉挺简单。</p><p>创建一个小程序的新项目，有一个默认的首页，就默认当作首页了，添加一个按钮，点击进入首页，就是搜索页面，输入搜索，将查询到的歌曲渲染到页面，点击歌曲进入播放页面，播放歌曲。</p><h3 id="注册页面">注册页面<a class="header-anchor" href="#注册页面">#</a></h3><p>所以需要在配置文件app.json中注册两个层级的页面，一个显示歌曲列表music，一个显示播放界面player。</p><p><img src="http://yujing.fit/wp-content/uploads/2021/09/%E5%9B%BE%E7%89%87-58.png" alt=""></p><p><img src="http://yujing.fit/wp-content/uploads/2021/09/%E5%9B%BE%E7%89%87-57.png" alt=""></p><p><img src="http://yujing.fit/wp-content/uploads/2021/09/%E5%9B%BE%E7%89%87-59.png" alt=""></p><h3 id="页面跳转">页面跳转<a class="header-anchor" href="#页面跳转">#</a></h3><p>在首页wxml添加一个按钮,在JS文件绑定点击事件,跳转页面.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bindtap=&quot;bindViewMusic&quot;  //绑定函数</span><br></pre></td></tr></table></figure><p>页面跳转: <strong>wx.navigateTo</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wx.<span class="title function_">navigateTo</span>(&#123;</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;../music/music&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="music界面">music界面<a class="header-anchor" href="#music界面">#</a></h2><h3 id="实时显示搜索结果">实时显示搜索结果<a class="header-anchor" href="#实时显示搜索结果">#</a></h3><p>就是能够实现每输入一个字就能显示对应的结果,而不是必须全部输入完,点击搜索才进行搜索。那么搜索按钮也省去了没什么用，一个输入框就够了。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;search-input&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;10&quot;</span> <span class="attr">bindinput</span>=<span class="string">&quot;bindKeyInput&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入你想要听的歌曲&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p><strong>bindinput</strong> ， 编辑器内容改变时触发 ，调用bindKeyInput函数，即每次输入都会触发。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">bindKeyInput</span>:<span class="keyword">function</span>(<span class="params">e</span>) &#123;        </span><br><span class="line">      <span class="keyword">var</span> that =<span class="variable language_">this</span>;</span><br><span class="line">      wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&#x27;https://autumnfish.cn/search?keywords=&#x27;</span> + e.<span class="property">detail</span>.<span class="property">value</span>,</span><br><span class="line">        <span class="title function_">success</span>(<span class="params">res</span>) &#123;</span><br><span class="line">          that.<span class="title function_">setData</span>(&#123;</span><br><span class="line">             <span class="attr">objectArray</span>: res.<span class="property">data</span>.<span class="property">result</span>.<span class="property">songs</span> <span class="comment">//将查询到的数据实时渲染到列表中</span></span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><a href="https://developers.weixin.qq.com/miniprogram/dev/api/network/request/wx.request.html"><strong>wx.request</strong></a> ，发起 HTTPS 网络请求。调用API接口。</p><p>调用成功后将查询到的数组数据存储到 objectArray ，然后通过wx:for，列表渲染到界面上。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;view id=&quot;&#123;&#123;item.id&#125;&#125;&quot; bindtap=&quot;playerView&quot; wx:for=&quot;&#123;&#123;objectArray&#125;&#125;&quot; &gt;&#123;&#123;index+1&#125;&#125;、&#123;&#123;item.name&#125;&#125;--&#123;&#123;item.artists[0].name&#125;&#125; &lt;/view&gt;</span><br></pre></td></tr></table></figure><p>在组件上使用 <strong>wx:for</strong> 控制属性绑定一个数组，即可使用数组中各项的数据重复渲染该组件。默认数组的当前项的下标变量名默认为 index，数组当前项的变量名默认为 item。</p><p>可先通过控制台将接受数据打印出来，查看数据形式。比如搜索“天下”，如下：</p><p><img src="http://yujing.fit/wp-content/uploads/2021/09/%E5%9B%BE%E7%89%87-60.png" alt=""></p><h2 id="player界面">player界面<a class="header-anchor" href="#player界面">#</a></h2><h3 id="页面数据传递">页面数据传递<a class="header-anchor" href="#页面数据传递">#</a></h3><p>下一步为渲染到页面的歌曲列表绑定事件，使其点击能被跳转到播放页面，播放歌曲。</p><p>每一首歌都不同，怎么确定播放的点击那首呢？那就需要点击跳转时，还需要将当前点击的歌曲唯一Id，传入到下一个界面。然后通过Id获取到歌曲的播放地址url和歌曲名、歌手名等相关信息。在页面播放歌曲，并渲染出歌曲的相关信息。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//跳转播放页面,带当前歌曲id传入下个页面</span></span><br><span class="line">    <span class="title function_">playerView</span>(<span class="params">e</span>)&#123;</span><br><span class="line">      wx.<span class="title function_">setStorageSync</span>(<span class="string">&#x27;id&#x27;</span>, e.<span class="property">currentTarget</span>.<span class="property">id</span>)</span><br><span class="line">      <span class="keyword">var</span> id = wx.<span class="title function_">getStorageSync</span>(<span class="string">&#x27;id&#x27;</span>);</span><br><span class="line">      wx.<span class="title function_">navigateTo</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&#x27;../player/player?id=&#x27;</span>+id</span><br><span class="line">      &#125;)</span><br><span class="line">     &#125;  </span><br></pre></td></tr></table></figure><p><strong>wx.setStorageSync(string key, any data)</strong></p><h3 id="播放歌曲">播放歌曲<a class="header-anchor" href="#播放歌曲">#</a></h3><p>在player界面接收到Id后，调用API接收到歌曲的相关信息。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">onLoad</span>: <span class="keyword">function</span> (<span class="params">option</span>) &#123; </span><br><span class="line">    <span class="keyword">var</span> that =<span class="variable language_">this</span>;</span><br><span class="line">    wx.<span class="title function_">request</span>(&#123; </span><br><span class="line">      <span class="attr">url</span>: <span class="string">&#x27;https://autumnfish.cn/song/url?id=&#x27;</span> + option.<span class="property">id</span>, <span class="comment">//根据id获取歌曲</span></span><br><span class="line">      <span class="title function_">success</span>(<span class="params">res</span>) &#123;</span><br><span class="line">        <span class="comment">//console.log(option.id) //得到当前点击歌曲id</span></span><br><span class="line">        <span class="comment">//console.log(res.data.data); //获取当前歌曲信息</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">data</span>.<span class="property">data</span>[<span class="number">0</span>].<span class="property">url</span>)</span><br><span class="line">        that.<span class="title function_">setData</span>(&#123;</span><br><span class="line">          <span class="attr">musicUrl</span>: res.<span class="property">data</span>.<span class="property">data</span>[<span class="number">0</span>].<span class="property">url</span>     <span class="comment">//获取歌曲播放地址  </span></span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">///////留白,插入下片代码</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接口地址不一样,所以会调用两次。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">  wx.<span class="title function_">request</span>(&#123; </span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;https://autumnfish.cn/search?keywords=&#x27;</span> + option.<span class="property">id</span>, <span class="comment">//根据id获取歌曲</span></span><br><span class="line">  <span class="title function_">success</span>(<span class="params">res</span>) &#123;</span><br><span class="line">    that.<span class="title function_">setData</span>(&#123;</span><br><span class="line">      <span class="attr">imgSrc</span>: res.<span class="property">data</span>.<span class="property">result</span>.<span class="property">songs</span>[<span class="number">0</span>].<span class="property">artists</span>[<span class="number">0</span>].<span class="property">img1v1Url</span>,  <span class="comment">//获取专辑封面</span></span><br><span class="line">      <span class="attr">author</span>: res.<span class="property">data</span>.<span class="property">result</span>.<span class="property">songs</span>[<span class="number">0</span>].<span class="property">artists</span>[<span class="number">0</span>].<span class="property">name</span>,  <span class="comment">//获取歌手名</span></span><br><span class="line">      <span class="attr">musicName</span>: res.<span class="property">data</span>.<span class="property">result</span>.<span class="property">songs</span>[<span class="number">0</span>].<span class="property">name</span>   <span class="comment">//获取歌曲名</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>默认控件上的作者名字，如果 controls 属性值为 false 则设置 author 无效</p><p>主要是觉得这个要简单一点，那个不知道怎么用。也懒得去研究研究，这个也够用了。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">poster</span>=<span class="string">&quot;&#123;&#123;imgSrc&#125;&#125;&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&#123;&#123;musicName&#125;&#125;&quot;</span> <span class="attr">author</span>=<span class="string">&quot;&#123;&#123;author&#125;&#125;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123;musicUrl&#125;&#125;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;myAudio&quot;</span> <span class="attr">controls</span> <span class="attr">loop</span> <span class="attr">bindplay</span>=<span class="string">&quot;funplay&quot;</span> <span class="attr">bindpause</span>=<span class="string">&quot;funpause&quot;</span> <span class="attr">binderror</span>=<span class="string">&quot;funerror&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将API接收到的数据，通过<strong>数据绑定</strong>到音频组件上。</p><p>基本功能实现完成。代码还有很多冗杂，不过至少能跑，管它什么轮子。</p><h3 id="点击查看效果演示视频"><a href="https://wwr.lanzoui.com/iMByUu7sk8d">点击查看效果演示视频</a><a class="header-anchor" href="#点击查看效果演示视频">#</a></h3><p>2021-9-19-10:48</p>]]></content>
      
      
      <categories>
          
          <category> 小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wx小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis</title>
      <link href="/artical/1bff3c65.html"/>
      <url>/artical/1bff3c65.html</url>
      
        <content type="html"><![CDATA[<p>以Maven方式创建文件</p><h2 id="1-搭建目录结构-如下">1 搭建目录结构,如下:<a class="header-anchor" href="#1-搭建目录结构-如下">#</a></h2><p><img src="http://47.101.172.219/wp-content/uploads/2021/09/%E5%9B%BE%E7%89%87-50.png" alt=""></p><h2 id="2-引入数据库Customer表">2 引入数据库Customer表<a class="header-anchor" href="#2-引入数据库Customer表">#</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE mybatis; </span><br><span class="line">USE mybatis; </span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `t_customer` (</span><br><span class="line">`id` <span class="type">int</span> (<span class="number">32</span>),</span><br><span class="line">`username` <span class="type">varchar</span> (<span class="number">150</span>),</span><br><span class="line">`jobs` <span class="type">varchar</span> (<span class="number">150</span>),</span><br><span class="line">`phone` <span class="type">varchar</span> (<span class="number">48</span>)</span><br><span class="line">); </span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `t_customer` (`id`, `username`, `jobs`, `phone`) <span class="keyword">values</span>(<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;joy&#x27;</span>,<span class="string">&#x27;doctor&#x27;</span>,<span class="string">&#x27;13745874578&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `t_customer` (`id`, `username`, `jobs`, `phone`) <span class="keyword">values</span>(<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;jack&#x27;</span>,<span class="string">&#x27;doctor&#x27;</span>,<span class="string">&#x27;17623194363&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `t_customer` (`id`, `username`, `jobs`, `phone`) <span class="keyword">values</span>(<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;qqq&#x27;</span>,<span class="string">&#x27;programmer&#x27;</span>,<span class="string">&#x27;13311111111&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="3-在pom-xml文件中导入所需的MyBatis依赖包">3 在pom.xml文件中导入所需的MyBatis依赖包<a class="header-anchor" href="#3-在pom-xml文件中导入所需的MyBatis依赖包">#</a></h2><p>配置后会自动下载导入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mybatis所需的jar包--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>asm<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>asm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cglib<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cglib<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.javassist<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javassist<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.17.1-GA<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-MyBatis-config-xml">4 MyBatis-config.xml<a class="header-anchor" href="#4-MyBatis-config-xml">#</a></h2><p>连接数据库,配置Mapper的位置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;mysql&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;mysql&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatis&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;mapper/CustomerMapper.xml&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-映射文件-CustomerMapper-xml">5 映射文件 CustomerMapper.xml<a class="header-anchor" href="#5-映射文件-CustomerMapper-xml">#</a></h2><p>创建所需的SQL语句</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;mapper.CustomerMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findCustomerById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Integer&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">resultType</span>=<span class="string">&quot;com.example.po.Customer&quot;</span>&gt;</span></span><br><span class="line">select * from t_customer where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findCustomerByName&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;String&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">resultType</span>=<span class="string">&quot;com.example.po.Customer&quot;</span>&gt;</span></span><br><span class="line">        select * from t_customer where username like &#x27;%$&#123;value&#125;%&#x27;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addCustomer&quot;</span>  <span class="attr">parameterType</span>=<span class="string">&quot;com.example.po.Customer&quot;</span>&gt;</span></span><br><span class="line">        insert into t_customer(username,jobs,phone)</span><br><span class="line">        values(#&#123;username&#125;,#&#123;jobs&#125;,#&#123;phone&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateCustomer&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.example.po.Customer&quot;</span>&gt;</span></span><br><span class="line">       update t_customer set</span><br><span class="line">       username=#&#123;username&#125;,jobs=#&#123;jobs&#125;,phone=#&#123;phone&#125;</span><br><span class="line">       where id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteCustomer&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Integer&quot;</span>&gt;</span></span><br><span class="line">       delete from t_customer where id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6-创建Customer表的持久化类">6 创建Customer表的持久化类<a class="header-anchor" href="#6-创建Customer表的持久化类">#</a></h2><p>快捷生成getter and setter方法 和 to String()方法,略.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Integer id;</span><br><span class="line"><span class="keyword">private</span> String username;</span><br><span class="line"><span class="keyword">private</span> String jobs;</span><br><span class="line"><span class="keyword">private</span> String phone;</span><br></pre></td></tr></table></figure><h2 id="7-导入日志文件log4j-properties">7 导入日志文件log4j.properties<a class="header-anchor" href="#7-导入日志文件log4j-properties">#</a></h2><p>输出日志信息,在控制台查看SQL语句</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Global logging configuration</span></span><br><span class="line"><span class="attr">log4j.rootLogger</span>=<span class="string">ERROR, stdout</span></span><br><span class="line"><span class="comment"># MyBatis logging configuration...</span></span><br><span class="line"><span class="attr">log4j.logger.mapper</span>=<span class="string">DEBUG  </span></span><br><span class="line"><span class="comment"># Console output...</span></span><br><span class="line"><span class="attr">log4j.appender.stdout</span>=<span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="attr">log4j.appender.stdout.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="attr">log4j.appender.stdout.layout.ConversionPattern</span>=<span class="string">%5p [%t] - %m%n</span></span><br></pre></td></tr></table></figure><p><img src="http://47.101.172.219/wp-content/uploads/2021/09/%E5%9B%BE%E7%89%87-52-1024x410.png" alt=""></p><h2 id="8-创建测试文件">8 创建测试文件<a class="header-anchor" href="#8-创建测试文件">#</a></h2><p>除查询以外,其他需要提交事务 sqlSession.commit();</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.example.po.Customer;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisTest</span> &#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">CustomerTest</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">resource</span> <span class="operator">=</span> <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> Resources.getResourceAsStream(resource);</span><br><span class="line">        <span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span></span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br><span class="line">        <span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> sqlSessionFactory.openSession();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//添加数据</span></span><br><span class="line"><span class="comment">//        Customer customerIn = new Customer();</span></span><br><span class="line"><span class="comment">//        customerIn.setUsername(&quot;rose&quot;);</span></span><br><span class="line"><span class="comment">//        customerIn.setJobs(&quot;student&quot;);</span></span><br><span class="line"><span class="comment">//        customerIn.setPhone(&quot;13333533092&quot;);</span></span><br><span class="line"><span class="comment">//        int rows = sqlSession.insert(&quot;mapper.CustomerMapper.addCustomer&quot;, customerIn);</span></span><br><span class="line"><span class="comment">//        if (rows&gt;0)&#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;插入了&quot;+rows+&quot;条数据&quot;);</span></span><br><span class="line"><span class="comment">//        &#125;else&#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;插入失败!&quot;);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        sqlSession.commit();//提交事务</span></span><br><span class="line">        <span class="comment">//查询</span></span><br><span class="line">        <span class="comment">//Customer customerId = sqlSession.selectOne(&quot;mapper.CustomerMapper.findCustomerById&quot;, 3);//查询Id</span></span><br><span class="line">        <span class="comment">//List&lt;Customer&gt; customerName = sqlSession.selectList(&quot;mapper.CustomerMapper.findCustomerByName&quot;, &quot;j&quot;);//模糊查询姓名</span></span><br><span class="line">        <span class="comment">//System.out.println(customerId.toString());</span></span><br><span class="line">        <span class="comment">//System.out.println(customerName.toString());</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//更新</span></span><br><span class="line"><span class="comment">//        Customer customerUp = new Customer();</span></span><br><span class="line"><span class="comment">//        customerUp.setId(3); //根据Id修改数据</span></span><br><span class="line"><span class="comment">//        customerUp.setUsername(&quot;qqq&quot;);</span></span><br><span class="line"><span class="comment">//        customerUp.setJobs(&quot;programmer&quot;);</span></span><br><span class="line"><span class="comment">//        customerUp.setPhone(&quot;13311111111&quot;);</span></span><br><span class="line"><span class="comment">//        int row = sqlSession.update(&quot;mapper.CustomerMapper.updateCustomer&quot;, customerUp);</span></span><br><span class="line"><span class="comment">//        if (row&gt;0)&#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;更新了&quot;+row+&quot;条数据&quot;);</span></span><br><span class="line"><span class="comment">//        &#125;else&#123;</span></span><br><span class="line"><span class="comment">//            System.out.println(&quot;更新失败!&quot;);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        sqlSession.commit();</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//删除</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">del</span> <span class="operator">=</span> sqlSession.delete(<span class="string">&quot;mapper.CustomerMapper.deleteCustomer&quot;</span>, <span class="number">26</span>);</span><br><span class="line">        <span class="keyword">if</span> (del &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;删除了&quot;</span> + del + <span class="string">&quot;条数据&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;删除失败!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        sqlSession.commit();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="9-运行测试">9 运行测试<a class="header-anchor" href="#9-运行测试">#</a></h2><p>因没有Id为26的,所以删除失败.</p>]]></content>
      
      
      <categories>
          
          <category> spring boot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python小练习</title>
      <link href="/artical/43ebbc9e.html"/>
      <url>/artical/43ebbc9e.html</url>
      
        <content type="html"><![CDATA[<p>问:进步一天+0.02，退步一天减0.01，不退不进始终为1，那么一年中进步多少天，退步多少天，与全年每天都不进不退最接近。</p><p>思路：</p><p>根据问题可得到两个方程：</p><p>① 一年中进步x天，退步(365-x)天的收获为：y=(1.02<sup>x)*(0.99</sup>(365-x))</p><p>② 全年每天都不进不退的收获为: y=1</p><p>画出函数图像，交叉点为最接近的，但由于天数只能为整数，所以不能取交叉点。</p><p>函数图像地址：<a href="https://www.desmos.com/calculator/m2nm4xh78d">https://www.desmos.com/calculator/m2nm4xh78d</a></p><p><img src="http://47.101.172.219/wp-content/uploads/2021/09/desmos-graph.png" alt=""></p><p>放大：</p><p><img src="http://47.101.172.219/wp-content/uploads/2021/09/%E5%9B%BE%E7%89%87-48-1024x443.png" alt=""></p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="built_in">min</span> = <span class="number">10</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">366</span>):  <span class="comment"># 进步i天</span></span><br><span class="line">    A = fabs(<span class="built_in">pow</span>((<span class="number">1</span> + <span class="number">0.02</span>), i) * <span class="built_in">pow</span>((<span class="number">1</span> - <span class="number">0.01</span>), (<span class="number">365</span> - i)) - <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> A &lt; <span class="built_in">min</span>:</span><br><span class="line">        <span class="built_in">min</span> = A</span><br><span class="line">        x = i</span><br><span class="line">        y = <span class="number">365</span> - i</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;当进步%d天,退步%d天时,最接近&quot;</span> % (x, y))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;最接近的值为&#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">pow</span>((<span class="number">1</span> + <span class="number">0.02</span>), x) * <span class="built_in">pow</span>((<span class="number">1</span> - <span class="number">0.01</span>), y)))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">min</span>)</span><br></pre></td></tr></table></figure><p>输<strong>出结果：</strong></p><p>当进步123天,退步242天时,最接近<br>最接近的值为1.003548160754847<br>0.003548160754847096</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>商家抹零</title>
      <link href="/artical/29ce22bc.html"/>
      <url>/artical/29ce22bc.html</url>
      
        <content type="html"><![CDATA[<p>新增：错误排查提示</p><p>排除后自动跳转重新输入</p><p>可循环输入任意商品数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        shop=[]</span><br><span class="line">        <span class="built_in">sum</span>=<span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;请输入第%d个商品价格,输入End结束：&quot;</span>%(i+<span class="number">1</span>),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            shop.append(<span class="built_in">input</span>())</span><br><span class="line">            <span class="keyword">if</span> shop[i]==<span class="string">&#x27;End&#x27;</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="built_in">sum</span>+=<span class="built_in">float</span>(shop[i])</span><br><span class="line">        <span class="comment"># 总金额达到100，抹零</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">sum</span> &gt;= <span class="number">100</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;结算金额为：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">int</span>(<span class="built_in">sum</span>)))</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># 未达到四舍五入</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">sum</span> - <span class="built_in">int</span>(<span class="built_in">sum</span>)) &gt;= <span class="number">0.5</span>:  <span class="comment"># 五入</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;结算金额为：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">int</span>(<span class="built_in">sum</span>) + <span class="number">1</span>))</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:  <span class="comment"># 四舍</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;结算金额为：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">int</span>(<span class="built_in">sum</span>)))</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;请输入正确的价格格式！请重新输入&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Spring中的Bean</title>
      <link href="/artical/5a117f65.html"/>
      <url>/artical/5a117f65.html</url>
      
        <content type="html"><![CDATA[<h2 id="以Maven方式创建文件">以Maven方式创建文件<a class="header-anchor" href="#以Maven方式创建文件">#</a></h2><h4 id="1-文件目录结构">1 文件目录结构:<a class="header-anchor" href="#1-文件目录结构">#</a></h4><p><img src="http://47.101.172.219/wp-content/uploads/2021/09/%E5%9B%BE%E7%89%87-29.png" alt=""></p><h4 id="2-在pom-xml中添加配置文件-将自动下载jar包">2 在pom.xml中添加配置文件,将自动下载jar包<a class="header-anchor" href="#2-在pom-xml中添加配置文件-将自动下载jar包">#</a></h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- Spring核心模块 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-新增配置文件">3 新增配置文件<a class="header-anchor" href="#3-新增配置文件">#</a></h4><p><img src="http://47.101.172.219/wp-content/uploads/2021/09/%E5%9B%BE%E7%89%87-30-1024x732.png" alt=""></p><p><img src="http://47.101.172.219/wp-content/uploads/2021/09/%E5%9B%BE%E7%89%87-31-1024x252.png" alt=""></p><h4 id="4">4<a class="header-anchor" href="#4">#</a></h4><p><img src="http://47.101.172.219/wp-content/uploads/2021/09/%E5%9B%BE%E7%89%87-32-1024x366.png" alt=""></p><h4 id="5-UserController类中添加save方法">5 UserController类中添加save方法<a class="header-anchor" href="#5-UserController类中添加save方法">#</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;success print controller&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="6-添加测试文件-运行测试">6 添加测试文件,运行测试<a class="header-anchor" href="#6-添加测试文件-运行测试">#</a></h4><p>查看控制台,成功调用UserController类中的save方法,打印出 &quot; success print controller &quot;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test01</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">ApplicationContext</span> <span class="variable">applicationContext</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;ApplicationContext.xml&quot;</span>);</span><br><span class="line">        <span class="type">UserController</span> <span class="variable">userController</span> <span class="operator">=</span> (UserController)applicationContext.getBean(<span class="string">&quot;userController&quot;</span>);</span><br><span class="line">        userController.save();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="http://47.101.172.219/wp-content/uploads/2021/09/%E5%9B%BE%E7%89%87-33-1024x497.png" alt=""></p><h2 id="基于xml的Spring-DI实现">基于xml的Spring DI实现<a class="header-anchor" href="#基于xml的Spring-DI实现">#</a></h2><p>通过Controller类调用Service中的方法,直接调用Controller,而测试类就不用既调用COntroller类又调用Service类,就可实现成功调用两个类中的方法.</p><h4 id="1-创建UserService类">1 创建UserService类<a class="header-anchor" href="#1-创建UserService类">#</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;success print service&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-在Controller中注入Service">2 在Controller中注入Service<a class="header-anchor" href="#2-在Controller中注入Service">#</a></h4><p><img src="http://47.101.172.219/wp-content/uploads/2021/09/%E5%9B%BE%E7%89%87-34-1024x378.png" alt=""></p><h4 id="3-在Controller类中调用Service">3 在Controller类中调用Service<a class="header-anchor" href="#3-在Controller类中调用Service">#</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> UserService userService;  <span class="comment">//引入UserService</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserService</span><span class="params">(UserService userService)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.userService = userService;    <span class="comment">//添加setter方法</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;success print controller&quot;</span>);</span><br><span class="line">        userService.save();    <span class="comment">//调用save方法</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="4-运行显示成功调用">4 运行显示成功调用<a class="header-anchor" href="#4-运行显示成功调用">#</a></h4><p><img src="http://47.101.172.219/wp-content/uploads/2021/09/%E5%9B%BE%E7%89%87-36-1024x723.png" alt=""></p><h2 id="基于注解的Spring-DI实现">基于注解的Spring DI实现<a class="header-anchor" href="#基于注解的Spring-DI实现">#</a></h2><h4 id="1">1<a class="header-anchor" href="#1">#</a></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller(&quot;userController&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="meta">@Resource(name = &quot;userService&quot;)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    public void setUserService(UserService userService) &#123;</span></span><br><span class="line"><span class="comment">//        this.userService = userService;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">save</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;success print controller&quot;</span>);</span><br><span class="line">        userService.save();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://47.101.172.219/wp-content/uploads/2021/09/%E5%9B%BE%E7%89%87-41.png" alt=""></p><p>UserService:</p><p><img src="http://47.101.172.219/wp-content/uploads/2021/09/%E5%9B%BE%E7%89%87-43.png" alt=""></p><h4 id="2">2<a class="header-anchor" href="#2">#</a></h4><p>添加扫描器扫描包</p><p>bean被注解代替</p><p><img src="http://47.101.172.219/wp-content/uploads/2021/09/%E5%9B%BE%E7%89%87-45.png" alt=""></p><h4 id="3-运行项目">3 运行项目<a class="header-anchor" href="#3-运行项目">#</a></h4><p><img src="http://47.101.172.219/wp-content/uploads/2021/09/%E5%9B%BE%E7%89%87-47.png" alt=""></p><p>源文件下载:<a href="https://wwr.lanzoui.com/ijP6hu2f4sj">https://wwr.lanzoui.com/ijP6hu2f4sj</a></p>]]></content>
      
      
      <categories>
          
          <category> spring boot </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第一个Spring Boot入门程序</title>
      <link href="/artical/7dca1831.html"/>
      <url>/artical/7dca1831.html</url>
      
        <content type="html"><![CDATA[<p>1、基于spring框架。</p><p>2、使用“约定优先配置”的思想，优化繁琐的手动配置方式。</p><p>3、依靠大量注解，实现自动化配置。</p><p>4、Spring Boot 2.1.3版本必须要求JDK版本 8 及以上</p><p>5、第三方项目构建工具 Maven（3.3+）和Gradle（4.4+）</p><p>6、①以Maven方式构建</p><p>②以Spring Initializr 方式构建</p><p>7、@SpringBootApplication 标记为主程序启动类，是SpringBoot的核心注解。</p><p>①以Maven方式构建</p><p><strong>主程序启动类 ：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span> <span class="comment">//标记为主程序启动类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ManualChapter01Application</span> &#123;</span><br><span class="line">    <span class="comment">//启动方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        SpringApplication.run(ManualChapter01Application.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>请求处理控制类：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloController</span> &#123;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">Hello</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello Spring Boot&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>依赖文件pom.xml:</strong></p><p>提示框选择&quot;Enable Auto-Import&quot; 选项,自动导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>manual_chapter01<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.3.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>②以Spring Initializr 方式构建</p><p><strong>目录结构:</strong></p><p><img src="http://47.101.172.219/wp-content/uploads/2021/09/%E5%9B%BE%E7%89%87-27.png" alt=""></p><p>注<strong>意:</strong> controller类的包应与主程序启动类 <em>同级</em></p><p>运行 主程序启动类:</p><p>输入 地址: <a href="Http://localhost:8080/hello">Http://localhost:8080/hello</a></p><p>运行结果:</p><p><img src="http://47.101.172.219/wp-content/uploads/2021/09/%E5%9B%BE%E7%89%87-28.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> spring boot </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>6位随机验证码生成</title>
      <link href="/artical/373e32e3.html"/>
      <url>/artical/373e32e3.html</url>
      
        <content type="html"><![CDATA[<p>随机生成6位由大小写字母和数字组成的验证码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random <span class="keyword">as</span> r</span><br><span class="line"></span><br><span class="line">code = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):  <span class="comment"># 6位验证码</span></span><br><span class="line">    state = r.randint(<span class="number">0</span>, <span class="number">2</span>)  <span class="comment"># 随机大小写字母和数字</span></span><br><span class="line">    <span class="keyword">if</span> state == <span class="number">0</span>:</span><br><span class="line">        code.append(<span class="built_in">chr</span>(r.randint(<span class="number">48</span>, <span class="number">57</span>)))  <span class="comment"># chr()转换为字符</span></span><br><span class="line">    <span class="keyword">elif</span> state == <span class="number">1</span>:</span><br><span class="line">        code.append(<span class="built_in">chr</span>(r.randint(<span class="number">65</span>, <span class="number">90</span>)))</span><br><span class="line">    <span class="keyword">elif</span> state == <span class="number">2</span>:</span><br><span class="line">        code.append(<span class="built_in">chr</span>(r.randint(<span class="number">97</span>, <span class="number">122</span>)))</span><br><span class="line"></span><br><span class="line">s = <span class="string">&quot;&quot;</span>.join(code)  <span class="comment"># 以&quot;&quot;(即空)把字符连接成字符串</span></span><br><span class="line"><span class="built_in">print</span>(s)</span><br></pre></td></tr></table></figure><p>1、需先定义一个空列表</p><p>2、根据随机的state，判断列表是数字、大写字母、小写字母。</p><p>3、append（） 向列表添加元素</p><p>4、chr（） 转换为字符 str（）转换为字符串 不一样</p><p>5、&quot; &quot;.join() 以空连接成字符串</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python-turtle</title>
      <link href="/artical/a378bd8e.html"/>
      <url>/artical/a378bd8e.html</url>
      
        <content type="html"><![CDATA[<h2 id="Hello-World">Hello World<a class="header-anchor" href="#Hello-World">#</a></h2><p><strong>画个五角星</strong></p><p>导入turtle模块</p><p>注意:1、文件名不能以 <a href="http://turtle.py">turtle.py</a> 命名，否则会报错：AttributeError: partially initialized module ‘turtle’ has no attribute ‘pencolor’ (most likely due to a circular import)</p><p>2、是 True 不是 Ture</p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle <span class="keyword">as</span> t</span><br><span class="line">t.pencolor(<span class="string">&quot;red&quot;</span>)</span><br><span class="line">t.fillcolor(<span class="string">&quot;yellow&quot;</span>)</span><br><span class="line">t.begin_fill()</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    t.forward(<span class="number">200</span>)</span><br><span class="line">    t.right(<span class="number">144</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">abs</span>(t.pos())&lt;<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">t.end_fill()</span><br></pre></td></tr></table></figure><p>结果显示：</p><p>绘制同起点不同大小的5个五角星</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle <span class="keyword">as</span> t</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">draw_fiveStars</span>(<span class="params">leng</span>):</span><br><span class="line">    count =<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> count &lt;=<span class="number">5</span>:</span><br><span class="line">        t.forward(leng)</span><br><span class="line">        t.right(<span class="number">144</span>)</span><br><span class="line">        count+=<span class="number">1</span></span><br><span class="line">    leng+=<span class="number">10</span></span><br><span class="line">    <span class="keyword">if</span> leng &lt;=<span class="number">100</span>:</span><br><span class="line">        draw_fiveStars(leng)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    t.penup()</span><br><span class="line">    t.backward(<span class="number">100</span>)</span><br><span class="line">    t.pendown()</span><br><span class="line">    t.pensize(<span class="number">2</span>)</span><br><span class="line">    t.pencolor(<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">    segment =<span class="number">50</span></span><br><span class="line">    draw_fiveStars(segment)</span><br><span class="line">    t.exitonclick()</span><br><span class="line"><span class="keyword">if</span> __name__== <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>报数游戏</title>
      <link href="/artical/13253c62.html"/>
      <url>/artical/13253c62.html</url>
      
        <content type="html"><![CDATA[<p>n个人围成一圈，顺序排号，从第一个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来几号的那位</p><p>思考:1、围成一圈？怎么围？</p><p>2、退出圈子？怎么实现。</p><p>3、怎么判断最后留下的是几号？</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> n; <span class="comment">//总人数</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="type">int</span> a[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="comment">//顺序排号</span></span><br><span class="line">    &#123;</span><br><span class="line">        a[i] = i + <span class="number">1</span>；</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> k = <span class="number">0</span>; <span class="comment">//报数</span></span><br><span class="line">    <span class="type">int</span> m = <span class="number">0</span>; <span class="comment">//记录退出圈子的个数</span></span><br><span class="line">    <span class="type">int</span> last;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] != <span class="number">0</span>) <span class="comment">//除去为0的</span></span><br><span class="line">        &#123;</span><br><span class="line">            k++; <span class="comment">//报数</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (k == <span class="number">3</span>) <span class="comment">//报到3退出,</span></span><br><span class="line">        &#123;</span><br><span class="line">            a[i] = <span class="number">0</span>; <span class="comment">//赋值为0,代表退出圈子;</span></span><br><span class="line">            m++;      <span class="comment">//记录一个退出</span></span><br><span class="line">            k = <span class="number">0</span>;    <span class="comment">//重新将k赋值,下次重新报数到3</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ((n - m) == <span class="number">1</span>) <span class="comment">//当剩最后一人的时候,结束循环</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (a[j] != <span class="number">0</span>) &#123;</span><br><span class="line">                    last = a[j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i == (n - <span class="number">1</span>)) <span class="comment">//围成一圈,无限循环</span></span><br><span class="line">        &#123;</span><br><span class="line">            i = <span class="number">-1</span>; <span class="comment">//当循环到最后一个时,将i重新赋值到第一个.因为会执行一次i++,所以要赋值为-1,否则会跳过第一个.</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, last);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1、围成一圈需实现的结果就是当最后一人报数过后，到第一人报数。根据需求，列出循环，判断当循环到最后一个人的时候，重新赋值循环变量，使其重新循环到第一人。</p><p>注意：这将会导致无限循环，需想办法跳出循环。将循环变量重新赋值后，还会执行i++,再而才会进行循环条件判断,是否继续进行循环。所以要时i++后的值，指向第一个人，即i==0，所以i应赋值为-1。否则将会跳过第一个人执行循环体。</p><p>2、退出圈子，需实现的需求就是下次报数不再进行报数，或许会想到删除，将报到3的人踢出圈子，不过数组实现删除却有些麻烦，或者换成链表组成圈子，实现删除操作将会简单很多。嗯》》》不如换个思考方式，报到3的人，为他做一个标记，循环报数对有标记的人就不用报数。虽并未实际“退出圈子”，却也实现了需求。对于问题的实际需求，需灵活判断。找到效率更高的算法。</p><p>3、对一圈的人，顺序排序，当退出的人（标记的人）达到总人数减一的时候，也就是只剩下一人的时候，循环全部人，查找其中未被标记的输出即可。</p><blockquote><p>动画演示</p><p>–c</p></blockquote><p>动画也太难搞了吧。<a href="https://www.xiuzhan365.com/video-99031225.html">https://www.xiuzhan365.com/video-99031225.html</a></p>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>查询替换</title>
      <link href="/artical/c3148876.html"/>
      <url>/artical/c3148876.html</url>
      
        <content type="html"><![CDATA[<p>在s串中,寻找t串,将之替换为g串.并记录有几次替换.</p><p>例、输入:s串 regret —— t串 re —— g串 log</p><p>在s串中查询t串re，发现两处，即两次替换后，输出替换后的s串为 logglogt</p><p>实现思路</p><p>先分别定义s、t、g对应的字符数组，给上相应大小，并指向数组，分别输入s、t、g串</p><p>调用函数 replace_str ，将s、t、g作实参传入，执行查询替换</p><p>先定义一个count，作用是记录替换次数，也可作查询到几处t串</p><p>再定义的str数组及指针，储存替换后 新的字符串。</p><p>而定义的p，记录str存储进度</p><p>接下来开始循环遍历，循环次数为s串的长度，因为要将s串中的每个字符遍历一次</p><p>新定义的k，为t串的比较进度，当循环到s串的下一个字符，t串比较进度需重新刷新为0，所以在循环内部定义，且内循环每次结束k++，表示比较t串的下一个字符。</p><p>而内循环的j，会根据当前外循环的i改变而随之改变，代表s串的比较进度</p><p>内循环每次判断s串与t串中字符相等，记录相等的次数m，如次数达到t串的长度，即表示在s串中查询到一处与t串相等的地方。</p><p>例：s 串 asacadd t串ac</p><p>只有当连续两次都相等时，即a<mark>a，c</mark>c时，才会被记录。避免as与ac判断时，有一次相等，a==a，不满足条件。</p><p>所以进行循环后进行判断m次数，是否与t串长度相等，是，则进行循环赋值，将替换的g串赋值到str中，并且记录存储进度。而且进行了一次替换，所以count计数加一。</p><p>且下次循环将跳过t串长度-1的i,所以将i加上(strlen(t)-1)，为什么？</p><p>解释：如下次循环还按着顺序执行i++，那么在s串中寻找的t串，只会被替换一个。不符合程序设定，只能成功替换当t串长度为一的。所以每当t串被查询到一次，i循环将跳过 (strlen(t)-1) 。</p><p>例：regret 当第一次循环到re，将之替换为log后，第二次循环就应该从i指向regret中的g开始，而不是i++指向的e，因为e已经被替换掉了，不可再进行赋值到str中。</p><p>如判断为，否，则将s串中原本不动的赋值到str中，且用p记录存储进度。</p><p>整个循环结束，表示已经全部查询替换存储完成，在str最后赋值上’\0’，表示str串的结束。存储完成。</p><p>输出打印count与str串。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">replace_str</span><span class="params">(<span class="type">char</span> *s, <span class="type">char</span> *t, <span class="type">char</span> *g)</span>; <span class="comment">//替换函数</span></span><br><span class="line">    <span class="type">char</span> *s, *t, *g;</span><br><span class="line">    <span class="type">char</span> s1[<span class="number">20</span>], t1[<span class="number">5</span>], g1[<span class="number">10</span>];</span><br><span class="line">    s = s1;</span><br><span class="line">    t = t1;</span><br><span class="line">    g = g1;</span><br><span class="line">    gets(s);</span><br><span class="line">    gets(t);</span><br><span class="line">    gets(g);</span><br><span class="line">    replace_str(s, t, g);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">replace_str</span><span class="params">(<span class="type">char</span> *s, <span class="type">char</span> *t, <span class="type">char</span> *g)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> count = <span class="number">0</span>; <span class="comment">//计数</span></span><br><span class="line">    <span class="type">char</span> str1[<span class="number">100</span>];</span><br><span class="line">    <span class="type">char</span> *str;</span><br><span class="line">    str = str1;</span><br><span class="line">    <span class="type">int</span> p = <span class="number">0</span>; <span class="comment">//记录str存储进度</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(s); i++) &#123;</span><br><span class="line">        <span class="type">int</span> k = <span class="number">0</span>; <span class="comment">//循环t的比较进度</span></span><br><span class="line">        <span class="type">int</span> m = <span class="number">0</span>; <span class="comment">//记录单字符相等次数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i; j &lt; <span class="built_in">strlen</span>(t) + i; j++, k++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (*(s + j) == *(t + k)) &#123;</span><br><span class="line">                m++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (m == <span class="built_in">strlen</span>(t)) <span class="comment">//标志在s串中找到一处与t串相同</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> n = <span class="number">0</span>; n &lt; <span class="built_in">strlen</span>(g); n++) &#123;</span><br><span class="line">                *(str + p) = *(g + n);</span><br><span class="line">                p++;</span><br><span class="line">            &#125;</span><br><span class="line">            count++;</span><br><span class="line">            i += (<span class="built_in">strlen</span>(t) - <span class="number">1</span>); <span class="comment">//跳过下...次循环</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            *(str + p) = *(s + i);</span><br><span class="line">            p++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    *(str + p) = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, str);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;count=%d\n&quot;</span>, count);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://47.101.172.219/wp-content/uploads/2021/08/%E5%9B%BE%E7%89%87-22.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>杨辉三角</title>
      <link href="/artical/4ee864f8.html"/>
      <url>/artical/4ee864f8.html</url>
      
        <content type="html"><![CDATA[<p><img src="http://47.101.172.219/wp-content/uploads/2021/08/%E5%9B%BE%E7%89%87-21-1024x463.png" alt=""></p><p>先找出规律，发现为均上一列之和，定义两个数组，循环赋值。</p><p>例。定义a[10]={1},b[10]={1,1}</p><p>下次根据b的值,将a重新赋值.循环如此</p><p>代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> M 10</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[M] = &#123;<span class="number">1</span>&#125;, b[M] = &#123;<span class="number">1</span>, <span class="number">1</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; M; i++) <span class="comment">//需要得到多少层的数据M</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;1 &quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">            a[i] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; i; j++) &#123;</span><br><span class="line">                a[j] = b[j - <span class="number">1</span>] + b[j];</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a[j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            b[i] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; i; j++) &#123;</span><br><span class="line">                b[j] = a[j - <span class="number">1</span>] + a[j];</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, b[j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;1\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line"><span class="comment">// 1</span></span><br><span class="line"><span class="comment">// 1 1</span></span><br><span class="line"><span class="comment">// 1 2 1</span></span><br><span class="line"><span class="comment">// 1 3 3 1</span></span><br><span class="line"><span class="comment">// 1 4 6 4 1</span></span><br><span class="line"><span class="comment">// 1 5 10 10 5 1</span></span><br><span class="line"><span class="comment">// 1 6 15 20 15 6 1</span></span><br><span class="line"><span class="comment">// 1 7 21 35 35 21 7 1</span></span><br><span class="line"><span class="comment">// 1 8 28 56 70 56 28 8 1</span></span><br><span class="line"><span class="comment">// 1 9 36 84 126 126 84 36 9 1</span></span><br></pre></td></tr></table></figure><h2 id="比较字符串大小">比较字符串大小<a class="header-anchor" href="#比较字符串大小">#</a></h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> *str[<span class="number">3</span>], *max;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">        str[i] = (<span class="type">char</span> *)<span class="built_in">malloc</span>(<span class="number">3</span> * <span class="keyword">sizeof</span>(<span class="type">char</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">        gets(str[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    max = str[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(max, str[i]) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            max = str[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, max);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>统计数据不同个数</title>
      <link href="/artical/3c161bfa.html"/>
      <url>/artical/3c161bfa.html</url>
      
        <content type="html"><![CDATA[<p>要求:输入10个数，统计10个数中，不同的个数。</p><p><img src="http://47.101.172.219/wp-content/uploads/2021/08/%E5%9B%BE%E7%89%87-20.png" alt=""></p><p>思路：！！！！很重要</p><p>循环遍历需判断的10个数，当往后找不出相同的数时，计数加1.</p><p>例：样例1，当循环第一个数时，往后没有1了，计数加1</p><p>样例2，当循环第一个数时，往后还有1，直接跳出循环，进行下次判断，循环第二个数，但第二个数还是1，继续跳出循环，直到第5次循环，往后再没有1了，则计数加1.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">实现1</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> *a, i, j;</span><br><span class="line">    a = (<span class="type">int</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>) * <span class="number">10</span>); <span class="comment">//创建一个int形 10个int大小的存储空间</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)             <span class="comment">//输入</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, a + i);</span><br><span class="line">    <span class="type">int</span> flag = <span class="number">0</span>; <span class="comment">//计数不同个数,初始值为0</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">9</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = i - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">            <span class="keyword">if</span> (*(a + i) == *(a + j))</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span> (j == <span class="number">-1</span>)</span><br><span class="line">            flag++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, flag);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现2</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> M 10 <span class="comment">//数组长度,即需要判断的数据长度</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[M], sum = <span class="number">0</span>, flag = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; M; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; M; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; M; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[i] == a[j]) <span class="comment">//循环判断到 最后一个</span></span><br><span class="line">            &#123;</span><br><span class="line">                flag = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag == <span class="number">1</span>) &#123;</span><br><span class="line">            sum++;</span><br><span class="line">        &#125;</span><br><span class="line">        flag = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="统计字符串相同的个数">统计字符串相同的个数<a class="header-anchor" href="#统计字符串相同的个数">#</a></h2><p>例:aabbbcc</p><p>a:2</p><p>b:3</p><p>c:2</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">10</span>];</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">1</span>; <span class="comment">//计数,初始为1</span></span><br><span class="line">    gets(str);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(str); i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; <span class="built_in">strlen</span>(str); j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (str[i] == str[j]) &#123;</span><br><span class="line">                sum++; <span class="comment">//循环到相同的,计数加一</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c:%d\n&quot;</span>, str[i], sum);</span><br><span class="line">        sum = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>思路与上大概一致</p>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>素数</title>
      <link href="/artical/78975c89.html"/>
      <url>/artical/78975c89.html</url>
      
        <content type="html"><![CDATA[<h2 id="什么是素数">什么是素数?<a class="header-anchor" href="#什么是素数">#</a></h2><p><em>素数_一般指_质数</em>。_质数_是指在大于1的自然数中，除了1和它本身以外不再有其他因数的自然数。</p><p>曾称质数。一个大于1的正整数，如果除了1和它本身以外，不能被其他正整数整除，就叫素数。</p><p>要求：输出1~200之间的所有素数。</p><p>思路：先定义一个数组，由于不清楚200内素数有多少个，不知道定义多大，但可以肯定不超过200。如果稍微判断，可以肯定不超过100个，因为除了2，所有偶数都不是素数，都可以被2整除。所以，先定义一个数组存放素数，大小100就够，即int a[100]。</p><p>循环判断3-199之间的所有数 i ，每次将其循环与2到当前数本身减去1，即 i % j 取余，</p><p>如遇到一个可以被整除的，那么i就不是素数，将flag赋值为0，标志当前的i不为素数，以便后面进行判断。且不必再进行判断后面的j了，直接break跳出内循环。</p><p>初步代码如下：（有错误）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">100</span>], flag = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">3</span>; i &lt; <span class="number">200</span>; i++) <span class="comment">// i为1~200内的整数</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">2</span>; j &lt; i; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i % j == <span class="number">0</span>) &#123;</span><br><span class="line">                flag = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="type">int</span> k = <span class="number">0</span>; <span class="comment">//不能再内部赋值,否则每次循环执行时.将会重新赋值</span></span><br><span class="line">            a[k] = i;</span><br><span class="line">            k++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) <span class="comment">//不能直接输出全部,有的并没有值</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>修正代码如下</strong></p><p>注意1、两次循环的初始条件，为什么？</p><p>2、flag及k的作用，默认值。</p><p>3、每完成一次外循环，就需要将flag重新赋值为1，为什么？</p><p>因为循环是默认在flag=1的条件下进行的，循环内的语句可能改变flag的值，再下次循环默认为0的话，将会得出错误结果。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">100</span>], flag = <span class="number">1</span>, k = <span class="number">1</span>;</span><br><span class="line">    a[<span class="number">0</span>] = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">3</span>; i &lt; <span class="number">200</span>; i++) <span class="comment">// i为3~200内的整数</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">2</span>; j &lt; i; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i % j == <span class="number">0</span>) <span class="comment">//判断_如果i被j整除了,那么i不是素数,后面不用再循环判断,break跳出循环.</span></span><br><span class="line">            &#123;</span><br><span class="line">                flag = <span class="number">0</span>; <span class="comment">// i不是素数</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag == <span class="number">1</span>) &#123;</span><br><span class="line">            a[k] = i;</span><br><span class="line">            k++;</span><br><span class="line">        &#125;</span><br><span class="line">        flag = <span class="number">1</span>; <span class="comment">//每次循环完,将flag重新赋值为1!!!</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; k; i++) <span class="comment">//总共有k个素数</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>略微修改</p><p>输入一个整数,判断是否为素数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a, flag = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入一个整数:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">2</span>; j &lt; a; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a % j == <span class="number">0</span>) <span class="comment">//判断_如果a被j整除了,那么a不是素数,后面不用再循环判断,break跳出循环.</span></span><br><span class="line">        &#123;</span><br><span class="line">            flag = <span class="number">0</span>; <span class="comment">// a不是素数</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d不是一个素数,它能被%d整除&quot;</span>, a, j);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (flag == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d是一个素数&quot;</span>, a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>字符排序2</title>
      <link href="/artical/a3935f3f.html"/>
      <url>/artical/a3935f3f.html</url>
      
        <content type="html"><![CDATA[<p>要求: 按照字母顺序排列,不区分大小写.</p><p>例: a(ASClL码97) 应该排列在 B(ASCLL码66)的前面.</p><p>A(ASClL码65) 也应该排列在 B(ASCLL码66)的前面.</p><p>思路1:统一字符大小写,将所有字母统一改为小写,即ASCLLL码在65~90范围的字母,加上32,转换为小写,再根据ASCLL码由小到大排序.</p><p><strong>问题</strong>: ASCLLL码在65~90范围的字母,加上32,转换为小写, 暂时无法实现</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> M 8</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> *str[M] = &#123;<span class="string">&quot;BASIC&quot;</span>, <span class="string">&quot;Computer&quot;</span>, <span class="string">&quot;design&quot;</span>, <span class="string">&quot;FORTRAN&quot;</span>, <span class="string">&quot;Follow&quot;</span>, <span class="string">&quot;me&quot;</span>, <span class="string">&quot;Great&quot;</span>, <span class="string">&quot;Wall&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; M; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="built_in">strlen</span>(str[i]); j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> ((<span class="type">int</span>)*(str[i] + j) &lt; <span class="number">97</span>) <span class="comment">//判断大写字母</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// *(str[i]+j)+=32;</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%c  &quot;</span>, *(str[i] + j) + <span class="number">32</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// printf(&quot;%c &quot;,*(str[i]+j));</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s &quot;</span>, str[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解决:strlwr()函数,将所有大写字母转化为小写.</p><p>将指针字符数组改为二维数组</p><p>新定义一个二维数组str1，将str复制到str1，目的是将操作都在str1中执行，不改变原数组中的内容。</p><p>利用strlwr（）函数，将str1中字母都转为小写后，应用strcmp（）函数比较str1的ASCLL码大小，对两个数组都进行冒泡排序，即str与str1的存储顺序将会保持一致，不一样的只是str中含有大写，而str1中都转为了小写，不含有大写字母。</p><p>最后输出str数组。</p><p>为什么要先转为小写再比较？</p><p>并不是非要转为小写，利用strupr（）函数转为大写也可以，目的是统一大小写。</p><p>否则直接排序会将大写的全部先输出了，再输出小写的。（因为ASCLL码中大写字母比小写字母小），即 B 将会 排序 到 a 前面，但这并不是我们想要的排序结果。</p><p>实现代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> M 8  <span class="comment">//单词个数</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10 <span class="comment">//单词最大长度</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> str[M][N] = &#123;<span class="string">&quot;BASIC&quot;</span>, <span class="string">&quot;Computer&quot;</span>, <span class="string">&quot;design&quot;</span>, <span class="string">&quot;ancestor&quot;</span>, <span class="string">&quot;Follow&quot;</span>, <span class="string">&quot;English&quot;</span>, <span class="string">&quot;Great&quot;</span>, <span class="string">&quot;Horion&quot;</span>&#125;, str1[M][N];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; M; i++) &#123;</span><br><span class="line">        <span class="built_in">strcpy</span>(str1[i], str[i]); <span class="comment">//复制到str1,不改变内容,只改变顺序.</span></span><br><span class="line">        strlwr(str1[i]);         <span class="comment">//将str1改为小写输出</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; M; j++) <span class="comment">//冒泡排序</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; M - j - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(str1[i], str1[i + <span class="number">1</span>]) &gt; <span class="number">0</span>) <span class="comment">//注意!!!!惊天妙手,为什么要两个数组的都要交换?</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">char</span> temp[N];</span><br><span class="line">                <span class="built_in">strcpy</span>(temp, str[i]); <span class="comment">//字符串的赋值方式!!</span></span><br><span class="line">                <span class="built_in">strcpy</span>(str[i], str[i + <span class="number">1</span>]);</span><br><span class="line">                <span class="built_in">strcpy</span>(str[i + <span class="number">1</span>], temp);</span><br><span class="line"></span><br><span class="line">                <span class="built_in">strcpy</span>(temp, str1[i]); <span class="comment">//因为要保持数据的一致性</span></span><br><span class="line">                <span class="built_in">strcpy</span>(str1[i], str1[i + <span class="number">1</span>]);</span><br><span class="line">                <span class="built_in">strcpy</span>(str1[i + <span class="number">1</span>], temp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; M; i++) <span class="comment">//输出</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s &quot;</span>, str[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line"><span class="comment">// ancestor BASIC Computer design English Follow Great Horion</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>整数排序</title>
      <link href="/artical/e89f0eed.html"/>
      <url>/artical/e89f0eed.html</url>
      
        <content type="html"><![CDATA[<h3 id="对10个整数由大到小排序">对10个整数由大到小排序<a class="header-anchor" href="#对10个整数由大到小排序">#</a></h3><p><strong>指针</strong></p><p>思路：10次外循环，第一次循环输出最大的，第二次循环输出第二大的，以此类推。</p><p>注意：这将会改变原数组内的值。且输入的整数不可以有负数，否则将排序错乱。</p><p>思考改进：如何不改变原数组的值？</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">10</span>], *p;</span><br><span class="line">    <span class="keyword">for</span> (p = a; p &lt; a + <span class="number">10</span>; p++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, p);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)<span class="comment">//找出最大值</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (*p &lt; a[i])</span><br><span class="line">            &#123;</span><br><span class="line">                p = &amp;a[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, *p);</span><br><span class="line">        *p=<span class="number">0</span>; <span class="comment">//将指向最大的数,重新赋值为0,下次循环将找出第二大的,       </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>冒泡排序法</strong></p><p>对数组利用冒泡排序法,重新排序,不会改变数组内的值,但会改变存储顺序.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">10</span>], *p;</span><br><span class="line">    <span class="keyword">for</span> (p = a; p &lt; a + <span class="number">10</span>; p++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, p);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (p = a; p &lt; a + <span class="number">10</span>-i; p++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (*p&lt;*(p+<span class="number">1</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> temp;</span><br><span class="line">                temp=*p;</span><br><span class="line">                *p=*(p+<span class="number">1</span>);</span><br><span class="line">                *(p+<span class="number">1</span>)=temp;</span><br><span class="line">            &#125;   </span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (p = a; p &lt; a + <span class="number">10</span>; p++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, *p);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如不想改变原数组,可以复制出一个数组进行排序操作.</p>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>关于建站</title>
      <link href="/artical/b8d057a.html"/>
      <url>/artical/b8d057a.html</url>
      
        <content type="html"><![CDATA[<p>关于建站吧，我也不是太懂，就讲一下这个网站是怎么搭建的吧。也可以当作一个简单的教程，或者参考。</p><p>想拥有一个属于自己的网站，第一步当然是得拥有属于一个自己的域名啦。域名是神马？以下内容来自百科（<a href="https://baike.baidu.com/item/%E5%9F%9F%E5%90%8D/86062?fr=aladdin">https://baike.baidu.com/item/%E5%9F%9F%E5%90%8D/86062?fr=aladdin</a>）</p><p><strong>域名</strong>（英语：<strong>Domain Name</strong>），又称<strong>网域</strong>，是由一串用点分隔的名字组成的<a href="https://baike.baidu.com/item/Internet">Internet</a>上某一台<a href="https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E6%9C%BA/140338">计算机</a>或计算机组的名称，用于在数据传输时对计算机的定位标识（有时也指地理位置）。 [1]  由于<a href="https://baike.baidu.com/item/IP%E5%9C%B0%E5%9D%80/150859">IP地址</a>具有不方便记忆并且不能显示地址组织的名称和性质等缺点，人们设计出了域名，并通过网域名称系统（<a href="https://baike.baidu.com/item/DNS">DNS</a>，Domain Name System）来将域名和<a href="https://baike.baidu.com/item/IP%E5%9C%B0%E5%9D%80">IP地址</a>相互<a href="https://baike.baidu.com/item/%E6%98%A0%E5%B0%84/20402621">映射</a>，使人更方便地访问<a href="https://baike.baidu.com/item/%E4%BA%92%E8%81%94%E7%BD%91/199186">互联网</a>，而不用去记住能够被机器直接读取的<a href="https://baike.baidu.com/item/IP%E5%9C%B0%E5%9D%80">IP地址</a>数串。 [1]</p><p>其实也没那么复杂，就是一个网站地址。那怎么才能拥有呢？网站域名可以在中国最大的域名注册服务商——万网（<a href="https://wanwang.aliyun.com">https://www.net.cn</a>），进行购买注册，不过现在万网被阿里收购了。价格根据域名不同而有所不同，价格差距或有天壤之别。一般情况下 例如: <a href="http://xn--onq.com">以.com</a>、 .cn 等较为常见的域名后缀，价格较高。对于新手小白，或者只是玩玩而已，可以找个便宜一点的，也有几块十几块一年的（有钱另当别论）。对于新用户，一般还有优惠活动，可以省下一小笔money，我记得我第一个域名就只用了1块，第二个也就11块，对于现在学生一般也能接受。域名起名的话，一般以好记，或有什么特殊意义，没什么特殊要求，你想起啥就起啥，只要还未被抢先注册。因为域名遵循：先注册先得的原则。</p><p><img src="http://47.101.172.219/wp-content/uploads/2021/08/%E5%9B%BE%E7%89%87-12-1024x479.png" alt=""></p><p>那有了域名以后呢，还需要对域名进行实名认证。可以在阿里云平台上找到你购买的域名，找到实名认证入口，进行实名认证。第一步就基本完成啦。</p><p>第二步，就是需要运行网站的服务器（<a href="https://baike.baidu.com/item/%E6%9C%8D%E5%8A%A1%E5%99%A8/100571?fr=aladdin">https://baike.baidu.com/item/%E6%9C%8D%E5%8A%A1%E5%99%A8/100571?fr=aladdin</a>）了。服务器有好多好多种，按需购买就好，我也不知道服务器各个的使用方法。对于个人学习网站，也没有必要买太好，能用就好。我买的是 云轻量应用服务器（<a href="https://www.aliyun.com/product/swas?spm=5176.12157752.J_8058803260.97.3718424cBPhO8U">https://www.aliyun.com/product/swas?spm=5176.12157752.J_8058803260.97.3718424cBPhO8U</a>），这里要注意了，买国内（除中国香港）的服务器是需要进行网站备案的，而国外的不需要。 网站备案需要购买有三个月及以上的服务器时长，且备案审核时间一般为6~20个工作日，根据所在省份，具体所需资料有所不同。</p><p>实例类型选择 服务器类型</p><p>地域和可用区 选择国内的需备案，国外的不需备案，但会有延迟。我选择的国内的上海。</p><p>镜像 我选择的wordpress，比较方便，快捷。选择参考文章（<a href="https://blog.csdn.net/wx_15323880413/article/details/108091161">https://blog.csdn.net/wx_15323880413/article/details/108091161</a>）</p><p>配置 选最便宜的就够了</p><p>数据盘 就0就OK，不用额外增加了</p><p>时长可以先3个月试试，如果可以再考虑续费。</p><p><img src="http://47.101.172.219/wp-content/uploads/2021/08/%E5%9B%BE%E7%89%87-14-932x1024.png" alt=""></p><p>不过国内的网站访问速度相较于国外的会快很多，价格方面原价是比较贵的，但是不要忘了，我们还有新用户优惠，我买了4个月的服务器也只用了不到40块。拥有域名后，在服务器上解析域名，以后不但可以通过公网ip访问，也可以通过域名进行访问你的网站了，当然，一个服务器是可以绑定多个域名的，不过域名是需要实名的，好像一个人最多可以实名5个域名。有了服务器就需要填写资料进行网站备案了，这一步往往比较复杂，填写的信息比较多，还需验证等待等。按照提示一步一步做就可以了。</p><p><img src="http://47.101.172.219/wp-content/uploads/2021/08/%E5%9B%BE%E7%89%87-15-1024x479.png" alt=""></p><p><img src="http://47.101.172.219/wp-content/uploads/2021/08/%E5%9B%BE%E7%89%87-18-1024x609.png" alt=""></p><p>备案通过后，找到服务器，获取密码远程连接wordpress，登录wordpress就可以自定义建设你的网站啦。</p><p><img src="http://47.101.172.219/wp-content/uploads/2021/08/%E5%9B%BE%E7%89%87-16-1024x474.png" alt=""></p><p>wordpress界面</p><p>功能还是比较全面的，不用自己一点一点写网站代码。但也造成了一些局限性。</p><p><img src="http://47.101.172.219/wp-content/uploads/2021/08/%E5%9B%BE%E7%89%87-17-1024x478.png" alt=""></p><p>网站搭建后，还有一点需要注意，还需进行ICP备案后处理（<a href="https://help.aliyun.com/document_detail/146190.html?spm=a2c4g.11186623.6.667.6610593bQkCb3D">https://help.aliyun.com/document_detail/146190.html?spm=a2c4g.11186623.6.667.6610593bQkCb3D</a>）。</p><p><img src="http://47.101.172.219/wp-content/uploads/2021/08/%E5%9B%BE%E7%89%87-19-1024x899.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 建站 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>字符排序</title>
      <link href="/artical/20353b76.html"/>
      <url>/artical/20353b76.html</url>
      
        <content type="html"><![CDATA[<h2 id="要求">要求<a class="header-anchor" href="#要求">#</a></h2><p>将字符串按ASCLL码升序排序</p><p><img src="http://47.101.172.219/wp-content/uploads/2021/08/%E5%9B%BE%E7%89%87-7.png" alt=""></p><h3 id="冒泡排序法">冒泡排序法<a class="header-anchor" href="#冒泡排序法">#</a></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> M 5</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> *str[M] = &#123;<span class="string">&quot;China&quot;</span>, <span class="string">&quot;Japan&quot;</span>, <span class="string">&quot;Korea&quot;</span>, <span class="string">&quot;American&quot;</span>, <span class="string">&quot;England&quot;</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; M; j++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; M - j - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(str[i], str[i + <span class="number">1</span>]) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="type">char</span> *temp;</span><br><span class="line">                temp = str[i];</span><br><span class="line">                str[i] = str[i + <span class="number">1</span>];</span><br><span class="line">                str[i + <span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s &quot;</span>, str[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出//China American England Japan Korea</p><p>结果错误</p><p>不能再内部循环中输出, 为啥???</p><p>因为 在j=0的时候,内循环完成排序为 C J A E K ,并未完全排序完成,就已经执行了打印语句,输出了str[0] ,即&quot;China&quot;,余下相同原因.</p><p>应后面另外加输出语句,代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> M 5</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> *str[M] = &#123;<span class="string">&quot;China&quot;</span>, <span class="string">&quot;Japan&quot;</span>, <span class="string">&quot;Korea&quot;</span>, <span class="string">&quot;American&quot;</span>, <span class="string">&quot;England&quot;</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; M; j++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; M - j - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(str[i], str[i + <span class="number">1</span>]) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="type">char</span> *temp;</span><br><span class="line">                temp = str[i];</span><br><span class="line">                str[i] = str[i + <span class="number">1</span>];</span><br><span class="line">                str[i + <span class="number">1</span>] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s &quot;</span>, str[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; M; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s &quot;</span>, str[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line"><span class="comment">// China American England Japan Korea</span></span><br><span class="line"><span class="comment">// American China England Japan Korea</span></span><br><span class="line"><span class="comment">//排序过程</span></span><br><span class="line"><span class="comment">// C J K A E</span></span><br><span class="line"><span class="comment">// C J K A E</span></span><br><span class="line"><span class="comment">// C J A K E</span></span><br><span class="line"><span class="comment">// C J A E K</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// C J A E K</span></span><br><span class="line"><span class="comment">// C A J E K</span></span><br><span class="line"><span class="comment">// C A E J K</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// A C E J K</span></span><br><span class="line"><span class="comment">// A C E J K</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// A C E J K</span></span><br></pre></td></tr></table></figure><h3 id="不知名-排序-我不知道哈哈">不知名 排序(我不知道哈哈)<a class="header-anchor" href="#不知名-排序-我不知道哈哈">#</a></h3><p>这个在内部输出正确的,是因为在完成第一次内部循环时,排序为A J K C E,输出了str[0],即&quot;American&quot;</p><p>第二次内部循环时,排序为A C J K E,输出了str[1],即&quot;China&quot;,</p><p>…余下同样原理,</p><p>不具有普遍性,不建议使用</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> M 5</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> *str[M] = &#123;<span class="string">&quot;China&quot;</span>, <span class="string">&quot;Japan&quot;</span>, <span class="string">&quot;Korea&quot;</span>, <span class="string">&quot;American&quot;</span>, <span class="string">&quot;England&quot;</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; M; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; M; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(str[i], str[j]) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="type">char</span> *temp;</span><br><span class="line">                temp = str[i];</span><br><span class="line">                str[i] = str[j];</span><br><span class="line">                str[j] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s &quot;</span>, str[i]); <span class="comment">//最好不在内部输出,另起一个循环输出</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//排序过程</span></span><br><span class="line"><span class="comment">// C J K A E</span></span><br><span class="line"><span class="comment">// C J K A E</span></span><br><span class="line"><span class="comment">// A J K C E</span></span><br><span class="line"><span class="comment">// A J K C E</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// A J K C E</span></span><br><span class="line"><span class="comment">// A C K J E</span></span><br><span class="line"><span class="comment">// A C J K E</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// A C J K E</span></span><br><span class="line"><span class="comment">// A C E K J</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// A C E J K</span></span><br></pre></td></tr></table></figure><h3 id="简单选择排序">简单选择排序<a class="header-anchor" href="#简单选择排序">#</a></h3><p>效率最高,只用执行3次交换.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> *n[] = &#123;<span class="string">&quot;China&quot;</span>, <span class="string">&quot;Japan&quot;</span>, <span class="string">&quot;Korea&quot;</span>, <span class="string">&quot;American&quot;</span>, <span class="string">&quot;England&quot;</span>&#125;, *temp;</span><br><span class="line">    <span class="type">int</span> i, j, k;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">        k = i;</span><br><span class="line">        <span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(n[k], n[j]) &gt; <span class="number">0</span>)</span><br><span class="line">                k = j; <span class="comment">//找出最小值</span></span><br><span class="line">        <span class="keyword">if</span> (k != i) &#123;</span><br><span class="line">            temp = n[k];</span><br><span class="line">            n[k] = n[i];</span><br><span class="line">            n[i] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s &quot;</span>, n[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>怎么运行排序的呢?</p><p><img src="http://47.101.172.219/wp-content/uploads/2021/08/%E5%9B%BE%E7%89%87-8-1024x622.png" alt=""></p><p>思路:第一次外循环从5个字符串中,找出最小的一个,交换到第一个位置。</p><p>第二次外循环 从后4个字符串中,找出最小的一个,交换到第二个位置。</p><p>…余下原理相同,</p><p>即最多执行5次交换,最少0次,效率最高.</p><p>妙啊</p><p>以下为了方便,统一用字符串的首字母代表字符串.例: C 即代表 “China”</p><p>可以发现，只进行了三次交换</p><p>第一次交换 ： A J K C E</p><p>第二次交换 : A C K J E</p><p>第三次交换: A C E J K</p><p>可以得出，第一次交换完成后，得到的排序应是 A J K C E 。在进行第二次外循环的时候，即i=1时，内循环中 j=i+1=2，循环条件为 j&lt;5 ，循环变量增值为 j++，所以理论上会循环j=2,j=3,j=4 ，一共3次。</p><p>循环中的判断条件为 strcmp(n[k],n[j])&gt;0 ，即当n[k]&gt;n[j]时，条件成立，执行if内语句，否者将不执行。</p><p>前有赋值语句k=i，如果只讨论第二次外循环，在内循环中，k的值可以确定为与i相等，即k=1。而j的可能值前已经讨论过了，一共有三个值，分别是2，3，4。</p><p>现在我们分三种情况，讨论内循环中判断语句的执行情况。</p><p>1、当k=1，j=2时， n[k] = n[1]= J ， n[j] = n[2] = K ，在ASCLL码中，J小于K，所以 n[k]&gt;n[j] 不成立，不执行条件语句。</p><p>2、当k=1，j=3时， n[k] = n[1]= J ， n[j] = n[3] = C ， 在ASCLL码中，J大于C，所以 n[k]&gt;n[j] 成立， 应当执行if内的赋值语句k=j，将当前j的值赋值给k。 注意：！！！！此时k值改变，下次循环将比较 n[3]与n[4] 。</p><p>3、当j=4时， n[j] = n[4] = E，注意，k不再等于1了， 上次循环已经改变k的值，k=3。所以 n[k] = n[3]= C， 在ASCLL码中，C小于E， 所以 n[k]&gt;n[j] 不成立，不执行条件语句。</p><p>余下以此类推…</p>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ASCLL字符加密</title>
      <link href="/artical/59dc3bf9.html"/>
      <url>/artical/59dc3bf9.html</url>
      
        <content type="html"><![CDATA[<h2 id="大致要求">大致要求:<a class="header-anchor" href="#大致要求">#</a></h2><p>静态:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> d, slen = <span class="number">6</span>;</span><br><span class="line">    <span class="type">char</span> *a = <span class="string">&quot;Weihua&quot;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s &quot;</span>, a);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; slen; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((i + slen / <span class="number">2</span>) &gt; <span class="number">5</span>) &#123;</span><br><span class="line">            d = (<span class="type">int</span>)*(a + i) - (<span class="type">int</span>)*(a + i + slen / <span class="number">2</span> - <span class="number">6</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            d = (<span class="type">int</span>)*(a + i) - (<span class="type">int</span>)*(a + i + slen / <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (; d &lt; <span class="number">97</span>; d += <span class="number">26</span>)</span><br><span class="line">            ;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, d);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>新增可动态输入:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> d, slen;</span><br><span class="line">    <span class="type">char</span> *a, b[<span class="number">20</span>];</span><br><span class="line">    a = b;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please enter:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, a);</span><br><span class="line">    slen = <span class="built_in">strlen</span>(a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s &quot;</span>, a);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; slen; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((i + slen / <span class="number">2</span>) &gt; <span class="number">5</span>) <span class="comment">//使字符串首位相接</span></span><br><span class="line">        &#123;</span><br><span class="line">            d = (<span class="type">int</span>)*(a + i) - (<span class="type">int</span>)*(a + i + slen / <span class="number">2</span> - <span class="number">6</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            d = (<span class="type">int</span>)*(a + i) - (<span class="type">int</span>)*(a + i + slen / <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (; d &lt; <span class="number">97</span>; d += <span class="number">26</span>)</span><br><span class="line">            ;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, d);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>动态数组筛选</title>
      <link href="/artical/6213299b.html"/>
      <url>/artical/6213299b.html</url>
      
        <content type="html"><![CDATA[<p>要求：建立一个动态数组，输入N个学生成绩，筛选出未及格的学生成绩</p><p>利用malloc函数开辟动态存储空间（头部需导入&lt;stdlib.h&gt;文件）,调用check()判断输出.代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 5</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">check</span><span class="params">(<span class="type">int</span> *)</span>;</span><br><span class="line">    <span class="type">int</span> *p1;</span><br><span class="line">    p1 = (<span class="type">int</span> *)<span class="built_in">malloc</span>(N * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please enter:&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, p1 + i);</span><br><span class="line">    &#125;</span><br><span class="line">    check(p1);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">check</span><span class="params">(<span class="type">int</span> *p)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (*(p + i) &lt; <span class="number">60</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, *(p + i));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>结构数组排序</title>
      <link href="/artical/37b3ddae.html"/>
      <url>/artical/37b3ddae.html</url>
      
        <content type="html"><![CDATA[<p>要求：定义有M个同学,每个学生有学号、姓名、分数。现将每个学生的信息按分数由高到低输出。</p><p>利用冒泡排序法对结构体数组重新排序，再打印输出。代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//声明一个名字为Student的数据类型</span></span><br><span class="line"><span class="comment">// your code</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> M 5</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//your code begin</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">        <span class="type">int</span> num;</span><br><span class="line">        <span class="type">char</span> *name;</span><br><span class="line">        <span class="type">float</span> score;</span><br><span class="line">    &#125; stu[M] = &#123;&#123;<span class="number">10101</span>, <span class="string">&quot;Zhang&quot;</span>, <span class="number">78</span>&#125;, &#123;<span class="number">10103</span>, <span class="string">&quot;Wang&quot;</span>, <span class="number">98.5</span>&#125;, &#123;<span class="number">10106</span>, <span class="string">&quot;Li&quot;</span>, <span class="number">86</span>&#125;, &#123;<span class="number">10108</span>, <span class="string">&quot;Ling&quot;</span>, <span class="number">73.5</span>&#125;, &#123;<span class="number">10110</span>, <span class="string">&quot;Fun&quot;</span>, <span class="number">100</span>&#125;&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; M; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; M - j; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (stu[i].score &lt; stu[i + <span class="number">1</span>].score)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">temp</span>;</span></span><br><span class="line">                temp=stu[i];</span><br><span class="line">                stu[i]=stu[i+<span class="number">1</span>];</span><br><span class="line">                stu[i+<span class="number">1</span>]=temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/* code */</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d %s %.2f\n&quot;</span>, stu[i].num, stu[i].name, stu[i].score);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//your code end</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>回文数判断</title>
      <link href="/artical/17704cf2.html"/>
      <url>/artical/17704cf2.html</url>
      
        <content type="html"><![CDATA[<h2 id="什么是回文数-摘自百度百科">什么是回文数?(摘自百度百科)<a class="header-anchor" href="#什么是回文数-摘自百度百科">#</a></h2><p>“回文”是指正读反读都能读通的句子，它是古今中外都有的一种修辞方式和文字游戏，如“我为人人，人人为我”等。在数学中也有这样一类数字有这样的特征，成为回文数（palindrome number）。 [1]  设n是一任意自然数。若将n的各位数字反向排列所得自然数n1与n相等，则称n为一回文数。例如，若n=1234321，则称n为一回文数；但若n=1234567，则n不是回文数。 [1]</p><p>注意：1.偶数个的数字也有回文数124421</p><p>2.小数没有回文数</p><p>中文名 回文数</p><p>外文名 palindrome number</p><p>定    义 正读倒读都一样的整数</p><p>增加一个定义判断: 输入字符判断</p><p>例:abcdcba</p><h2 id="方法一">方法一<a class="header-anchor" href="#方法一">#</a></h2><p>利用 正读倒读都一样 的特性,先将字符数组倒转,判断与原数组是否相等,相等则判断为回文,否则输出 No. 代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> h[<span class="number">20</span>], n[<span class="number">20</span>];</span><br><span class="line">    <span class="type">int</span> mid, d;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, h);</span><br><span class="line">    <span class="built_in">strcpy</span>(n, h); <span class="comment">// strcpy函数,将h复制给n</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;输出n:%s\n&quot;</span>, n);</span><br><span class="line">    d = <span class="built_in">strlen</span>(h); <span class="comment">// strlen函数 直接输出数组长度,或者下面方法循环计数得出</span></span><br><span class="line">    <span class="comment">// for (d = 0; h[d] != &#x27;\0&#x27;; d++); //计数,输入的字符长度i</span></span><br><span class="line">    mid = d / <span class="number">2</span>;</span><br><span class="line">    <span class="comment">//倒换字符数组</span></span><br><span class="line">    <span class="keyword">if</span> (d % <span class="number">2</span> == <span class="number">0</span>) <span class="comment">//长度为偶数</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; mid; i++) &#123;</span><br><span class="line">            <span class="type">char</span> temp;</span><br><span class="line">            temp = h[mid + i];</span><br><span class="line">            h[mid + i] = h[mid - <span class="number">1</span> - i];</span><br><span class="line">            h[mid - <span class="number">1</span> - i] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="comment">//长度为奇数</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= mid; i++) &#123;</span><br><span class="line">            <span class="type">char</span> temp;</span><br><span class="line">            temp = h[mid + i];</span><br><span class="line">            h[mid + i] = h[mid - i];</span><br><span class="line">            h[mid - i] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;输出h:%s,长度%d\n&quot;</span>, h, d);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(h, n) == <span class="number">0</span>) <span class="comment">// strcmp函数 比较两个字符串大小,相等则为0;</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s 是回文数&quot;</span>, n);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s 不是回文数&quot;</span>, n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方法二">方法二<a class="header-anchor" href="#方法二">#</a></h2><p>利用两个指针分别指向字符数组头尾,循环判断每次是否相等.代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">81</span>], *p, *q;</span><br><span class="line">    gets(str); <span class="comment">//输入得到 字符窜</span></span><br><span class="line">    <span class="keyword">for</span> (q = str; *q != <span class="string">&#x27;\0&#x27;</span>; q++)</span><br><span class="line">        ; <span class="comment">//将q指针循环指向到数组中最后一位,即指向 &#x27;\0&#x27;</span></span><br><span class="line">    <span class="comment">// q-- ,使q指针指向数组最后一个字符,而不是结束字符 &#x27;\0&#x27;</span></span><br><span class="line">    <span class="comment">// p=str  使p指针指向数组第一个字符</span></span><br><span class="line">    <span class="comment">//当p&lt;q,且指向的字符相等,执行循环.</span></span><br><span class="line">    <span class="comment">//当p&gt;=q,说明循环执行完成,是回文数</span></span><br><span class="line">    <span class="keyword">for</span> (p = str, q--; (p &lt; q) &amp;&amp; (*p == *q); p++, q--)</span><br><span class="line">        ;</span><br><span class="line">    <span class="keyword">if</span> (p &lt; q)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;yes&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>动态链表节点删除</title>
      <link href="/artical/c23edc96.html"/>
      <url>/artical/c23edc96.html</url>
      
        <content type="html"><![CDATA[<p>链表是一种常见的重要的数据结构，他是动态的进行存储分配的一种结构。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;malloc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span>               <span class="comment">//动态分配内存引入</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NC sizeof(struct student) <span class="comment">//宏定义内存大小</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span>                    //定义结构体数据类型</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> num;              <span class="comment">//学号</span></span><br><span class="line">    <span class="type">int</span> score;            <span class="comment">//分数</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">next</span>;</span> <span class="comment">//下一个结点地址</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> N; <span class="comment">//全局变量,表示链表节点数</span></span><br><span class="line"><span class="comment">//函数声明</span></span><br><span class="line"><span class="keyword">struct</span> student *<span class="title function_">creat</span><span class="params">(<span class="type">void</span>)</span>; <span class="comment">//创建链表</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">()</span>;                <span class="comment">//打印函数</span></span><br><span class="line"><span class="keyword">struct</span> student *<span class="title function_">del</span><span class="params">()</span>;       <span class="comment">//删除函数</span></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">stu</span>, *<span class="title">p</span>;</span></span><br><span class="line">    <span class="type">int</span> num; <span class="comment">//定义需删除的数据的num号</span></span><br><span class="line"></span><br><span class="line">    stu = creat(); <span class="comment">//创建链表,返回头指针head</span></span><br><span class="line">    p = stu;</span><br><span class="line">    print(p); <span class="comment">//打印数据</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Please input the num to delete:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num);</span><br><span class="line">    print(del(p, num)); <span class="comment">//调用del函数后,返回头指针,重新传递给print函数打印出数据</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n\n&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;pause&quot;</span>); <span class="comment">//就是暂停程序的执行，等待任意健继续执行,查看结果,防止一闪而过</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建链表</span></span><br><span class="line"><span class="keyword">struct</span> student *<span class="title function_">creat</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">p1</span>, *<span class="title">p2</span>, *<span class="title">head</span>;</span></span><br><span class="line">    p1 = p2 = (<span class="keyword">struct</span> student *)<span class="built_in">malloc</span>(NC); <span class="comment">//动态分配内存大小</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please input num :&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p1-&gt;num);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;please input score :&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p1-&gt;score);</span><br><span class="line">    head = <span class="literal">NULL</span>; <span class="comment">//初始化</span></span><br><span class="line">    N = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (p1-&gt;num) &#123;</span><br><span class="line">        N++;</span><br><span class="line">        <span class="keyword">if</span> (N == <span class="number">1</span>) &#123;</span><br><span class="line">            head = p1;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            p2-&gt;next = p1;</span><br><span class="line">        &#125;</span><br><span class="line">        p2 = p1;</span><br><span class="line">        p1 = (<span class="keyword">struct</span> student *)<span class="built_in">malloc</span>(NC);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\nplease input num :&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p1-&gt;num);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;please input score :&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p1-&gt;score);</span><br><span class="line">    &#125;</span><br><span class="line">    p2-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出链表</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(<span class="keyword">struct</span> student *head)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">p</span>;</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nThere are %d records!\n&quot;</span>, N);</span><br><span class="line">    p = head;</span><br><span class="line">    <span class="keyword">if</span> (head) &#123;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;学号为%d的同学成绩是:%d\n&quot;</span>, p-&gt;num, p-&gt;score);</span><br><span class="line">            p = p-&gt;next;</span><br><span class="line">        &#125; <span class="keyword">while</span> (p); <span class="comment">// p为NULL时停止循环</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//删除结点</span></span><br><span class="line"><span class="keyword">struct</span> student *<span class="title function_">del</span><span class="params">(<span class="keyword">struct</span> student *head, <span class="type">int</span> num)</span> <span class="comment">//形参</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student</span> *<span class="title">p1</span>, *<span class="title">p2</span>;</span></span><br><span class="line">    <span class="keyword">if</span> (head == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\nThis is a NULL chart!&quot;</span>);</span><br><span class="line">        <span class="keyword">goto</span> END; <span class="comment">//判断链表为空,直接跳转到返回语句</span></span><br><span class="line">    &#125;</span><br><span class="line">    p1 = head; <span class="comment">//不为空赋值给p1</span></span><br><span class="line">    <span class="keyword">while</span> (p1-&gt;num != num &amp;&amp; p1-&gt;next != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        p2 = p1;</span><br><span class="line">        p1 = p1-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (num == p1-&gt;num) &#123;</span><br><span class="line">        <span class="keyword">if</span> (p1 == head) &#123;</span><br><span class="line">            <span class="comment">/* code */</span></span><br><span class="line">            head = p1-&gt;next;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            p2-&gt;next = p1-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\nDelete num:%d data success!&quot;</span>, num);</span><br><span class="line">        N--;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\nnum:%d not been found!&quot;</span>, num);</span><br><span class="line">    &#125;</span><br><span class="line">END:</span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="http://47.101.172.219/wp-content/uploads/2021/08/%E5%9B%BE%E7%89%87-5.png" alt=""></p><h2 id="动态链表插入流程图">动态链表插入流程图<a class="header-anchor" href="#动态链表插入流程图">#</a></h2>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
